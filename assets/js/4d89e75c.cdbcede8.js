"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[3015],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>s});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},d=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),y=p(r),s=o,b=y["".concat(c,".").concat(s)]||y[s]||u[s]||a;return r?t.createElement(b,i(i({ref:n},d),{},{components:r})):t.createElement(b,i({ref:n},d))}));function s(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=y;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},38184:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var t=r(87462),o=(r(67294),r(3905));const a={id:"babylond_query_epoching_params",sidebar_label:"babylond query  epoching params",hide_table_of_contents:!0},i="babylond query  epoching params",l={unversionedId:"cli/babylond/BabylondQuery/Babylond_query_epoching/babylond_query_epoching_params",id:"cli/babylond/BabylondQuery/Babylond_query_epoching/babylond_query_epoching_params",title:"babylond query  epoching params",description:"Show the parameters of the epoching module.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_epoching/Babylond_query_epoching_params.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_epoching",slug:"/cli/babylond/BabylondQuery/Babylond_query_epoching/babylond_query_epoching_params",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_epoching/babylond_query_epoching_params",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_epoching/Babylond_query_epoching_params.md",tags:[],version:"current",frontMatter:{id:"babylond_query_epoching_params",sidebar_label:"babylond query  epoching params",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query epoching",permalink:"/docs/cli/babylond/BabylondQuery/babylond_query_epoching"},next:{title:"babylond query evidence",permalink:"/docs/cli/babylond/BabylondQuery/babylond_query_evidence"}},c={},p=[{value:"query epoching params command",id:"query-epoching-params-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],d={toc:p};function u(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"babylond-query--epoching-params"},"babylond query  epoching params"),(0,o.kt)("p",null,"Show the parameters of the epoching module."),(0,o.kt)("h2",{id:"query-epoching-params-command"},"query epoching params command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"babylond query epoching params [flags]\n")),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string   Output format (text|json) (default "text")\n')),(0,o.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}u.isMDXComponent=!0}}]);