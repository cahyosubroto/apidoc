"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[7227],{3905:(n,e,t)=>{t.d(e,{Zo:()=>y,kt:()=>m});var r=t(67294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var u=r.createContext({}),d=function(n){var e=r.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},y=function(n){var e=d(n.components);return r.createElement(u.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},b=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,a=n.originalType,u=n.parentName,y=l(n,["components","mdxType","originalType","parentName"]),b=d(t),m=o,s=b["".concat(u,".").concat(m)]||b[m]||c[m]||a;return t?r.createElement(s,i(i({ref:e},y),{},{components:t})):r.createElement(s,i({ref:e},y))}));function m(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var a=t.length,i=new Array(a);i[0]=b;var l={};for(var u in e)hasOwnProperty.call(e,u)&&(l[u]=e[u]);l.originalType=n,l.mdxType="string"==typeof n?n:o,i[1]=l;for(var d=2;d<a;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},13279:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var r=t(87462),o=(t(67294),t(3905));const a={id:"babylond_query_mint_inflation",sidebar_label:"babylond query mint inflation",hide_table_of_contents:!0},i="babylond query mint inflation",l={unversionedId:"cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_inflation",id:"cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_inflation",title:"babylond query mint inflation",description:"Querying the current minting inflation value.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_mint/Babylond_query_mint_inflation.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_mint",slug:"/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_inflation",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_inflation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_mint/Babylond_query_mint_inflation.md",tags:[],version:"current",frontMatter:{id:"babylond_query_mint_inflation",sidebar_label:"babylond query mint inflation",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query mint annual-provisions",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_annual-provisions"},next:{title:"babylond query mint params",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_params"}},u={},d=[{value:"query mint inflation command",id:"query-mint-inflation-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],y={toc:d};function c(n){let{components:e,...t}=n;return(0,o.kt)("wrapper",(0,r.Z)({},y,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"babylond-query-mint-inflation"},"babylond query mint inflation"),(0,o.kt)("p",null,"Querying the current minting inflation value."),(0,o.kt)("h2",{id:"query-mint-inflation-command"},"query mint inflation command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"babylond query mint inflation [flags]\n")),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for inflation\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string   Output format (text|json) (default "text")\n')),(0,o.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}c.isMDXComponent=!0}}]);