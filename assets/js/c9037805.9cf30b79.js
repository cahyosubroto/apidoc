"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[356],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>p});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function d(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?d(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):d(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},d=Object.keys(e);for(o=0;o<d.length;o++)t=d[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);for(o=0;o<d.length;o++)t=d[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),s=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return o.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},b=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,d=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),b=s(t),p=r,u=b["".concat(l,".").concat(p)]||b[p]||m[p]||d;return t?o.createElement(u,i(i({ref:n},c),{},{components:t})):o.createElement(u,i({ref:n},c))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var d=t.length,i=new Array(d);i[0]=b;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var s=2;s<d;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}b.displayName="MDXCreateElement"},68404:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>d,metadata:()=>a,toc:()=>s});var o=t(87462),r=(t(67294),t(3905));const d={id:"babylond_tendermint_show-node-id",sidebar_label:"babylond tendermint show-node-id",hide_table_of_contents:!0},i="babylond tendermint show-node-id",a={unversionedId:"cli/babylond/Babylond_tendermint/babylond_tendermint_show-node-id",id:"cli/babylond/Babylond_tendermint/babylond_tendermint_show-node-id",title:"babylond tendermint show-node-id",description:"Show the node\u2019s identifier.",source:"@site/docs/cli/babylond/Babylond_tendermint/Babylond_tendermint_show-node-id.md",sourceDirName:"cli/babylond/Babylond_tendermint",slug:"/cli/babylond/Babylond_tendermint/babylond_tendermint_show-node-id",permalink:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-node-id",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/Babylond_tendermint/Babylond_tendermint_show-node-id.md",tags:[],version:"current",frontMatter:{id:"babylond_tendermint_show-node-id",sidebar_label:"babylond tendermint show-node-id",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond tendermint show-address",permalink:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-address"},next:{title:"babylond tendermint show-validator",permalink:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-validator"}},l={},s=[{value:"tendermint show-node-id command",id:"tendermint-show-node-id-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],c={toc:s};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"babylond-tendermint-show-node-id"},"babylond tendermint show-node-id"),(0,r.kt)("p",null,"Show the node\u2019s identifier."),(0,r.kt)("h2",{id:"tendermint-show-node-id-command"},"tendermint show-node-id command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"babylond tendermint show-node-id [flags]\n")),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-h, --help   help for show-node-id\n")),(0,r.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}m.isMDXComponent=!0}}]);