"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[6018],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=r.createContext({}),b=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=b(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),y=b(n),p=l,s=y["".concat(c,".").concat(p)]||y[p]||u[p]||o;return n?r.createElement(s,a(a({ref:t},d),{},{components:n})):r.createElement(s,a({ref:t},d))}));function p(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,a=new Array(o);a[0]=y;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:l,a[1]=i;for(var b=2;b<o;b++)a[b]=n[b];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},77909:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>b});var r=n(87462),l=(n(67294),n(3905));const o={id:"babylond_query_btclightclient",sidebar_label:"babylond query btclightclient",hide_table_of_contents:!0},a="babylond query btclightclient",i={unversionedId:"cli/babylond/BabylondQuery/babylond_query_btclightclient",id:"cli/babylond/BabylondQuery/babylond_query_btclightclient",title:"babylond query btclightclient",description:"Querying commands for the btclightclient module.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient.md",sourceDirName:"cli/babylond/BabylondQuery",slug:"/cli/babylond/BabylondQuery/babylond_query_btclightclient",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_btclightclient",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient.md",tags:[],version:"current",frontMatter:{id:"babylond_query_btclightclient",sidebar_label:"babylond query btclightclient",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query btccheckpoint params",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_params"},next:{title:"babylond query btclightclient base-header",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_base-header"}},c={},b=[{value:"query btclightclient commands",id:"query-btclightclient-commands",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],d={toc:b};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"babylond-query-btclightclient"},"babylond query btclightclient"),(0,l.kt)("p",null,"Querying commands for the btclightclient module."),(0,l.kt)("h2",{id:"query-btclightclient-commands"},"query btclightclient commands"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"  babylond query btclightclient [flags]\n  babylond query btclightclient [command]\n")),(0,l.kt)("h2",{id:"options"},"Options"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"-h, --help   help for btclightclient\n")),(0,l.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}u.isMDXComponent=!0}}]);