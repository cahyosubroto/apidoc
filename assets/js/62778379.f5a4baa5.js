"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[6352],{3905:(e,o,r)=>{r.d(o,{Zo:()=>d,kt:()=>y});var t=r(67294);function n(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function a(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?a(Object(r),!0).forEach((function(o){n(e,o,r[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))}))}return e}function p(e,o){if(null==e)return{};var r,t,n=function(e,o){if(null==e)return{};var r,t,n={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],o.indexOf(r)>=0||(n[r]=e[r]);return n}(e,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],o.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=t.createContext({}),s=function(e){var o=t.useContext(i),r=o;return e&&(r="function"==typeof e?e(o):l(l({},o),e)),r},d=function(e){var o=s(e.components);return t.createElement(i.Provider,{value:o},e.children)},c={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},u=t.forwardRef((function(e,o){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=s(r),y=n,b=u["".concat(i,".").concat(y)]||u[y]||c[y]||a;return r?t.createElement(b,l(l({ref:o},d),{},{components:r})):t.createElement(b,l({ref:o},d))}));function y(e,o){var r=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var a=r.length,l=new Array(a);l[0]=u;var p={};for(var i in o)hasOwnProperty.call(o,i)&&(p[i]=o[i]);p.originalType=e,p.mdxType="string"==typeof e?e:n,l[1]=p;for(var s=2;s<a;s++)l[s]=r[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},89787:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var t=r(87462),n=(r(67294),r(3905));const a={id:"babylond_query_gov_proposals",sidebar_label:"babylond query gov proposals",hide_table_of_contents:!0},l="babylond query gov proposals",p={unversionedId:"cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposals",id:"cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposals",title:"babylond query gov proposals",description:"Querying details for all the proposals that match the specified filters.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_gov/Babylond_query_gov_proposals.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_gov",slug:"/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposals",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposals",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_gov/Babylond_query_gov_proposals.md",tags:[],version:"current",frontMatter:{id:"babylond_query_gov_proposals",sidebar_label:"babylond query gov proposals",hide_table_of_contents:!0}},i={},s=[{value:"query gov proposals command",id:"query-gov-proposals-command",level:2},{value:"Example Command",id:"example-command",level:3},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],d={toc:s};function c(e){let{components:o,...r}=e;return(0,n.kt)("wrapper",(0,t.Z)({},d,r,{components:o,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"babylond-query-gov-proposals"},"babylond query gov proposals"),(0,n.kt)("p",null,"Querying details for all the proposals that match the specified filters."),(0,n.kt)("h2",{id:"query-gov-proposals-command"},"query gov proposals command"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"babylond query gov proposal [proposal-id] [flags]\n")),(0,n.kt)("h3",{id:"example-command"},"Example Command"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"$ babylond query gov proposals --page=2 --limit=100\n")),(0,n.kt)("h2",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for proposal\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string   Output format (text|json) (default "text")\n')),(0,n.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}c.isMDXComponent=!0}}]);