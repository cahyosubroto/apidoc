"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[7435],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>y});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=r.createContext({}),b=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=b(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),h=b(n),y=l,u=h["".concat(c,".").concat(y)]||h[y]||d[y]||a;return n?r.createElement(u,i(i({ref:t},s),{},{components:n})):r.createElement(u,i({ref:t},s))}));function y(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=h;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var b=2;b<a;b++)i[b]=n[b];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},54446:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>b});var r=n(87462),l=(n(67294),n(3905));const a={id:"babylond_query_btclightclient_hashes",sidebar_label:"babylond query btclightclient hashes",hide_table_of_contents:!0},i="babylond query btclightclient hashes",o={unversionedId:"cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes",id:"cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes",title:"babylond query btclightclient hashes",description:"Retrieve the hashes maintained by the btclightclient module.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_btclightclient",slug:"/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes.md",tags:[],version:"current",frontMatter:{id:"babylond_query_btclightclient_hashes",sidebar_label:"babylond query btclightclient hashes",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query btclightclient contains",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_contains"},next:{title:"babylond query btclightclient main-chain",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_main-chain"}},c={},b=[{value:"query btclightclient hashes command",id:"query-btclightclient-hashes-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],s={toc:b};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"babylond-query-btclightclient-hashes"},"babylond query btclightclient hashes"),(0,l.kt)("p",null,"Retrieve the hashes maintained by the btclightclient module."),(0,l.kt)("h2",{id:"query-btclightclient-hashes-command"},"query btclightclient hashes command"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"babylond query btclightclient hashes [flags]\n")),(0,l.kt)("h2",{id:"options"},"Options"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for hashes\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string   Output format (text|json) (default "text")\n')),(0,l.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}d.isMDXComponent=!0}}]);