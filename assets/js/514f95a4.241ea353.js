"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[8707],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),b=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=b(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=b(n),y=o,s=u["".concat(i,".").concat(y)]||u[y]||p[y]||c;return n?r.createElement(s,a(a({ref:t},d),{},{components:n})):r.createElement(s,a({ref:t},d))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,a=new Array(c);a[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var b=2;b<c;b++)a[b]=n[b];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},23640:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>b});var r=n(87462),o=(n(67294),n(3905));const c={id:"babylond_query_btccheckpoint",sidebar_label:"babylond query btccheckpoint",hide_table_of_contents:!0},a="babylond query btccheckpoint",l={unversionedId:"cli/babylond/BabylondQuery/babylond_query_btccheckpoint",id:"cli/babylond/BabylondQuery/babylond_query_btccheckpoint",title:"babylond query btccheckpoint",description:"Querying commands for the btccheckpoint module.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint.md",sourceDirName:"cli/babylond/BabylondQuery",slug:"/cli/babylond/BabylondQuery/babylond_query_btccheckpoint",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_btccheckpoint",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint.md",tags:[],version:"current",frontMatter:{id:"babylond_query_btccheckpoint",sidebar_label:"babylond query btccheckpoint",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query block",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_block"},next:{title:"babylond query btccheckpoint btc-height",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_btc-height"}},i={},b=[{value:"query btccheckpoint commands",id:"query-btccheckpoint-commands",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],d={toc:b};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"babylond-query-btccheckpoint"},"babylond query btccheckpoint"),(0,o.kt)("p",null,"Querying commands for the btccheckpoint module."),(0,o.kt)("h2",{id:"query-btccheckpoint-commands"},"query btccheckpoint commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  babylond query btccheckpoint [flags]\n  babylond query btccheckpoint [command]\n")),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -h, --help   help for btccheckpoint\n")),(0,o.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourUsernameSystem>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}p.isMDXComponent=!0}}]);