"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[5677],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=o.createContext({}),d=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},b=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),b=d(n),y=i,m=b["".concat(l,".").concat(y)]||b[y]||c[y]||r;return n?o.createElement(m,a(a({ref:t},u),{},{components:n})):o.createElement(m,a({ref:t},u))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var d=2;d<r;d++)a[d]=n[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}b.displayName="MDXCreateElement"},74088:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var o=n(87462),i=(n(67294),n(3905));const r={id:"babylond_query_distribution_commission",sidebar_label:"babylond query distribution commission",hide_table_of_contents:!0},a="babylond query distribution commission",s={unversionedId:"cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_commission",id:"cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_commission",title:"babylond query distribution commission",description:"Querying distribution validator commission.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_commission.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_distribution",slug:"/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_commission",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_commission",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_commission.md",tags:[],version:"current",frontMatter:{id:"babylond_query_distribution_commission",sidebar_label:"babylond query distribution commission",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query distribution",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_distribution"},next:{title:"babylond query distribution community-pool",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_community-pool"}},l={},d=[{value:"query distribution commission command",id:"query-distribution-commission-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],u={toc:d};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"babylond-query-distribution-commission"},"babylond query distribution commission"),(0,i.kt)("p",null,"Querying distribution validator commission."),(0,i.kt)("h2",{id:"query-distribution-commission-command"},"query distribution commission command"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"babylond query distribution commission [validator] [flags]\n")),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for commission\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string   Output format (text|json) (default "text")\n')),(0,i.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}c.isMDXComponent=!0}}]);