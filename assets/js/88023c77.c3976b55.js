"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[5391],{3905:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>y});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function b(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function d(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),u=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):b(b({},r),e)),n},p=function(e){var r=u(e.components);return t.createElement(l.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},i=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),i=u(n),y=a,s=i["".concat(l,".").concat(y)]||i[y]||c[y]||o;return n?t.createElement(s,b(b({ref:r},p),{},{components:n})):t.createElement(s,b({ref:r},p))}));function y(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,b=new Array(o);b[0]=i;var d={};for(var l in r)hasOwnProperty.call(r,l)&&(d[l]=r[l]);d.originalType=e,d.mdxType="string"==typeof e?e:a,b[1]=d;for(var u=2;u<o;u++)b[u]=n[u];return t.createElement.apply(null,b)}return t.createElement.apply(null,n)}i.displayName="MDXCreateElement"},5558:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>b,default:()=>c,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var t=n(87462),a=(n(67294),n(3905));const o={id:"babylonddebugpubkeyraw",sidebar_label:"babylond debug pubkey-raw",hide_table_of_contents:!0},b="babylond debug pubkey-raw",d={unversionedId:"cli/babylond/debug/babylonddebugpubkeyraw",id:"cli/babylond/debug/babylonddebugpubkeyraw",title:"babylond debug pubkey-raw",description:"Decode an ED25519 or secp256k1 pubkey from hex, base64, or bech32.",source:"@site/docs/cli/babylond/debug/babylonddebugpubkeyraw.md",sourceDirName:"cli/babylond/debug",slug:"/cli/babylond/debug/babylonddebugpubkeyraw",permalink:"/docs/cli/babylond/debug/babylonddebugpubkeyraw",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/debug/babylonddebugpubkeyraw.md",tags:[],version:"current",frontMatter:{id:"babylonddebugpubkeyraw",sidebar_label:"babylond debug pubkey-raw",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond debug pubkey",permalink:"/docs/cli/babylond/debug/babylonddebugpubkey"},next:{title:"babylond debug raw-bytes",permalink:"/docs/cli/babylond/debug/babylonddebugrawbytes"}},l={},u=[{value:"debug pubkey-raw command",id:"debug-pubkey-raw-command",level:2},{value:"Example Command",id:"example-command",level:3},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],p={toc:u};function c(e){let{components:r,...n}=e;return(0,a.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"babylond-debug-pubkey-raw"},"babylond debug pubkey-raw"),(0,a.kt)("p",null,"Decode an ED25519 or secp256k1 pubkey from hex, base64, or bech32."),(0,a.kt)("h2",{id:"debug-pubkey-raw-command"},"debug pubkey-raw command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"babylond debug pubkey-raw [pubkey] -t [{ed25519, secp256k1}] [flags]\n")),(0,a.kt)("h3",{id:"example-command"},"Example Command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'$ babylond debug pubkey-raw pubkey \'{"@type":"/cosmos.crypto.ed25519.PubKey","key":"ParrauoA7jvfPd1AmmtyOvWM2rJSwipXfRf8yD6pLbA3DD"}\'\n')),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'  -h, --help          help for pubkey-raw\n  -t, --type string   Pubkey type to decode (oneof secp256k1, ed25519) (default "ed25519")\n')),(0,a.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'--home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n--log_format string   The logging format (json|plain) (default "plain")\n--log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n--trace               print out full stack trace on e\n')))}c.isMDXComponent=!0}}]);