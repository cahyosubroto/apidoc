"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[1794],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>p});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function b(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),i=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):b(b({},t),e)),r},c=function(e){var t=i(e.components);return n.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=i(r),p=a,y=s["".concat(d,".").concat(p)]||s[p]||u[p]||o;return r?n.createElement(y,b(b({ref:t},c),{},{components:r})):n.createElement(y,b({ref:t},c))}));function p(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,b=new Array(o);b[0]=s;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,b[1]=l;for(var i=2;i<o;i++)b[i]=r[i];return n.createElement.apply(null,b)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},58358:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>b,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var n=r(87462),a=(r(67294),r(3905));const o={id:"babylonddebugrawbytes",sidebar_label:"babylond debug raw-bytes",hide_table_of_contents:!0},b="babylond debug raw-bytes",l={unversionedId:"cli/babylond/debug/babylonddebugrawbytes",id:"cli/babylond/debug/babylonddebugrawbytes",title:"babylond debug raw-bytes",description:"Convert raw bytes output to hex.",source:"@site/docs/cli/babylond/debug/babylonddebugrawbytes.md",sourceDirName:"cli/babylond/debug",slug:"/cli/babylond/debug/babylonddebugrawbytes",permalink:"/apidoc/docs/cli/babylond/debug/babylonddebugrawbytes",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/debug/babylonddebugrawbytes.md",tags:[],version:"current",frontMatter:{id:"babylonddebugrawbytes",sidebar_label:"babylond debug raw-bytes",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond debug pubkey-raw",permalink:"/apidoc/docs/cli/babylond/debug/babylonddebugpubkeyraw"},next:{title:"babylond export",permalink:"/apidoc/docs/cli/babylond/babylondexport"}},d={},i=[{value:"debug raw-bytes command",id:"debug-raw-bytes-command",level:2},{value:"Example Command",id:"example-command",level:3},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],c={toc:i};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"babylond-debug-raw-bytes"},"babylond debug raw-bytes"),(0,a.kt)("p",null,"Convert raw bytes output to hex."),(0,a.kt)("h2",{id:"debug-raw-bytes-command"},"debug raw-bytes command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"babylond debug raw-bytes [raw-bytes] [flags]\n")),(0,a.kt)("h3",{id:"example-command"},"Example Command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ babylond debug raw-bytes \\[72 100 100 120 115 70 12 12 88 90 121 103 114 111 117 110 100\\]\n")),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"-h, --help   help for raw-bytes\n")),(0,a.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'--home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n--log_format string   The logging format (json|plain) (default "plain")\n--log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n--trace               print out full stack trace on errors\n')))}u.isMDXComponent=!0}}]);