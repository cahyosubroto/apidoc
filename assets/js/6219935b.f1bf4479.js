"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[1480],{3905:(e,t,n)=>{n.d(t,{Zo:()=>b,kt:()=>s});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=o.createContext({}),d=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=d(e.components);return o.createElement(u.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,u=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),c=d(n),s=a,p=c["".concat(u,".").concat(s)]||c[s]||y[s]||r;return n?o.createElement(p,l(l({ref:t},b),{},{components:n})):o.createElement(p,l({ref:t},b))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=c;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var d=2;d<r;d++)l[d]=n[d];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},38748:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>y,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var o=n(87462),a=(n(67294),n(3905));const r={id:"babylond_query_bank_total",sidebar_label:"babylond query bank total",hide_table_of_contents:!0},l="babylond query bank total",i={unversionedId:"cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total",id:"cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total",title:"babylond query bank total",description:"Querying the total supply of the chain\u2019s coin.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_bank/Babylond_query_bank_total.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_bank",slug:"/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_bank/Babylond_query_bank_total.md",tags:[],version:"current",frontMatter:{id:"babylond_query_bank_total",sidebar_label:"babylond query bank total",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query bank denom-metadata",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_denom_metadata"},next:{title:"babylond query block",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_block"}},u={},d=[{value:"query bank total command",id:"query-bank-total-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],b={toc:d};function y(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"babylond-query-bank-total"},"babylond query bank total"),(0,a.kt)("p",null,"Querying the total supply of the chain\u2019s coin."),(0,a.kt)("h2",{id:"query-bank-total-command"},"query bank total command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"babylond query bank total [flags]\n")),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'      --count-total       count total number of records in all supply totals to query for\n      --denom string      The specific balance denomination to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for total\n      --limit uint        pagination limit of all supply totals to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint       pagination offset of all supply totals to query for\n  -o, --output string     Output format (text|json) (default "text")\n      --page uint         pagination page of all supply totals to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of all supply totals to query for\n      --reverse           results are sorted in descending order\n')),(0,a.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}y.isMDXComponent=!0}}]);