"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[367],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>c});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),y=d(r),c=o,p=y["".concat(l,".").concat(c)]||y[c]||b[c]||a;return r?n.createElement(p,i(i({ref:t},u),{},{components:r})):n.createElement(p,i({ref:t},u))}));function c(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=y;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},60956:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>b,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var n=r(87462),o=(r(67294),r(3905));const a={id:"babylond_query_distribution_slashes",sidebar_label:"babylond query distribution slashes",hide_table_of_contents:!0},i="babylond query distribution slashes",s={unversionedId:"cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes",id:"cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes",title:"babylond query distribution slashes",description:"Querying all slashes of a validator for the given block height.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_slashes.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_distribution",slug:"/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_slashes.md",tags:[],version:"current",frontMatter:{id:"babylond_query_distribution_slashes",sidebar_label:"babylond query distribution slashes",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query distribution rewards",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_rewards"},next:{title:"babylond query distribution validator-outstanding-rewards",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_validator-outstanding-rewards"}},l={},d=[{value:"query distribution slashes command",id:"query-distribution-slashes-command",level:2},{value:"Example Command",id:"example-command",level:3},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],u={toc:d};function b(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"babylond-query-distribution-slashes"},"babylond query distribution slashes"),(0,o.kt)("p",null,"Querying all slashes of a validator for the given block height."),(0,o.kt)("h2",{id:"query-distribution-slashes-command"},"query distribution slashes command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"babylond query distribution slashes [validator] [start-height] [end-height] [flags]\n")),(0,o.kt)("h3",{id:"example-command"},"Example Command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ babylond query distribution slashes babylond12346ccd8ay0zduzj64hwre2fxs9ldmqhffj 0 50\n")),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --count-total       count total number of records in validator slashes to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for slashes\n      --limit uint        pagination limit of validator slashes to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint       pagination offset of validator slashes to query for\n  -o, --output string     Output format (text|json) (default "text")\n      --page uint         pagination page of validator slashes to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of validator slashes to query for\n      --reverse           results are sorted in descending order\n')),(0,o.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}b.isMDXComponent=!0}}]);