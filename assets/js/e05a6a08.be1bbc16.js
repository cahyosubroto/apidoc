"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[2064],{3905:(a,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>c});var n=t(67294);function l(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function r(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function o(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){l(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function i(a,e){if(null==a)return{};var t,n,l=function(a,e){if(null==a)return{};var t,n,l={},r=Object.keys(a);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||(l[t]=a[t]);return l}(a,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(l[t]=a[t])}return l}var d=n.createContext({}),b=function(a){var e=n.useContext(d),t=e;return a&&(t="function"==typeof a?a(e):o(o({},e),a)),t},p=function(a){var e=b(a.components);return n.createElement(d.Provider,{value:e},a.children)},s={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},y=n.forwardRef((function(a,e){var t=a.components,l=a.mdxType,r=a.originalType,d=a.parentName,p=i(a,["components","mdxType","originalType","parentName"]),y=b(t),c=l,m=y["".concat(d,".").concat(c)]||y[c]||s[c]||r;return t?n.createElement(m,o(o({ref:e},p),{},{components:t})):n.createElement(m,o({ref:e},p))}));function c(a,e){var t=arguments,l=e&&e.mdxType;if("string"==typeof a||l){var r=t.length,o=new Array(r);o[0]=y;var i={};for(var d in e)hasOwnProperty.call(e,d)&&(i[d]=e[d]);i.originalType=a,i.mdxType="string"==typeof a?a:l,o[1]=i;for(var b=2;b<r;b++)o[b]=t[b];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},74743:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>s,frontMatter:()=>r,metadata:()=>i,toc:()=>b});var n=t(87462),l=(t(67294),t(3905));const r={id:"cli",sidebar_label:"CLI Command Overview",hide_table_of_contents:!0},o="CLI Command Overview",i={unversionedId:"cli/babylond/cli",id:"cli/babylond/cli",title:"CLI Command Overview",description:"- babylond - Babylon App",source:"@site/docs/cli/babylond/cli.md",sourceDirName:"cli/babylond",slug:"/cli/babylond/cli",permalink:"/docs/cli/babylond/cli",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/cli.md",tags:[],version:"current",frontMatter:{id:"cli",sidebar_label:"CLI Command Overview",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"Support",permalink:"/docs/support"},next:{title:"babylond app",permalink:"/docs/cli/babylond/"}},d={},b=[],p={toc:b};function s(a){let{components:e,...t}=a;return(0,l.kt)("wrapper",(0,n.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"cli-command-overview"},"CLI Command Overview"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/"},"babylond")," - Babylon App"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylondaddgenesisaccount"},"add-genesis-account")," -This is a Cosmos Native CLI, it adds a genesis account to genesis.json")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylondaddgenesisbls"},"add-genesis-bls")," -This is a Babylon-specific CLI, it adds a genesis BLS Key to genesis.json")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylondcollectgentxs"},"collect-gentxs")," - This is a Cosmos Native CLI, it collects genesis txs and outputs a genesis.json file")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylondconfig"},"config")," - This is a Cosmos Native CLI, it creates or queries an application CLI configuration file")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylondcreatebls"},"create-bls-key")," - This is a Babylon-specific CLI, it creates a pair of BLS keys for a validator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylondcreategenesiskey"},"create-genesis-bls")," - This is a Babylon-specific CLI, it creates a genesis BLS key file for the validator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/debug/babylonddebug"},"debug")," - This is a Cosmos Native CLI, it is a tool for helping with debugging your application"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/debug/babylonddebugaddr"},"addr")," - Convert an address between hex and bech32")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/debug/babylonddebugpubkey"},"pubkey")," - Decode a pubkey from proto JSON")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/debug/babylonddebugpubkeyraw"},"pubkey-raw")," - Decode a ED25519 or secp256k1 pubkey from hex, base64, or bech32")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/debug/babylonddebugrawbytes"},"raw-bytes")," - Convert raw bytes output (eg. ","[10 21 13 255]",") to hex")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylondexport"},"export")," - This is a Cosmos Native CLI, it exports the state to JSON")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylondgentx"},"gentx")," -  This is a Cosmos Native CLI, it generates a genesis tx carrying a self delegation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylondhelp"},"help")," - This is a Cosmos Native CLI, it helps with any command")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylondinit"},"init")," - This is a Cosmos Native CLI, it initializes the private validator, p2p, genesis, and application configuration files")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/keys/babylondkeys"},"keys")," - This is a Cosmos Native CLI, it manages your application\u2019s keys"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/keys/babylondkeysdd"},"add")," - Add an encrypted private key (either newly generated or recovered), encrypt it, and save to your file name")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/keys/babylondkeysdelete"},"delete")," - Delete the given keys")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/keys/babylondkeysexport"},"export")," - Export private keys")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/keys/babylondkeysimport"},"import")," - Import private keys into the local keybase")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/keys/babylondkeyslist"},"list")," - List all keys")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/keys/babylondkeysmigrate"},"migrate")," - Migrate keys from amino to proto serialization format")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/keys/babylondkeysmnemonic"},"mnemonic")," - Compute the bip39 mnemonic for some input entropy")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/keys/babylondkeysparse"},"parse")," - Parse address from hex to bech32 and vice versa")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/keys/babylondkeysrename"},"rename")," - Rename an existing key")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/keys/babylondkeysshow"},"show")," - Retrieve key information by name or address")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/migrate"},"migrate")," - This is a Cosmos Native CLI, it migrates genesis to a specified target version")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/preparegenesis"},"prepare-genesis")," - This is a Babylon-specific CLI, it prepares a genesis file")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylond_query"},"query")," - Querying subcommand"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_account"},"account")," - This is a Cosmos Native CLI, it queries for an account by address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_auth"},"auth")," - This is a Cosmos Native CLI, it queries commands for the auth module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_account"},"account")," - Query for account by address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_accounts"},"accounts")," - Query all the accounts")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_address_by_acc_num"},"address-by-acc-num")," - Query for an address by account number")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_account"},"module-account")," - Query module account info by module name")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_accounts"},"module-accounts")," - Query all the module accounts")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_params"},"params")," - Query the current auth parameters")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_authz"},"authz")," - This is a Cosmos Native CLI, it queries commands for the authz module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_authz/babylond_query_authz_grants"},"grants")," - Query grans for a granter-grantee pair and optionally a msg-type-url"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_grantee"},"grants-by-grantee")," - Query authorization grants granted to a grantee")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_granter"},"grants-by-granter")," - Query authorization grants granted by granter")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_bank"},"bank")," - This is a Cosmos Native CLI, it queries commands for the bank module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_balances"},"balances")," - Query for account balances by address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_denom_metadata"},"denom-metadata")," - Query the client metadata for coin denominations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total"},"total")," - Query the total supply of coins of the chain")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_block"},"block")," - This is a Cosmos Native CLI, it gets the verified data by the given height")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_btccheckpoint"},"btccheckpoint")," - This is a Babylon-specific CLI, it queries commands for the btccheckpoint module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_btc-height"},"btc-height")," - Retrieve the earliest btc height for the given epoch")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_epoch_submissions"},"epoch-submissions")," - All the checkpoint submissions for the given epoch")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_params"},"params")," - Show the parameters of the module")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_btclightclient"},"btclightclient")," - This is a Babylon-specific CLI, it queries commands for the btclightclient module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_base-header"},"base-header")," - Retrieve the base header of the bitcoin blockchain")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_contains"},"contains")," - Check whether the module maintains a hash")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes"},"hashes")," - Retrieve the hashes maintained by this module")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_main-chain"},"main-chain")," - Retrieve the canonical chain")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_params"},"params")," - Show the parameters of the module")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip"},"tip")," - Retrieve the tip of the bitcoin blockchain")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_checkpointing"},"checkpointing")," - This is a Babylon-specific CLI, it queries commands for the checkpointing module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_params"},"params")," - Show the parameters of the module")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_raw_checkpoint"},"raw-checkpoint")," - Retrieve the checkpoint by epoch number")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/Babylond_query_checkpointing_raw-checkpoint/babylond_query_checkpointing_raw-checkpoint_list"},"raw-checkpoint-list")," - Retrieve the checkpoints by status")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_distribution"},"distribution")," - This is a Cosmos Native CLI, it queries commands for the distribution module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_commission"},"commission")," - Query distribution validator commission")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_community-pool"},"community-pool")," - Query the amount of coins in the community pool")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_params"},"params")," - Query distribution params")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_rewards"},"rewards")," - Query all distribution delegator rewards or rewards from a particular validator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes"},"slashes")," - Query distribution validator slashes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_validator-outstanding-rewards"},"validator-outstanding-rewards")," - Query distribution outstanding (un-withdrawn) rewards for validator and all their delegations")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_epoching"},"epoching")," - This is a Babylon-specific CLI, it queries commands for the epoching module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_epoching/babylond_query_epoching_params"},"params")," - shows the parameters of the module"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_evidence"},"evidence"),"  - This is a Cosmos Native CLI, it queries commands for evidence by a hash or for all the paginated submitted evidence")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_freegrant"},"feegrant")," - This is a Cosmos Native CLI, it queries commands for the feegrant module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grant"},"grant")," - Query details of a single grant")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-grantee"},"grants-by-grantee")," - Query all grants of a grantee")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-granter"},"grants-by-granter")," - Query all grants by a granter")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_gov"},"gov")," - This is a Cosmos Native CLI, it queries commands for the governance module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposit"},"deposit")," - Query details of a deposit")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposits"},"deposits")," - Query deposits on a proposal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_param"},"param")," - Query the parameters (voting|tallying|deposit) of the governance process")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_params"},"params")," - Query the parameters of the governance process")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposal"},"proposal")," - Query details of a single proposal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposals"},"proposals")," - Query proposals with optional filters")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposer"},"proposer")," - Query the proposer of a governance proposal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_tally"},"tally")," - Get the tally of a proposal vote")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_vote"},"vote")," - Query details of a single vote")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_votes"},"votes")," - Query votes on a proposal")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc"},"ibc")," - This is a Cosmos Native CLI, it queries commands for the IBC module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel"},"channel")," - IBC channel query subcommands"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_channels"},"channels")," - Query all channels")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_client-state"},"client-state")," - Query the client state associated with a channel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_connections"},"connections")," - Query all channels associated with a connection")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_end"},"end")," - Query a channel end")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_next-sequence-receive"},"next-sequence-receive")," - Query a next-receive sequence")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-ack"},"packet-ack")," - Query a packet acknowledgement")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitment"},"packet-commitment")," - Query a packet commitment")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitments"},"packet-commitments")," - Query all packet commitments associated with a channel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-receipt"},"packet-receipt")," - Query a packet receipt")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-acks"},"unreceived-acks")," - Query all the unreceived acks associated with a channel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-packets"},"unreceived-packets")," - Query all the unreceived packets associated with a channel")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client"},"client")," - IBC client query subcommands"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state"},"consensus-state")," - Query the consensus state of a client at a given height")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights"},"consensus-state-heights")," - Query the heights of all consensus states of a client.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-states"},"consensus-states")," - Query all the consensus states of a client.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_header"},"header")," - Query the latest header of the running chain")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_params"},"params")," - Query the current ibc client parameters")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_self-consensus-state"},"self-consensus-state")," - Query the self-consensus state for this chain")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_state"},"state")," - Query a client state")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_states"},"states")," - Query all available light clients")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_status"},"status")," - Query client status")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection"},"connection")," - IBC connection query subcommands"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections"},"connections")," - Query all connections")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_end"},"end")," - Query stored connection end")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_path"},"path")," - Query stored client connection paths")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer"},"ibc-transfer")," - This is a Cosmos Native CLI, it queries the subcommands for the ibc fungible token transfer module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-hash"},"denom-hash")," - Query the denom hash info from a given denom trace")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-trace"},"denom-trace")," - Query the denom trace info from a given trace hash or ibc denom")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces"},"denom-traces")," - Query the trace info for all token denominations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_escrow-address"},"escrow-address")," - Get the escrow address for a channel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_params"},"params")," - Query the current ibc-transfer parameters")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_mint"},"mint")," - This is a Cosmos Native CLI, it queries commands for the minting module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_annual-provisions"},"annual-provisions")," - Query the current minting annual provisions value")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_inflation"},"inflation")," - Query the current minting inflation value")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_params"},"params")," - Query the current minting parameters")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_params"},"params")," - This is a Cosmos Native CLI, it queries commands for the params module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_params/babylond_query_params_subspace"},"subspace")," - Query for raw parameters by subspace and key"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_slashing"},"slashing")," - This is a Cosmos Native CLI, it queries commands for the slashing module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_params"},"params")," - Query the current slashing parameters")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-info"},"signing-info")," - Query a validator's signing information")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-infos"},"signing-infos")," - Query signing information of all validators")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_staking"},"staking")," - This is a Cosmos Native CLI, it queries commands for the staking module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegation"},"delegation")," - Query a delegation based on address and validator address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations"},"delegations")," - Query all delegations made by one delegator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations-to"},"delegations-to")," - Query all delegations made to one validator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_historical-info"},"historical-info")," - Query historical info at a given height")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_params"},"params")," - Query the current staking parameters information")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_pool"},"pool")," - Query the current staking pool values")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation"},"redelegation")," - Query a redelegation record based on the delegator and a source and destination validator address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegations"},"redelegations")," - Query all redelegations records for one delegator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation-from"},"redelegations-from")," - Query all outgoing redelegations from a validator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegation"},"unbonding-delegation")," - Query an unbonding-delegation record based on the delegator and validator address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations"},"unbonding-delegations")," - Query all unbonding-delegations records for one delegator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations-from"},"unbonding-delegations-from")," - Query all unbonding delegations from a validator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validator"},"validator")," - Query a validator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validators"},"validators")," - Query for all validators")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_tendermint-validator-set"},"tendermint-validator-set")," - Get the full tendermint validator set at a given height")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_tx"},"tx"),"  - This is a Cosmos Native CLI, it queries  a transaction by hash ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_txs"},"txs")," - This is a Cosmos Native CLI, it queries paginated transactions that match a set of events")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_upgrade"},"upgrade")," - This is a Cosmos Native CLI, it queries commands for the upgrade module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_applied"},"applied")," - Block header for height at which a completed upgrade was applied")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_module_versions"},"module_versions")," - Get the list of module versions")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_plan"},"plan")," - Get upgrade plan (if one exists)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/BabylondQuery/babylond_query_zoneconcierge"},"zoneconcierge")," - This is a Babylon-specific CLI, it queries commands for the zoneconcierge module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cli/babylond/BabylondQuery/Babylond_query_zoneconcierge/babylond_query_zoneconcierge_params"},"params")," - Show the parameters of the module"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylond_rollback"},"rollback")," - This is a Cosmos Native CLI, it rolls back cosmos-sdk and tendermint state by one height")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylond_rosetta"},"rosetta")," - This is a Cosmos Native CLI, it spins up a rosetta server")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylond_start"},"start")," - This is a Cosmos Native CLI, it runs the full node")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylond_status"},"status")," - This is a Cosmos Native CLI, it queries the remote node for status")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylond_tendermint"},"tendermint")," -This is a Cosmos Native CLI, it queries the subcommands for tendermint module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_reset-state"},"reset-state")," - Remove all the data and WAL")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-address"},"show-address")," - Shows this node's tendermint validator consensus address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-node-id"},"show-node-id")," - Show this node's ID")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-validator"},"show-validator")," - Show this node's tendermint validator info")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_unsafe-reset-all"},"unsafe-reset-all unsafe")," - Remove all the data and WAL, reset this node's validator to the genesis state")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_version"},"version")," - Print tendermint libraries' version")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylond_testnet"},"testnet")," - This is a Babylon-specific CLI, it initialize files for a Babylon testnet")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylond_tx"},"tx")," - Transactions subcommand"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_authz"},"authz")," - This is a Cosmos Native CLI, it queries the subcommands for authorization transactions "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_exec"},"exec")," - execute tx on behalf of granter account")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_grant"},"grant")," - Grant authorization to an address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_revoke"},"revoke")," - revoke authorization")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_bank"},"bank")," - This is a Cosmos Native CLI, it queries subcommand for Bank module "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_multi-send"},"multi-send")," - Send funds from one account to two or more accounts.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_send"},"send")," - Send funds from one account to another.")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_broadcast"},"broadcast")," - This is a Cosmos Native CLI, it broadcast transactions generated offline")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_btccheckpoint"},"btccheckpoint")," - This is a Babylon-specific CLI, it queries subcommands for btccheckpoint transactions")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_btclightclient"},"btclightclient")," - This is a Babylon-specific CLI, it queries subcommands for btclightclient transactions"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_btclightclient/babylond_tx_btclightclient_insert-header"},"insert-header")," - Submit BTC header bytes"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_checkpointing"},"checkpointing")," - This is a Babylon-specific CLI, it queries subcommands for checkpointing transactions"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_create-validator"},"create-validator")," - Create a new validator initialized with a self-delegation to it")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_submit"},"submit")," - submit a BLS signature")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_crisis"},"crisis")," - This is a Cosmos Native CLI, it queries subcommand for crisis transactions "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_crisis/babylond_tx_crisis_invariant-broken"},"invariant-broken")," - Submit proof that an invariant broken to halt the chain"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_decode"},"decode")," - This is a Cosmos Native CLI, it decodes a binary encoded transaction string ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_distribution"},"distribution")," - This is a Cosmos Native CLI, it queries subcommand for Distribution transactions "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_fund-community-pool"},"fund-community-pool")," - Funds the community pool with the specified amount")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_set-withdraw-addr"},"set-withdraw-addr")," - Change the default withdraw address for rewards associated with an address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-all-rewards"},"withdraw-all-rewards")," - Withdraw all delegations rewards for a delegator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-rewards"},"withdraw-rewards")," - Withdraw rewards from a given delegation address and optionally withdraw validator commission if the delegation address given is a validator operator")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_encode"},"encode")," - This is a Cosmos Native CLI, it encodes transactions generated offline ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_epoching"},"epoching")," - This is a Babylon-specific CLI, it queries the subcommands for epoching transactions "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_delegate"},"delegate")," - Delegate liquid tokens to a validator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_redelegate"},"redelegate")," - Redelegate illiquid tokens from one validator to another")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_unbond"},"unbond")," - Unbond shares from a validator")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_evidence"},"evidence")," - This is a Cosmos Native CLI, it queries the subcommands for Evidence transactions ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_feegrant"},"feegrant")," - This is a Cosmos Native CLI, it queries the subcommands for Feegrant transactions "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_grant"},"grant")," - Grant Fee allowance to an address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_revoke"},"revoke")," - Revoke fee-grant")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_gov"},"gov")," - This is a Cosmos Native CLI, it queries subcommand for governance transactions "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_deposit"},"deposit")," - Deposit tokens for an active proposal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_draft-proposal"},"draft-proposal")," - Generate a draft proposal JSON file. The generated proposal JSON contains only one message (skeleton).")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-legacy-proposal"},"submit-legacy-proposal")," - Submit a legacy proposal along with an initial deposit"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_cancel"},"cancel-software-upgrade")," - Cancel the current software upgrade proposal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_community"},"community-pool-spend")," - Submit a community pool spend proposal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_param"},"param-change")," - Submit a parameter change proposal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_software"},"software-upgrade")," - Submit a software upgrade proposal")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-proposal"},"submit-proposal")," - Submit a proposal along with some messages, metadata and deposit")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_vote"},"vote")," - Vote for an active proposal, options: yes/no/no_with_veto/abstain")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_weighted-vote"},"weighted-vote")," - Vote for an active proposal, options: yes/no/no_with_veto/abstain")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_ibc"},"ibc")," - This is a Cosmos Native CLI, it queries subcommands for IBC transactions"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_channel"},"channel")," - IBC channel transaction subcommands")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_client"},"client")," - IBC client transaction subcommands"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_create"},"create")," - create new IBC client")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_misbehaviour"},"misbehaviour")," - submit a client misbehaviour")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_update"},"update")," - update existing client with a header")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_upgrade"},"upgrade")," - upgrade an IBC client")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_ibc-transfer"},"ibc-transfer")," - This is a Cosmos Native CLI, it queries the subcommands for IBC fungible token transfer "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc-transfer/babylond_tx_ibc-transfer_transfer"},"transfer")," - Transfer a fungible token through IBC"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_multi-sign"},"multi-sign")," - This is a Cosmos Native CLI, it generates multisig signatures for transactions generated offline"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_multi-sign/babylond_tx_multi-sign-batch"},"multisign-batch")," - This is a Cosmos Native CLI, it assembles multisig transactions in batch from batch signatures"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_sign"},"sign")," - This is a Cosmos Native CLI, it signs a transaction generated offline"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_sign/babylond_tx_sign-batch"},"sign-batch")," - This is a Cosmos Native CLI, it signs transaction batch files"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_slashing"},"slashing")," - This is a Cosmos Native CLI, it queries subcommand for slashing transaction"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_slashing/babylond_tx_slashing_unjail"},"unjail")," - Unjail validator previously jailed for downtime"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_staking"},"staking")," - This is a Cosmos Native CLI, it queries subcommand for Staking transaction"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_cancel-unbond"},"cancel-unbond")," - Cancel unbonding delegation and delegate back to the validator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_create-validator"},"create-validator")," - Create new validator initialized with a self-delegation to it")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_delegate"},"delegate")," - Delegate liquid tokens to a validator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_edit-validator"},"edit-validator")," - Edit an existing validator account")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_redelegate"},"redelegate")," - Redelegate illiquid tokens from one validator to another")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_unbond"},"unbond")," - Unbond shares from a validator")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_validate-signatures"},"validate-signatures")," - This is a Cosmos Native CLI, it validates transactions signatures")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_vesting"},"vesting")," - This is a Cosmos Native CLI, it queries the subcommands for Vesting transaction "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-periodic-vesting-account"},"create-periodic-vesting-account")," - Create a new vesting account funded with an allocation of tokens")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-permanent-locked-account"},"create-permanent-locked-account")," - Create a new permanently locked account funded with an allocation of tokens")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-vesting-account"},"create-vesting-account")," - Create a new vesting account funded with an allocation of tokens")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/Babylond_tx/babylond_tx_zoneconcierge"},"zoneconcierge")," - This is a Babylon-specific CLI, it queries the subcommands for zoneconcierge transactions")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylond_validate-genesis"},"validate-genesis")," - This is a Cosmos Native CLI, it validates the genesis file at the default location or at the location passed as an arg")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/docs/cli/babylond/babylond_version"},"version")," - This is a Cosmos Native CLI, it prints the application binary version information"))))))}s.isMDXComponent=!0}}]);