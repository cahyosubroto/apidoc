"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[3894],{67249:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>T,contentTitle:()=>d,default:()=>k,frontMatter:()=>l,metadata:()=>m,toc:()=>S});var s=a(87462),i=(a(67294),a(3905)),n=a(26389),o=a(94891),p=a(75190),c=a(47507),r=a(24310),u=a(63303),h=(a(75035),a(85162));const l={id:"epoch-status",title:"EpochStatus queries the status of the checkpoint at a given epoch",description:"EpochStatus queries the status of the checkpoint at a given epoch",sidebar_label:"EpochStatus queries the status of the checkpoint at a given epoch",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"EpochStatus",responses:{200:{description:"A successful response.",content:{"*/*":{schema:{type:"object",properties:{status:{type:"string",enum:["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],default:"CKPT_STATUS_ACCUMULATING",description:"CkptStatus is the status of a checkpoint.\n\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC."}},description:"QueryEpochStatusResponse is the response type for the Query/EpochStatus\nRPC method."}}}},default:{description:"An unexpected error response.",content:{"*/*":{schema:{type:"object",properties:{error:{type:"string"},code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{type_url:{type:"string"},value:{type:"string",format:"byte"}}}}}}}}}},parameters:[{name:"epoch_num",in:"path",required:!0,schema:{type:"string",format:"uint64"}}],tags:["Query"],description:"EpochStatus queries the status of the checkpoint at a given epoch",method:"get",path:"/babylon/checkpointing/v1/epochs/{epoch_num}/status",info:{title:"Babylon - gRPC Gateway docs",description:"A REST interface for state queries",version:"1.0.0"},postman:{name:"EpochStatus queries the status of the checkpoint at a given epoch",description:{type:"text/plain"},url:{path:["babylon","checkpointing","v1","epochs",":epoch_num","status"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"epoch_num"}]},header:[{key:"Accept",value:"*/*"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api/grpcrestapi/babylon-grpc-gateway-docs",custom_edit_url:null},d=void 0,m={unversionedId:"api/grpcrestapi/epoch-status",id:"api/grpcrestapi/epoch-status",title:"EpochStatus queries the status of the checkpoint at a given epoch",description:"EpochStatus queries the status of the checkpoint at a given epoch",source:"@site/docs/api/grpcrestapi/epoch-status.api.mdx",sourceDirName:"api/grpcrestapi",slug:"/api/grpcrestapi/epoch-status",permalink:"/apidoc/docs/api/grpcrestapi/epoch-status",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"epoch-status",title:"EpochStatus queries the status of the checkpoint at a given epoch",description:"EpochStatus queries the status of the checkpoint at a given epoch",sidebar_label:"EpochStatus queries the status of the checkpoint at a given epoch",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"EpochStatus",responses:{200:{description:"A successful response.",content:{"*/*":{schema:{type:"object",properties:{status:{type:"string",enum:["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],default:"CKPT_STATUS_ACCUMULATING",description:"CkptStatus is the status of a checkpoint.\n\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC."}},description:"QueryEpochStatusResponse is the response type for the Query/EpochStatus\nRPC method."}}}},default:{description:"An unexpected error response.",content:{"*/*":{schema:{type:"object",properties:{error:{type:"string"},code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{type_url:{type:"string"},value:{type:"string",format:"byte"}}}}}}}}}},parameters:[{name:"epoch_num",in:"path",required:!0,schema:{type:"string",format:"uint64"}}],tags:["Query"],description:"EpochStatus queries the status of the checkpoint at a given epoch",method:"get",path:"/babylon/checkpointing/v1/epochs/{epoch_num}/status",info:{title:"Babylon - gRPC Gateway docs",description:"A REST interface for state queries",version:"1.0.0"},postman:{name:"EpochStatus queries the status of the checkpoint at a given epoch",description:{type:"text/plain"},url:{path:["babylon","checkpointing","v1","epochs",":epoch_num","status"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"epoch_num"}]},header:[{key:"Accept",value:"*/*"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api/grpcrestapi/babylon-grpc-gateway-docs",custom_edit_url:null}},T={},S=[{value:"EpochStatus queries the status of the checkpoint at a given epoch",id:"epochstatus-queries-the-status-of-the-checkpoint-at-a-given-epoch",level:2}],y={toc:S};function k(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,s.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"epochstatus-queries-the-status-of-the-checkpoint-at-a-given-epoch"},"EpochStatus queries the status of the checkpoint at a given epoch"),(0,i.kt)("p",null,"EpochStatus queries the status of the checkpoint at a given epoch"),(0,i.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"Path Parameters")),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"epoch_num",in:"path",required:!0,schema:{type:"string",format:"uint64"}},mdxType:"ParamsItem"})))),(0,i.kt)("div",null,(0,i.kt)(n.Z,{mdxType:"ApiTabs"},(0,i.kt)(h.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"A successful response.")),(0,i.kt)("div",null,(0,i.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(h.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,i.kt)(u.Z,{mdxType:"SchemaTabs"},(0,i.kt)(h.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(r.Z,{collapsible:!1,name:"status",required:!1,deprecated:void 0,schemaDescription:"CkptStatus is the status of a checkpoint.\n\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.",schemaName:"string",qualifierMessage:"**Possible values:** [`CKPT_STATUS_ACCUMULATING`, `CKPT_STATUS_SEALED`, `CKPT_STATUS_SUBMITTED`, `CKPT_STATUS_CONFIRMED`, `CKPT_STATUS_FINALIZED`]",defaultValue:"CKPT_STATUS_ACCUMULATING",mdxType:"SchemaItem"})))),(0,i.kt)(h.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(c.Z,{responseExample:'{\n  "status": "CKPT_STATUS_ACCUMULATING"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(h.Z,{label:"default",value:"default",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"An unexpected error response.")),(0,i.kt)("div",null,(0,i.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(h.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,i.kt)(u.Z,{mdxType:"SchemaTabs"},(0,i.kt)(h.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(r.Z,{collapsible:!1,name:"error",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(r.Z,{collapsible:!1,name:"code",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(r.Z,{collapsible:!1,name:"message",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(r.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"details"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(r.Z,{collapsible:!1,name:"type_url",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(r.Z,{collapsible:!1,name:"value",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"byte",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,i.kt)(h.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(c.Z,{responseExample:'{\n  "error": "string",\n  "code": 0,\n  "message": "string",\n  "details": [\n    {\n      "type_url": "string",\n      "value": "string"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}k.isMDXComponent=!0}}]);