"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[5292],{3905:(e,r,n)=>{n.d(r,{Zo:()=>s,kt:()=>y});var o=n(67294);function t(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function d(e,r){if(null==e)return{};var n,o,t=function(e,r){if(null==e)return{};var n,o,t={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],r.indexOf(n)>=0||(t[n]=e[n]);return t}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var u=o.createContext({}),i=function(e){var r=o.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},s=function(e){var r=i(e.components);return o.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},c=o.forwardRef((function(e,r){var n=e.components,t=e.mdxType,a=e.originalType,u=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),c=i(n),y=t,b=c["".concat(u,".").concat(y)]||c[y]||p[y]||a;return n?o.createElement(b,l(l({ref:r},s),{},{components:n})):o.createElement(b,l({ref:r},s))}));function y(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var a=n.length,l=new Array(a);l[0]=c;var d={};for(var u in r)hasOwnProperty.call(r,u)&&(d[u]=r[u]);d.originalType=e,d.mdxType="string"==typeof e?e:t,l[1]=d;for(var i=2;i<a;i++)l[i]=n[i];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},45442:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>i});var o=n(87462),t=(n(67294),n(3905));const a={id:"babylond_query_upgrade_module_versions",sidebar_label:"babylond query upgrade module-versions",hide_table_of_contents:!0},l="babylond query upgrade module-versions",d={unversionedId:"cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_module_versions",id:"cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_module_versions",title:"babylond query upgrade module-versions",description:"Return the list of module names and their respective consensus versions.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/Babylond_query_upgrade_module_versions.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_upgrade",slug:"/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_module_versions",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_module_versions",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/Babylond_query_upgrade_module_versions.md",tags:[],version:"current",frontMatter:{id:"babylond_query_upgrade_module_versions",sidebar_label:"babylond query upgrade module-versions",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query upgrade applied",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_applied"},next:{title:"babylond query upgrade upgrade plan",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_plan"}},u={},i=[{value:"query upgrade module_versions command",id:"query-upgrade-module_versions-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],s={toc:i};function p(e){let{components:r,...n}=e;return(0,t.kt)("wrapper",(0,o.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"babylond-query-upgrade-module-versions"},"babylond query upgrade module-versions"),(0,t.kt)("p",null,"Return the list of module names and their respective consensus versions."),(0,t.kt)("h2",{id:"query-upgrade-module_versions-command"},"query upgrade module_versions command"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"babylond query upgrade module_versions [optional module_name] [flags]\n")),(0,t.kt)("h2",{id:"options"},"Options"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},'      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for module_versions\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string   Output format (text|json) (default "text")\n')),(0,t.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}p.isMDXComponent=!0}}]);