/*! For license information please see main.d1739d4b.js.LICENSE.txt */
(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[179],{723:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var o=n(67294),a=n(87462),i=n(68356),r=n.n(i),s=n(16887);const l={"0050cec8":[()=>n.e(8266).then(n.bind(n,44184)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/Babylond_tx_ibc_client_misbehaviour.md",44184],"014f4ee7":[()=>n.e(9598).then(n.bind(n,11765)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_slashing.md",11765],"01a85c17":[()=>Promise.all([n.e(532),n.e(4013)]).then(n.bind(n,20472)),"@theme/BlogTagsListPage",20472],"01dc7620":[()=>n.e(8052).then(n.bind(n,3340)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_params.md",3340],"023d5484":[()=>n.e(1171).then(n.bind(n,37683)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/Babylond_tx_bank_send.md",37683],"02c6b0f6":[()=>n.e(230).then(n.bind(n,31271)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/Babylond_tx_ibc_client.md",31271],"02eb01e9":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(4707)]).then(n.bind(n,4158)),"@site/docs/api/grpcrestapi/delegation-lifecycle.api.mdx",4158],"04327b46":[()=>n.e(174).then(n.bind(n,6840)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_delegation.md",6840],"0567e763":[()=>n.e(4159).then(n.t.bind(n,24469,19)),"C:\\Users\\kakakepan\\Documents\\apidoc\\.docusaurus\\docusaurus-plugin-content-blog\\default\\plugin-route-context-module-100.json",24469],"056e3474":[()=>n.e(5975).then(n.bind(n,99047)),"@site/docs/module/btccheckpoint/checkpointheight.md",99047],"05ac45e4":[()=>n.e(3309).then(n.bind(n,61368)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_crisis/Babylond_tx_crisis_invariant-broken.md",61368],"06134f0d":[()=>n.e(2841).then(n.bind(n,19178)),"@site/docs/module/btclightclient/lighthashes.md",19178],"066231a4":[()=>n.e(3506).then(n.t.bind(n,86182,19)),"~blog/default/apidoc-blog-tags-tags-b8f.json",86182],"076ba573":[()=>n.e(3140).then(n.bind(n,68186)),"@site/docs/grpc/checkpointing/rawcheckpoint.md",68186],"0777b074":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(3490)]).then(n.bind(n,67529)),"@site/docs/api/grpcrestapi/raw-checkpoint.api.mdx",67529],"08037f58":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(4304)]).then(n.bind(n,74589)),"@site/docs/api/grpcrestapi/epoch-chain-info.api.mdx",74589],"0829dae6":[()=>n.e(6348).then(n.bind(n,27276)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_next-sequence-receive.md",27276],"09079159":[()=>n.e(1642).then(n.bind(n,62269)),"@site/docs/module/epoch/epochingmod.md",62269],"091274c2":[()=>n.e(7767).then(n.bind(n,38256)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_params.md",38256],"09d0d5ad":[()=>n.e(7034).then(n.bind(n,67349)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_redelegation-from.md",67349],"09ed871c":[()=>n.e(4705).then(n.bind(n,31693)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_evidence.md",31693],"0a4d6b8a":[()=>n.e(7679).then(n.bind(n,2552)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_bank.md",2552],"0a55688e":[()=>n.e(813).then(n.bind(n,63369)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/Babylond_tx_ibc_channel.md",63369],"0c39d879":[()=>n.e(5974).then(n.t.bind(n,18821,19)),"C:\\Users\\kakakepan\\Documents\\apidoc\\.docusaurus\\docusaurus-plugin-redoc\\grpc\\redocApiLayoutV1-grpc.json",18821],"0d59a6af":[()=>n.e(6976).then(n.bind(n,4875)),"@site/docs/grpc/epoching/validatorlifecycle.md",4875],"0e07b709":[()=>n.e(6038).then(n.bind(n,10677)),"@site/docs/module/btccheckpoint/checkpointparams.md",10677],"0e297078":[()=>n.e(9454).then(n.bind(n,72357)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/Babylond_query_slashing_params.md",72357],"0e2e2b9f":[()=>n.e(7870).then(n.bind(n,26847)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_validator.md",26847],"0e384e19":[()=>Promise.all([n.e(532),n.e(9671)]).then(n.bind(n,66141)),"@site/docs/intro.md",66141],"0f9c2af6":[()=>n.e(4866).then(n.bind(n,21147)),"@site/docs/module/checkpointing/rawcheckpoint.md",21147],"0fe40e95":[()=>n.e(2715).then(n.bind(n,36649)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_delegations-to.md",36649],"1033b0d6":[()=>n.e(5979).then(n.bind(n,53597)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/Babylond_tx_checkpointing_create-validator.md",53597],"1210801f":[()=>n.e(2378).then(n.bind(n,81727)),"@site/docs/cli/babylond/keys/babylondkeysrename.md",81727],"129830a0":[()=>n.e(5523).then(n.bind(n,81283)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/Babylond_tx_gov_deposit.md",81283],"12aff4c6":[()=>n.e(5076).then(n.bind(n,45337)),"@site/docs/grpc/checkpointing/rawcheckpointlistepochnum.md",45337],"131bb82e":[()=>n.e(3404).then(n.bind(n,88357)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_mint/Babylond_query_mint_params.md",88357],"1332f989":[()=>n.e(7495).then(n.bind(n,21483)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_tendermint-validator-set.md",21483],"13932ee9":[()=>n.e(6689).then(n.bind(n,48222)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/Babylond_query_slashing_signing-info.md",48222],"13a10e97":[()=>n.e(3545).then(n.bind(n,94547)),"@site/docs/module/btclightclient/lightparams.md",94547],"13a1fbb0":[()=>n.e(3765).then(n.bind(n,68566)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_encode.md",68566],"1532ecac":[()=>n.e(495).then(n.bind(n,51158)),"@site/docs/module/epoch/epochmsgs.md",51158],"160700eb":[()=>n.e(2645).then(n.bind(n,29239)),"@site/docs/module/checkpointing/epochstatus.md",29239],"179f4fba":[()=>n.e(6040).then(n.bind(n,79615)),"@site/docs/cli/babylond/debug/babylonddebugaddr.md",79615],"17a6837b":[()=>n.e(1490).then(n.bind(n,91518)),"@site/docs/grpc/epoching/delegationlifecycle.md",91518],"18151a89":[()=>n.e(1721).then(n.bind(n,64753)),"@site/docs/grpc/epochnum.md",64753],"1868abd6":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(5192)]).then(n.bind(n,13541)),"@site/docs/api/grpcrestapi/hashes.api.mdx",13541],"1877a045":[()=>n.e(7013).then(n.bind(n,29118)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_channels.md",29118],"18ade41a":[()=>n.e(7719).then(n.t.bind(n,76911,19)),"~blog/default/apidoc-blog-archive-b08.json",76911],"191a15fc":[()=>n.e(1660).then(n.bind(n,30009)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_redelegation.md",30009],"1a79e3e4":[()=>n.e(2283).then(n.bind(n,56308)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/Babylond_tx_staking_edit-validator.md",56308],"1a7d492f":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(711)]).then(n.bind(n,463)),"@site/docs/api/grpcrestapi/bls-public-key-list.api.mdx",463],"1be78505":[()=>Promise.all([n.e(532),n.e(9514)]).then(n.bind(n,28323)),"@theme/DocPage",28323],"1c456eaf":[()=>n.e(2850).then(n.bind(n,54372)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/Babylond_tx_distribution_fund-community-pool.md",54372],"1cce00e2":[()=>n.e(8584).then(n.bind(n,85734)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitment.md",85734],"1d3a1682":[()=>n.e(5292).then(n.bind(n,45442)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/Babylond_query_upgrade_module_versions.md",45442],"1da3a3bc":[()=>n.e(3473).then(n.bind(n,53519)),"@site/docs/module/checkpointing/checkpointparams.md",53519],"1f391b9e":[()=>Promise.all([n.e(532),n.e(1363),n.e(3085)]).then(n.bind(n,14247)),"@theme/MDXPage",14247],"204b86e3":[()=>n.e(9451).then(n.bind(n,84206)),"@site/docs/resources/testnet.md",84206],"20e5f862":[()=>n.e(118).then(n.bind(n,26663)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_pool.md",26663],"21f3b83d":[()=>n.e(9550).then(n.bind(n,72153)),"@site/docs/cli/babylond/Babylond_start.md",72153],"2384311c":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(4024)]).then(n.bind(n,13605)),"@site/docs/api/grpcrestapi/base-header.api.mdx",13605],"23a912d8":[()=>n.e(6043).then(n.bind(n,34368)),"@site/docs/module/btclightclient/lightclient.md",34368],"23d28cd9":[()=>n.e(4840).then(n.bind(n,96576)),"@site/docs/modules.md",96576],"23fc0d24":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(3888)]).then(n.bind(n,7826)),"@site/docs/api/grpcrestapi/epoch-msgs.api.mdx",7826],"247d6260":[()=>n.e(983).then(n.bind(n,3659)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_bank.md",3659],"27253e58":[()=>n.e(8988).then(n.bind(n,80575)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_btccheckpoint.md",80575],"28700d96":[()=>n.e(7300).then(n.bind(n,11610)),"@site/docs/grpc/grpcparams.md",11610],"292c00bc":[()=>n.e(1935).then(n.bind(n,99929)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/Babylond_tx_distribution_set-withdraw-addr.md",99929],29975613:[()=>n.e(9189).then(n.bind(n,98208)),"@site/docs/module/czconcierge/finalizedchaininfo.md",98208],"2addcce7":[()=>n.e(842).then(n.bind(n,98886)),"@site/docs/grpc/btclightclient/lightmainchain.md",98886],"2b59cf14":[()=>n.e(1534).then(n.bind(n,86591)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/Babylond_tx_epoching_unbond.md",86591],"2bd00f93":[()=>n.e(9884).then(n.bind(n,14128)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/Babylond_tx_distribution_withdraw-all-rewards.md",14128],"2c795bdf":[()=>n.e(808).then(n.bind(n,49964)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/Babylond_tx_ibc_client_update.md",49964],"2caec398":[()=>n.e(1437).then(n.bind(n,57839)),"@site/docs/cli/babylond/Babylond_tendermint.md",57839],"2d04bfba":[()=>n.e(8321).then(n.bind(n,57358)),"@site/docs/grpc/epoching/latepochmsgs.md",57358],"2dfca948":[()=>n.e(5580).then(n.bind(n,44638)),"@site/docs/module/btclightclient/lighttip.md",44638],"2eb7da4f":[()=>n.e(2907).then(n.bind(n,7414)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_gov/Babylond_query_gov_vote.md",7414],"2ebb7e86":[()=>n.e(913).then(n.bind(n,78514)),"@site/docs/resources/mainnet.md",78514],"2fb40881":[()=>n.e(4121).then(n.bind(n,43802)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_main-chain.md",43802],"30bab282":[()=>n.e(1029).then(n.bind(n,80990)),"@site/docs/cli/babylond/keys/babylondkeysimport.md",80990],"3157d042":[()=>n.e(6612).then(n.bind(n,80071)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_gov/Babylond_query_gov_deposits.md",80071],"32e9a234":[()=>n.e(5034).then(n.bind(n,5952)),"@site/docs/cli/babylond/babylondconfig.md",5952],"33287de7":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(9071)]).then(n.bind(n,52868)),"@site/docs/api/grpcrestapi/btc-checkpoint-height.api.mdx",52868],"33364b1e":[()=>n.e(247).then(n.bind(n,6449)),"@site/docs/resources/resources.md",6449],"337c891c":[()=>n.e(317).then(n.bind(n,47453)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_tx.md",47453],"3428c9c5":[()=>n.e(8604).then(n.bind(n,12730)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/Babylond_tx_staking_delegate.md",12730],"344ec060":[()=>n.e(632).then(n.bind(n,6437)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-states.md",6437],"34555ecd":[()=>n.e(6236).then(n.bind(n,54589)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade.md",54589],"34aaa592":[()=>n.e(9583).then(n.bind(n,72179)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_params.md",72179],"3503d3fa":[()=>n.e(7633).then(n.t.bind(n,36646,19)),"~blog/default/apidoc-blog-tags-hola-3d4.json",36646],"35376bb6":[()=>n.e(8137).then(n.bind(n,95913)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_auth/Babylond_query_auth_module_account.md",95913],"355c55a7":[()=>n.e(2623).then(n.bind(n,57816)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/Babylond_tx_gov_vote.md",57816],"367a652a":[()=>n.e(8407).then(n.bind(n,72463)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/Babylond_query_freegrant_grants-by-granter.md",72463],"36d51805":[()=>n.e(3004).then(n.bind(n,45428)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/Babylond_query_btccheckpoint_params.md",45428],"37fc00db":[()=>n.e(200).then(n.bind(n,15496)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_staking.md",15496],"393be207":[()=>n.e(7414).then(n.bind(n,53123)),"@site/src/pages/markdown-page.md",53123],"39d5844c":[()=>n.e(6142).then(n.bind(n,17302)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_escrow-address.md",17302],"3a26d8c9":[()=>n.e(7435).then(n.bind(n,54446)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes.md",54446],"3b8c55ea":[()=>n.e(3217).then(n.bind(n,89803)),"@site/docs/installation.md",89803],"3ce0fe92":[()=>n.e(6251).then(n.bind(n,36134)),"@site/docs/grpc/btclightclient/lightclient1.md",36134],"3d89ea8f":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(7765)]).then(n.bind(n,59069)),"@site/docs/api/grpcrestapi/chain-info.api.mdx",59069],"3e16bd3c":[()=>n.e(8920).then(n.bind(n,70493)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_slashing/Babylond_tx_slashing_unjail.md",70493],"3e6683ec":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(3692)]).then(n.bind(n,91810)),"@site/docs/api/grpcrestapi/raw-checkpoint-list.api.mdx",91810],"3f17b17d":[()=>n.e(8577).then(n.bind(n,59664)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/Babylond_tx_staking_redelegate.md",59664],"3f490425":[()=>n.e(9229).then(n.bind(n,99507)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/Babylond_tx_bank_multi-send.md",99507],"40efbf63":[()=>n.e(9067).then(n.bind(n,70112)),"@site/docs/cli/babylond/debug/babylonddebug.md",70112],"412d8407":[()=>n.e(6844).then(n.bind(n,37431)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/Babylond_tx_distribution_withdraw-rewards.md",37431],"4182ceb5":[()=>n.e(8207).then(n.bind(n,89354)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/Babylond_tx_gov_submit-legacy-proposal_community.md",89354],"426c3a01":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(858)]).then(n.bind(n,88900)),"@site/docs/api/grpcrestapi/main-chain.api.mdx",88900],"43a1ef79":[()=>n.e(2728).then(n.bind(n,48421)),"@site/docs/videoguides.md",48421],"4573be6e":[()=>n.e(2795).then(n.bind(n,21325)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_sign.md",21325],"464ad3b9":[()=>n.e(2790).then(n.bind(n,98370)),"@site/docs/cli/babylond/keys/babylondkeyslist.md",98370],"46a49d76":[()=>n.e(9398).then(n.t.bind(n,68585,19)),"~blog/default/apidoc-blog-tags-hello-e94.json",68585],"46b365f0":[()=>n.e(4844).then(n.bind(n,10696)),"@site/docs/module/checkpointing/blspublickey.md",10696],"477abf25":[()=>n.e(4678).then(n.bind(n,33994)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_block.md",33994],"48ac78cb":[()=>n.e(1849).then(n.bind(n,24980)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_community-pool.md",24980],"4a8c2c5c":[()=>Promise.all([n.e(532),n.e(646),n.e(3527),n.e(7574)]).then(n.bind(n,21755)),"@site/docs/grpc/grpcgateway.mdx",21755],"4b1fd451":[()=>Promise.all([n.e(532),n.e(6309)]).then(n.bind(n,39251)),"@site/docs/api/grpcrestapi/babylon-grpc-gateway-docs.info.mdx",39251],"4c5e977b":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(8490),n.e(646),n.e(4155),n.e(1893)]).then(n.bind(n,14155)),"@theme/ApiItem",14155],"4cac5f92":[()=>n.e(943).then(n.bind(n,8257)),"@site/docs/grpc/epoching/epochinfomod.md",8257],"4d89e75c":[()=>n.e(3015).then(n.bind(n,38184)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_epoching/Babylond_query_epoching_params.md",38184],"4fb97012":[()=>n.e(3297).then(n.bind(n,41019)),"@site/docs/module/btccheckpoint/btccheckpoint.md",41019],"514f95a4":[()=>n.e(8707).then(n.bind(n,23640)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint.md",23640],"518fb95a":[()=>n.e(7208).then(n.bind(n,95663)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/Babylond_query_freegrant_grant.md",95663],"51d861a8":[()=>n.e(2037).then(n.bind(n,92500)),"@site/docs/module/btclightclient/lightbaseheader.md",92500],"52b51599":[()=>n.e(3243).then(n.bind(n,87405)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_gov/Babylond_query_gov_deposit.md",87405],53394050:[()=>n.e(2636).then(n.bind(n,11226)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/Babylond_tx_checkpointing_submit.md",11226],"539f07f8":[()=>n.e(9367).then(n.bind(n,75218)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/Babylond_tx_ibc_client_upgrade.md",75218],"53c3e127":[()=>n.e(7595).then(n.bind(n,60783)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state.md",60783],"53c45384":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(361)]).then(n.bind(n,67601)),"@site/docs/api/grpcrestapi/tip.api.mdx",67601],"54df146b":[()=>n.e(8467).then(n.bind(n,18921)),"@site/docs/grpc/btclightclient/lightcontains.md",18921],"56e39b36":[()=>n.e(7573).then(n.bind(n,49429)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/Babylond_tx_epoching-delegate.md",49429],"57c6c789":[()=>n.e(1794).then(n.bind(n,58358)),"@site/docs/cli/babylond/debug/babylonddebugrawbytes.md",58358],"5820e049":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(5571)]).then(n.bind(n,98218)),"@site/docs/api/grpcrestapi/btc-checkpoint-params.api.mdx",98218],"585f616c":[()=>n.e(9809).then(n.bind(n,59793)),"@site/docs/cli/babylond/Babylond_tx.md",59793],59362658:[()=>n.e(2267).then(n.bind(n,88642)),"@site/blog/2021-08-01-mdx-blog-post.mdx",88642],"5ae584b9":[()=>n.e(6036).then(n.bind(n,51201)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/Babylond_tx_gov_draft-proposal.md",51201],"5b0c3766":[()=>n.e(3574).then(n.bind(n,45295)),"@site/docs/cli/babylond/keys/babylondkeysdelete.md",45295],"5dc50702":[()=>n.e(669).then(n.bind(n,31551)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/Babylond_query_checkpointing_raw-checkpoint.md",31551],"5e700ccf":[()=>n.e(1052).then(n.bind(n,35947)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_end.md",35947],"5e9f5e1a":[()=>Promise.resolve().then(n.bind(n,36809)),"@generated/docusaurus.config",36809],"5f0908de":[()=>n.e(637).then(n.t.bind(n,83769,19)),"C:\\Users\\kakakepan\\Documents\\apidoc\\.docusaurus\\docusaurus-plugin-content-docs\\default\\plugin-route-context-module-100.json",83769],"5f3a7ce3":[()=>n.e(5289).then(n.bind(n,64226)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_status.md",64226],"619472db":[()=>n.e(2463).then(n.bind(n,89556)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/Babylond_tx_epoching_redelegate.md",89556],"6201f6e2":[()=>n.e(5390).then(n.bind(n,59462)),"@site/docs/cli/babylond/keys/babylondkeys.md",59462],"6219935b":[()=>n.e(1480).then(n.bind(n,38748)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_bank/Babylond_query_bank_total.md",38748],62778379:[()=>n.e(6352).then(n.bind(n,89787)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_gov/Babylond_query_gov_proposals.md",89787],"644dbebd":[()=>n.e(4539).then(n.bind(n,1993)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution.md",1993],"650867e1":[()=>n.e(8122).then(n.bind(n,51698)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_auth/Babylond_query_auth_address_by_acc_num.md",51698],"6577c18f":[()=>n.e(4939).then(n.bind(n,63800)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_multi-sign.md",63800],"6608bb89":[()=>n.e(3279).then(n.bind(n,29047)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_zoneconcierge/Babylond_query_zoneconcierge_params.md",29047],"66992ff9":[()=>n.e(4250).then(n.bind(n,93007)),"@site/docs/node/nodeconfig.md",93007],"66acfe3f":[()=>n.e(4594).then(n.bind(n,79252)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/Babylond_query_btccheckpoint_epoch_submissions.md",79252],"6875c492":[()=>Promise.all([n.e(532),n.e(1363),n.e(8490),n.e(6048),n.e(8610)]).then(n.bind(n,41714)),"@theme/BlogTagsPostsPage",41714],"6880662b":[()=>n.e(2478).then(n.bind(n,73715)),"@site/docs/module/checkpointing/latestcheckpoint.md",73715],"69c45431":[()=>n.e(6024).then(n.bind(n,17652)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc.md",17652],"69e1f829":[()=>n.e(8573).then(n.bind(n,30449)),"@site/docs/cli/babylond/keys/babylondkeysdd.md",30449],"6bde4b50":[()=>n.e(2806).then(n.bind(n,50437)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer.md",50437],"6c3eb83b":[()=>n.e(3819).then(n.bind(n,31527)),"@site/docs/grpc/checkpointing/rawcheckpointliststatus.md",31527],"6c9df304":[()=>n.e(841).then(n.bind(n,74769)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections.md",74769],"6da40f1c":[()=>n.e(3948).then(n.bind(n,33737)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_authz.md",33737],"70e84bbf":[()=>n.e(493).then(n.bind(n,35551)),"@site/docs/grpc/btclightclient/lightcontainsbytes.md",35551],"711fe809":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(2115)]).then(n.bind(n,13935)),"@site/docs/api/grpcrestapi/current-epoch.api.mdx",13935],"717a57ce":[()=>n.e(1756).then(n.bind(n,57461)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_epoching.md",57461],"723ec160":[()=>n.e(3846).then(n.bind(n,63206)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-acks.md",63206],"724412d8":[()=>n.e(3677).then(n.bind(n,37887)),"@site/docs/cli/babylond/Babylond_status.md",37887],"72b5b2cd":[()=>n.e(7131).then(n.bind(n,39064)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitments.md",39064],"73664a40":[()=>n.e(3514).then(n.bind(n,1976)),"@site/blog/2019-05-29-long-blog-post.md",1976],"73c537b2":[()=>n.e(9971).then(n.bind(n,94898)),"@site/docs/grpc/concierge/zoneconcierge.md",94898],"74dba243":[()=>n.e(6553).then(n.bind(n,24539)),"@site/docs/cli/babylond/BabylondQuery/Babylon_query_ibc.md",24539],"754b7ab8":[()=>n.e(5465).then(n.bind(n,47280)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_txs.md",47280],"75bf5d41":[()=>n.e(4249).then(n.bind(n,79873)),"@site/docs/setnode.md",79873],"7616f23a":[()=>n.e(2247).then(n.bind(n,60770)),"@site/docs/introduction/overview.md",60770],"7661071f":[()=>n.e(9642).then(n.bind(n,36911)),"@site/blog/2021-08-26-welcome/index.md?truncated=true",36911],76992171:[()=>n.e(8656).then(n.t.bind(n,42842,19)),"C:\\Users\\kakakepan\\Documents\\apidoc\\.docusaurus\\docusaurus-plugin-redoc\\grpc\\plugin-route-context-module-100.json",42842],"76ae80a3":[()=>n.e(1290).then(n.bind(n,86029)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_mint.md",86029],"76c99db7":[()=>n.e(1082).then(n.bind(n,3174)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_validators.md",3174],"76fd2b43":[()=>n.e(6965).then(n.bind(n,28770)),"@site/docs/grpc/submissions.md",28770],"783b9dc0":[()=>n.e(8514).then(n.bind(n,98034)),"@site/docs/cli/babylond/preparegenesis.md",98034],"78d4fe60":[()=>n.e(1409).then(n.bind(n,68640)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/Babylond_tx_gov_submit-legacy-proposal_software-upgrade.md",68640],79470671:[()=>n.e(3155).then(n.bind(n,9931)),"@site/docs/module/epoch/epochinfomod.md",9931],"7a6f556f":[()=>n.e(9658).then(n.bind(n,98635)),"@site/docs/grpc/epoching/currentepoch.md",98635],"7b379542":[()=>n.e(5936).then(n.bind(n,23196)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/Babylond_query_upgrade_plan.md",23196],"7b937b5f":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(2233)]).then(n.bind(n,72446)),"@site/docs/api/grpcrestapi/finalized-chain-info.api.mdx",72446],"7c29905b":[()=>n.e(8554).then(n.bind(n,20092)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/Babylond_tx_authz_exec.md",20092],"7c2f8619":[()=>n.e(3889).then(n.bind(n,20170)),"@site/docs/cli/babylond/keys/babylondkeysshow.md",20170],"7c3b5472":[()=>n.e(5466).then(n.bind(n,23055)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-ack.md",23055],"7c50f4ba":[()=>n.e(8066).then(n.bind(n,49235)),"@site/docs/module/czconcierge/czconcierge.md",49235],"7cad74f6":[()=>n.e(6463).then(n.bind(n,18928)),"@site/docs/module/epoch/currentepoch.md",18928],"7e73a4da":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(5611)]).then(n.bind(n,24363)),"@site/docs/api/grpcrestapi/latest-epoch-msgs.api.mdx",24363],"7e8f1375":[()=>n.e(6507).then(n.bind(n,74766)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_gov/Babylond_query_gov_params.md",74766],"7f97ed30":[()=>n.e(5525).then(n.bind(n,26560)),"@site/docs/cli/babylond/Babylond_validate-genesis.md",26560],"8096b0fb":[()=>n.e(4344).then(n.bind(n,21577)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_end.md",21577],"80d1d363":[()=>n.e(926).then(n.bind(n,86350)),"@site/docs/grpc/checkpointing/checkpointmod.md",86350],"814f3328":[()=>n.e(2535).then(n.t.bind(n,45641,19)),"~blog/default/blog-post-list-prop-default.json",45641],"8202da25":[()=>n.e(1906).then(n.bind(n,33167)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_unbounding-delegations-from.md",33167],"82266c47":[()=>n.e(2453).then(n.bind(n,4767)),"@site/docs/cli/babylond/Babylond_tx/Babylon_tx_decode.md",4767],"827dfebe":[()=>n.e(9874).then(n.bind(n,29962)),"@site/docs/module/checkpointing/recentrawcheckpointinglist.md",29962],"83a4a13b":[()=>n.e(3184).then(n.t.bind(n,34681,19)),"~blog/default/apidoc-blog-860.json",34681],"842431f6":[()=>n.e(7287).then(n.bind(n,50004)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-packets.md",50004],"852f6c57":[()=>n.e(3649).then(n.bind(n,37482)),"@site/docs/node/nodeoperator.md",37482],"8577035f":[()=>n.e(9509).then(n.bind(n,94251)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-receipt.md",94251],"8717b14a":[()=>n.e(948).then(n.bind(n,63352)),"@site/blog/2019-05-29-long-blog-post.md?truncated=true",63352],"87a5a85d":[()=>n.e(1025).then(n.bind(n,4637)),"@site/docs/cli/babylond/babylondgentx.md",4637],"88023c77":[()=>n.e(5391).then(n.bind(n,5558)),"@site/docs/cli/babylond/debug/babylonddebugpubkeyraw.md",5558],"8864572c":[()=>n.e(1758).then(n.bind(n,48817)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_btclightclient/Babylond_tx_btclightclient_insert-header.md",48817],"887aa848":[()=>n.e(627).then(n.bind(n,88944)),"@site/docs/grpc/epoching/paramsmod.md",88944],"88f54128":[()=>n.e(9266).then(n.bind(n,40511)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc-transfer/Babylond_tx_ibc-transfer_transfer.md",40511],"897edd02":[()=>n.e(2495).then(n.bind(n,61465)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_unbounding-delegation.md",61465],"8a79d444":[()=>n.e(248).then(n.bind(n,10932)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_evidence.md",10932],"8ac87bae":[()=>n.e(5735).then(n.bind(n,27760)),"@site/docs/grpc/epoching/epoch.md",27760],"8bde4836":[()=>n.e(7204).then(n.bind(n,67539)),"@site/docs/cli/babylond/Babylond_rollback.md",67539],"8bf43321":[()=>n.e(5116).then(n.bind(n,6228)),"@site/docs/cli/babylond/keys/babylondkeysparse.md",6228],"8c01dac4":[()=>n.e(6704).then(n.bind(n,48866)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_client-state.md",48866],"8ca812c0":[()=>n.e(929).then(n.bind(n,5238)),"@site/docs/module/epoch/latepochmsgs.md",5238],"8ccb9270":[()=>n.e(8238).then(n.bind(n,83786)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_sign/Babylond_tx_sign-batch.md",83786],"8d2b3928":[()=>n.e(8664).then(n.bind(n,5619)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/Babylond_tx_gov_weighted-vote.md",5619],"8d94e231":[()=>n.e(9223).then(n.bind(n,59196)),"@site/docs/cli/babylond/migrate.md",59196],"8d9badde":[()=>n.e(6213).then(n.bind(n,69217)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/Babylond_tx_gov_submit-legacy-proposal.md",69217],"8db0ce6c":[()=>n.e(1078).then(n.bind(n,39319)),"@site/docs/cli/babylond/Babylond_tendermint/Babylond_tendermint_version.md",39319],"925b3f96":[()=>n.e(9003).then(n.bind(n,8856)),"@site/blog/2019-05-28-first-blog-post.md?truncated=true",8856],"931b1004":[()=>n.e(4952).then(n.bind(n,75127)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing.md",75127],"9350a5a3":[()=>n.e(6554).then(n.bind(n,13525)),"@site/docs/module/czconcierge/conciergeparams.md",13525],"935f2afb":[()=>n.e(53).then(n.t.bind(n,1109,19)),"~docs/default/version-current-metadata-prop-751.json",1109],"93a5a6ba":[()=>n.e(2995).then(n.bind(n,47521)),"@site/docs/grpc/btclightclient/lightheader.md",47521],"93f71b78":[()=>n.e(7056).then(n.bind(n,21489)),"@site/docs/cli/babylond/Babylond_tx/Babylon_tx_authz.md",21489],"949b4210":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(9901)]).then(n.bind(n,99951)),"@site/docs/api/grpcrestapi/epoching-params.api.mdx",99951],"950a5e71":[()=>n.e(9864).then(n.bind(n,96855)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/Babylond_tx_staking_cancel-unbond.md",96855],"9589a28f":[()=>n.e(4532).then(n.bind(n,36848)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights.md",36848],"97630d5d":[()=>n.e(7157).then(n.bind(n,12260)),"@site/docs/cli/babylond/babylond.md",12260],"97d3f65a":[()=>n.e(1253).then(n.bind(n,58746)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/Babylond_query_authz_grants_by_granter.md",58746],"996c978f":[()=>n.e(311).then(n.bind(n,84236)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_redelegations.md",84236],"99d35970":[()=>n.e(5647).then(n.bind(n,45270)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing.md",45270],"9aa60822":[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(5726)]).then(n.bind(n,98390)),"@site/docs/api/grpcrestapi/chain-list.api.mdx",98390],"9b2893e4":[()=>n.e(8419).then(n.bind(n,102)),"@site/docs/introduction/keycomponent.md",102],"9b791eca":[()=>n.e(491).then(n.bind(n,8081)),"@site/docs/module/epoch/delegationlifecycle.md",8081],"9cfe81b5":[()=>n.e(9978).then(n.bind(n,55731)),"@site/docs/cli/babylond/babylondcreategenesiskey.md",55731],"9d65994e":[()=>n.e(8320).then(n.bind(n,78310)),"@site/docs/cli/babylond/babylondaddgenesisbls.md",78310],"9e4087bc":[()=>n.e(3608).then(n.bind(n,63169)),"@theme/BlogArchivePage",63169],"9f8154fe":[()=>n.e(6376).then(n.bind(n,23429)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/Babylond_query_freegrant_grants-by-grantee.md",23429],"9fa6981a":[()=>n.e(8472).then(n.bind(n,76243)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/Babylond_tx_staking_create-validator.md",76243],a0a8a56a:[()=>n.e(6437).then(n.bind(n,84828)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_connections.md",84828],a1548de2:[()=>n.e(3467).then(n.bind(n,71075)),"@site/docs/grpc/concierge/conciergeparams.md",71075],a36d55fe:[()=>n.e(6597).then(n.bind(n,18811)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/Babylond_tx_authz_grant.md",18811],a3e4e4c0:[()=>n.e(2538).then(n.bind(n,28186)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting.md",28186],a42ea166:[()=>n.e(6412).then(n.bind(n,76)),"@site/docs/grpc/btclightclient/lighthashes.md",76],a54ec436:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(2750)]).then(n.bind(n,59597)),"@site/docs/api/grpcrestapi/finalized-chain-info-until-height.api.mdx",59597],a69a4243:[()=>n.e(3458).then(n.t.bind(n,60333,19)),"~blog/default/apidoc-blog-tags-facebook-7fd-list.json",60333],a6aa9e1f:[()=>Promise.all([n.e(532),n.e(1363),n.e(8490),n.e(6048),n.e(3089)]).then(n.bind(n,80046)),"@theme/BlogListPage",80046],a6d21958:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(5241)]).then(n.bind(n,89656)),"@site/docs/api/grpcrestapi/epoch-val-set.api.mdx",89656],a7d005fb:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(7589)]).then(n.bind(n,13096)),"@site/docs/api/grpcrestapi/checkpointing-params.api.mdx",13096],a8fe0fb3:[()=>n.e(2044).then(n.bind(n,34270)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/Babylond_tx_feegrant_grant.md",34270],a9d610a1:[()=>n.e(1820).then(n.bind(n,77644)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_validator_outstanding_rewards.md",77644],aa257079:[()=>n.e(7420).then(n.bind(n,11191)),"@site/docs/cli/babylond/Babylond_rosetta.md",11191],aae61c4f:[()=>n.e(6252).then(n.bind(n,87979)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_contains.md",87979],ab5ad7f0:[()=>n.e(8737).then(n.bind(n,94729)),"@site/docs/cli/babylond/babylondhelp.md",94729],ab92f75c:[()=>n.e(4520).then(n.bind(n,81085)),"@site/docs/cli/babylond/Babylond_version.md",81085],aba028c7:[()=>n.e(2077).then(n.bind(n,33028)),"@site/docs/cli/babylond/Babylond_query.md",33028],acd9bc67:[()=>n.e(4995).then(n.bind(n,94566)),"@site/docs/grpc/epoching/epochmsgs.md",94566],ad9f86d8:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(650)]).then(n.bind(n,2226)),"@site/docs/api/grpcrestapi/header.api.mdx",2226],adcea2b6:[()=>n.e(826).then(n.bind(n,3590)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_path.md",3590],af497ca6:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(5574)]).then(n.bind(n,89033)),"@site/docs/api/grpcrestapi/list-epoch-headers.api.mdx",89033],b12935f3:[()=>n.e(5078).then(n.bind(n,84524)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/Babylond_tx_gov_submit-legacy-proposal_cancel.md",84524],b15d7f3a:[()=>n.e(128).then(n.t.bind(n,54328,19)),"C:\\Users\\kakakepan\\Documents\\apidoc\\.docusaurus\\docusaurus-plugin-redoc\\grpc\\redocApiSpecV1.2-grpc.json",54328],b1e66850:[()=>n.e(9433).then(n.bind(n,82450)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_auth/Babylond_query_auth_params.md",82450],b1fc52f3:[()=>n.e(7788).then(n.bind(n,29628)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_gov/Babylond_query_gov_proposer.md",29628],b49ee925:[()=>n.e(6528).then(n.bind(n,69311)),"@site/docs/module/checkpointing/recentepochcount.md",69311],b4ee7837:[()=>n.e(3164).then(n.bind(n,22891)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/Babylond_tx_vesting_create-vesting-account.md",22891],b6fccf6e:[()=>n.e(6191).then(n.bind(n,84645)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/Babylond_query_checkpointing_raw-checkpoint/Babylond_query_checkpointing_raw-checkpoint_list.md",84645],b77fbdff:[()=>n.e(6988).then(n.bind(n,23583)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/Babylond_tx_authz_revoke.md",23583],b7c1d8ec:[()=>n.e(351).then(n.bind(n,22062)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_states.md",22062],b7dd37ab:[()=>n.e(8377).then(n.bind(n,72327)),"@site/docs/cli/babylond/babylondcollectgentxs.md",72327],b7e4a079:[()=>n.e(4569).then(n.bind(n,27310)),"@site/docs/module/btclightclient/lightmainchain.md",27310],b827fdf0:[()=>n.e(2637).then(n.bind(n,69730)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_header.md",69730],b8e79801:[()=>n.e(3565).then(n.bind(n,14505)),"@site/docs/node/nodemanage.md",14505],b8e92d05:[()=>n.e(3e3).then(n.bind(n,46592)),"@site/docs/cli/babylond/babylondexport.md",46592],b90b3a7e:[()=>n.e(4406).then(n.bind(n,70525)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-trace.md",70525],b9282eb2:[()=>n.e(1277).then(n.bind(n,28655)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_gov.md",28655],ba2a6edb:[()=>n.e(8719).then(n.bind(n,64941)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/Babylond_tx_vesting_create-permanent-locked-account.md",64941],ba40830b:[()=>n.e(5733).then(n.bind(n,38137)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_btclightclient.md",38137],bb2a90a5:[()=>n.e(362).then(n.t.bind(n,36935,19)),"~blog/default/apidoc-blog-tags-hola-3d4-list.json",36935],bbee4615:[()=>n.e(3047).then(n.bind(n,23775)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_slashing.md",23775],bc27a0c5:[()=>n.e(2024).then(n.bind(n,2225)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/Babylond_query_authz_grants_by_grantee.md",2225],bc7aca4e:[()=>n.e(6842).then(n.bind(n,28656)),"@site/docs/module/czconcierge/chainlist.md",28656],bf929bd0:[()=>n.e(9559).then(n.bind(n,42584)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_state.md",42584],bfd3e7b8:[()=>n.e(773).then(n.bind(n,40393)),"@site/docs/cli/babylond/debug/babylondebugpubkey.md",40393],c0853f72:[()=>n.e(1083).then(n.bind(n,1069)),"@site/docs/cli/babylond/keys/babylonkeysexport.md",1069],c242c3ad:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(7536)]).then(n.bind(n,88684)),"@site/docs/api/grpcrestapi/epoch-info.api.mdx",88684],c34e7a6e:[()=>n.e(14).then(n.bind(n,6883)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_historical-info.md",6883],c3de34ef:[()=>n.e(2776).then(n.bind(n,62857)),"@site/docs/module/checkpointing/checkpointingmod.md",62857],c408363e:[()=>n.e(7170).then(n.bind(n,38383)),"@site/docs/cli/babylond/BabylondQuery/Babylon_query_freegrant.md",38383],c4f5d8e4:[()=>Promise.all([n.e(532),n.e(4195)]).then(n.bind(n,57967)),"@site/src/pages/index.js",57967],c547cdc3:[()=>n.e(6918).then(n.bind(n,64195)),"@site/docs/cli/babylond/Babylond_tendermint/Babylond_tendermint_show-validator.md",64195],c6a8074a:[()=>n.e(3824).then(n.bind(n,42614)),"@site/docs/module/btclightclient/lightcontainsbytes.md",42614],c7c8705a:[()=>n.e(4381).then(n.bind(n,59293)),"@site/docs/module/epoch/paramsmod.md",59293],c82c0fdc:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(6278)]).then(n.bind(n,87489)),"@site/docs/api/grpcrestapi/epoch-submissions.api.mdx",87489],c8f32a9c:[()=>n.e(8068).then(n.bind(n,16049)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/Babylond_tx_feegrant_revoke.md",16049],c9037805:[()=>n.e(356).then(n.bind(n,68404)),"@site/docs/cli/babylond/Babylond_tendermint/Babylond_tendermint_show-node-id.md",68404],c99340e8:[()=>n.e(3071).then(n.bind(n,1041)),"@site/docs/module/checkpointing/rawcheckpointinglist.md",1041],c995526c:[()=>n.e(2425).then(n.bind(n,3181)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_auth/Babylond_query_auth_module_accounts.md",3181],ca39e9bd:[()=>n.e(1565).then(n.bind(n,99893)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/Babylond_query_upgrade_applied.md",99893],ca7fe314:[()=>n.e(3101).then(n.bind(n,31163)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/Babylond_tx_ibc_client_create.md",31163],caec69ce:[()=>n.e(1116).then(n.bind(n,75384)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_self-consensus-state.md",75384],ccc49370:[()=>Promise.all([n.e(532),n.e(1363),n.e(8490),n.e(6048),n.e(6103)]).then(n.bind(n,65203)),"@theme/BlogPostPage",65203],cccb8c24:[()=>n.e(6283).then(n.bind(n,44728)),"@site/docs/cli/babylond/keys/babylondkeysmigrate.md",44728],cd28d114:[()=>n.e(1389).then(n.bind(n,24817)),"@site/docs/module/epoch/validatorlifecycle.md",24817],cd73b40d:[()=>n.e(7673).then(n.bind(n,73983)),"@site/docs/module/czconcierge/chaininfo.md",73983],cdf1a4c5:[()=>n.e(253).then(n.t.bind(n,6079,19)),"~blog/default/apidoc-blog-tags-docusaurus-652.json",6079],ce90e1bb:[()=>n.e(1729).then(n.bind(n,85975)),"@site/docs/introduction/usecase.md",85975],cef4379d:[()=>n.e(6436).then(n.t.bind(n,15745,19)),"C:\\Users\\kakakepan\\Documents\\apidoc\\.docusaurus\\docusaurus-plugin-content-pages\\default\\plugin-route-context-module-100.json",15745],cfa22f06:[()=>n.e(5877).then(n.bind(n,25999)),"@site/docs/module/btccheckpoint/epochsubmissions.md",25999],d0a38806:[()=>n.e(7010).then(n.t.bind(n,58497,19)),"~blog/default/apidoc-blog-tags-hello-e94-list.json",58497],d0e52832:[()=>n.e(6746).then(n.bind(n,40648)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking.md",40648],d1787a9f:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(3131)]).then(n.bind(n,8258)),"@site/docs/api/grpcrestapi/recent-epoch-status-count.api.mdx",8258],d1d1ba10:[()=>n.e(6018).then(n.bind(n,77909)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient.md",77909],d1d51956:[()=>n.e(8530).then(n.bind(n,68785)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_broadcast.md",68785],d250a8ad:[()=>n.e(609).then(n.bind(n,63381)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip.md",63381],d3d9a0b4:[()=>n.e(2938).then(n.bind(n,79399)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_params/Babylond_query_params_subspace.md",79399],d4165f1a:[()=>n.e(7510).then(n.bind(n,68345)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_gov.md",68345],d435fc59:[()=>n.e(7412).then(n.bind(n,27725)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/Babylond_query_slashing_signing-infos.md",27725],d440eb69:[()=>n.e(2574).then(n.bind(n,71775)),"@site/docs/cli/babylond/babylondaddgenesisaccount.md",71775],d4f2b85f:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(7334)]).then(n.bind(n,49260)),"@site/docs/api/grpcrestapi/zone-concierge-params.api.mdx",49260],d4f8fd38:[()=>n.e(8106).then(n.bind(n,26234)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_bank/Babylond_query_bank_denom_metadata.md",26234],d61b0ce0:[()=>n.e(8475).then(n.t.bind(n,98406,19)),"~blog/default/apidoc-blog-tags-facebook-7fd.json",98406],d7a7851b:[()=>n.e(9442).then(n.bind(n,27669)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_gov/Babylond_query_gov_param.md",27669],d7d4476b:[()=>n.e(5634).then(n.bind(n,67798)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_multi-sign/Babylond_tx_multi-sign-batch.md",67798],d8749342:[()=>n.e(5067).then(n.bind(n,30619)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_gov/Babylond_query_gov_proposal.md",30619],d8cbbe4e:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(3894)]).then(n.bind(n,67249)),"@site/docs/api/grpcrestapi/epoch-status.api.mdx",67249],d917e943:[()=>n.e(3656).then(n.bind(n,67037)),"@site/docs/grpc/btclightclient/lightparams.md",67037],d93305d8:[()=>n.e(2040).then(n.bind(n,76178)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_validate-signatures.md",76178],d938b752:[()=>n.e(1666).then(n.bind(n,50617)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/Babylond_query_btccheckpoint_btc-height.md",50617],d9e16301:[()=>n.e(6217).then(n.bind(n,67243)),"@site/docs/support.md",67243],d9f32620:[()=>n.e(1914).then(n.bind(n,62900)),"@site/blog/2021-08-26-welcome/index.md",62900],da75e4a9:[()=>n.e(412).then(n.bind(n,42442)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_params.md",42442],db1253b6:[()=>n.e(2470).then(n.bind(n,33283)),"@site/docs/cli/babylond/Babylond_tendermint/Babylond_tendermint_unsafe-reset-all.md",33283],dba3a055:[()=>n.e(4927).then(n.bind(n,40619)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection.md",40619],ddfe76eb:[()=>n.e(7427).then(n.bind(n,62001)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/Babylond_query_checkpointing_params.md",62001],de2b01a4:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(2324)]).then(n.bind(n,97192)),"@site/docs/api/grpcrestapi/list-headers.api.mdx",97192],de8bf585:[()=>n.e(6144).then(n.bind(n,26046)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_params.md",26046],df3454d6:[()=>n.e(2405).then(n.bind(n,905)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_zoneconcierge.md",905],e05a6a08:[()=>n.e(2064).then(n.bind(n,74743)),"@site/docs/cli/babylond/cli.md",74743],e069cd4d:[()=>n.e(7227).then(n.bind(n,13279)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_mint/Babylond_query_mint_inflation.md",13279],e1ac0c72:[()=>n.e(2720).then(n.bind(n,30684)),"@site/docs/cli/babylond/babylondinit.md",30684],e26929b5:[()=>n.e(153).then(n.bind(n,3583)),"@site/docs/cli/babylond/Babylond_tendermint/Babylond_tendermint_show-address.md",3583],e273c56f:[()=>n.e(2362).then(n.bind(n,81947)),"@site/blog/2019-05-28-first-blog-post.md",81947],e4304727:[()=>n.e(8456).then(n.bind(n,57521)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_gov/Babylond_query_gov_votes.md",57521],e502bc66:[()=>n.e(6025).then(n.t.bind(n,11531,19)),"~blog/default/apidoc-blog-tags-docusaurus-652-list.json",11531],e51d6c97:[()=>n.e(5677).then(n.bind(n,74088)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_commission.md",74088],e62d0efd:[()=>n.e(8741).then(n.bind(n,4415)),"@site/docs/cli/babylond/Babylond_tendermint/Babylond_tendermint_reset-state.md",4415],e6a2758f:[()=>n.e(9789).then(n.bind(n,80109)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_distribution.md",80109],e6d9f638:[()=>n.e(2063).then(n.bind(n,6559)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_rewards.md",6559],e774afe7:[()=>n.e(9335).then(n.bind(n,12187)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-hash.md",12187],e78c6cc1:[()=>n.e(1529).then(n.bind(n,40638)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc-transfer.md",40638],e86d70b1:[()=>n.e(8509).then(n.bind(n,68828)),"@site/docs/module/btclightclient/lightcontains.md",68828],e8a6fe18:[()=>n.e(9166).then(n.bind(n,44297)),"@site/docs/cli/babylond/babylondcreatebls.md",44297],ebc755b0:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(7430)]).then(n.bind(n,85281)),"@site/docs/api/grpcrestapi/contains-bytes.api.mdx",85281],ec1ae86d:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(3635)]).then(n.bind(n,57910)),"@site/docs/api/grpcrestapi/btc-light-client-params.api.mdx",57910],edfa09b1:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(6664)]).then(n.bind(n,10109)),"@site/docs/api/grpcrestapi/validator-lifecycle.api.mdx",10109],ee81f057:[()=>n.e(7360).then(n.bind(n,15518)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces.md",15518],eeb71042:[()=>n.e(5300).then(n.bind(n,82550)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching.md",82550],f0002da9:[()=>n.e(2653).then(n.bind(n,15551)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_account.md",15551],f04cd1df:[()=>n.e(3335).then(n.bind(n,57)),"@site/docs/grpc/btclightclient/lighttip.md",57],f0ad3fbb:[()=>Promise.all([n.e(532),n.e(646),n.e(3527),n.e(8612)]).then(n.bind(n,83527)),"@theme/ApiDoc",83527],f0b52e0e:[()=>n.e(2366).then(n.bind(n,96780)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_base-header.md",96780],f0d35eb9:[()=>n.e(689).then(n.bind(n,38304)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_mint/Babylond_query_mint_annual-provisions.md",38304],f143feff:[()=>n.e(9009).then(n.bind(n,22889)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant.md",22889],f146aff7:[()=>n.e(8494).then(n.bind(n,40846)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_bank/Babylond_query_bank_balances.md",40846],f21cae60:[()=>n.e(840).then(n.bind(n,41331)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_crisis.md",41331],f25ac144:[()=>n.e(9055).then(n.bind(n,64866)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/Babylond_tx_gov_submit-legacy-proposal_param.md",64866],f25db916:[()=>n.e(3586).then(n.bind(n,61985)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_auth/Babylond_query_auth_account.md",61985],f2a5e09c:[()=>n.e(1939).then(n.bind(n,24234)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/Babylond_tx_staking_unbond.md",24234],f2d8f05a:[()=>n.e(6680).then(n.bind(n,25246)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client.md",25246],f2f43978:[()=>n.e(8689).then(n.bind(n,73225)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_gov/Babylond_query_gov_tally.md",73225],f490d6fa:[()=>n.e(2228).then(n.bind(n,90314)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_unbounding-delegations.md",90314],f4f34a3a:[()=>n.e(8636).then(n.bind(n,55145)),"@site/blog/2021-08-01-mdx-blog-post.mdx?truncated=true",55145],f5f11e92:[()=>n.e(9090).then(n.bind(n,93089)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_params.md",93089],f683d94e:[()=>n.e(697).then(n.bind(n,97248)),"@site/docs/cli/babylond/keys/babylondkeysmnemonic.md",97248],f6df7c26:[()=>n.e(9936).then(n.bind(n,72453)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_auth/Babylond_query_auth_accounts.md",72453],f7309b79:[()=>n.e(3298).then(n.bind(n,65867)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel.md",65867],f7acca86:[()=>n.e(1284).then(n.bind(n,87176)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/Babylond_tx_vesting_create-periodic-vesting-account.md",87176],f7c1d69e:[()=>n.e(367).then(n.bind(n,60956)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_slashes.md",60956],f8d6bd51:[()=>n.e(5383).then(n.bind(n,54717)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_auth.md",54717],f99359f4:[()=>n.e(9316).then(n.bind(n,66572)),"@site/docs/grpc/btccheckpointgrpc.md",66572],f9d25b73:[()=>n.e(2923).then(n.bind(n,55996)),"@site/docs/error.md",55996],fb6d5b68:[()=>n.e(6011).then(n.bind(n,22664)),"@site/docs/cli/babylond/Babylond_testnet.md",22664],fc99b1a5:[()=>n.e(1924).then(n.bind(n,94756)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_delegations.md",94756],fccd764a:[()=>Promise.all([n.e(532),n.e(1363),n.e(8682),n.e(6882),n.e(1486)]).then(n.bind(n,70130)),"@site/docs/api/grpcrestapi/contains.api.mdx",70130],fecd3b53:[()=>n.e(2313).then(n.bind(n,97263)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants.md",97263],feda6033:[()=>n.e(8868).then(n.bind(n,29183)),"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/Babylond_tx_gov_submit-proposal.md",29183],ffe593fd:[()=>n.e(3919).then(n.bind(n,37984)),"@site/docs/cli/babylond/BabylondQuery/Babylond_query_zoneconcierge.md",37984]};function c(e){let{error:t,retry:n,pastDelay:a}=e;return t?o.createElement("div",{style:{textAlign:"center",color:"#fff",backgroundColor:"#fa383e",borderColor:"#fa383e",borderStyle:"solid",borderRadius:"0.25rem",borderWidth:"1px",boxSizing:"border-box",display:"block",padding:"1rem",flex:"0 0 50%",marginLeft:"25%",marginRight:"25%",marginTop:"5rem",maxWidth:"50%",width:"100%"}},o.createElement("p",null,String(t)),o.createElement("div",null,o.createElement("button",{type:"button",onClick:n},"Retry"))):a?o.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",height:"100vh"}},o.createElement("svg",{id:"loader",style:{width:128,height:110,position:"absolute",top:"calc(100vh - 64%)"},viewBox:"0 0 45 45",xmlns:"http://www.w3.org/2000/svg",stroke:"#61dafb"},o.createElement("g",{fill:"none",fillRule:"evenodd",transform:"translate(1 1)",strokeWidth:"2"},o.createElement("circle",{cx:"22",cy:"22",r:"6",strokeOpacity:"0"},o.createElement("animate",{attributeName:"r",begin:"1.5s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),o.createElement("animate",{attributeName:"stroke-opacity",begin:"1.5s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),o.createElement("animate",{attributeName:"stroke-width",begin:"1.5s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})),o.createElement("circle",{cx:"22",cy:"22",r:"6",strokeOpacity:"0"},o.createElement("animate",{attributeName:"r",begin:"3s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),o.createElement("animate",{attributeName:"stroke-opacity",begin:"3s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),o.createElement("animate",{attributeName:"stroke-width",begin:"3s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})),o.createElement("circle",{cx:"22",cy:"22",r:"8"},o.createElement("animate",{attributeName:"r",begin:"0s",dur:"1.5s",values:"6;1;2;3;4;5;6",calcMode:"linear",repeatCount:"indefinite"}))))):null}var d=n(99670),p=n(30226);function b(e,t){if("*"===e)return r()({loading:c,loader:()=>n.e(4972).then(n.bind(n,4972)),modules:["@theme/NotFound"],webpack:()=>[4972],render(e,t){const n=e.default;return o.createElement(p.z,{value:{plugin:{name:"native",id:"default"}}},o.createElement(n,t))}});const i=s[`${e}-${t}`],b={},u=[],y=[],h=(0,d.Z)(i);return Object.entries(h).forEach((e=>{let[t,n]=e;const o=l[n];o&&(b[t]=o[0],u.push(o[1]),y.push(o[2]))})),r().Map({loading:c,loader:b,modules:u,webpack:()=>y,render(t,n){const r=JSON.parse(JSON.stringify(i));Object.entries(t).forEach((t=>{let[n,o]=t;const a=o.default;if(!a)throw new Error(`The page component at ${e} doesn't have a default export. This makes it impossible to render anything. Consider default-exporting a React component.`);"object"!=typeof a&&"function"!=typeof a||Object.keys(o).filter((e=>"default"!==e)).forEach((e=>{a[e]=o[e]}));let i=r;const s=n.split(".");s.slice(0,-1).forEach((e=>{i=i[e]})),i[s[s.length-1]]=a}));const s=r.__comp;delete r.__comp;const l=r.__context;return delete r.__context,o.createElement(p.z,{value:l},o.createElement(s,(0,a.Z)({},r,n)))}})}const u=[{path:"/apidoc/blog",component:b("/apidoc/blog","aeb"),exact:!0},{path:"/apidoc/blog/archive",component:b("/apidoc/blog/archive","235"),exact:!0},{path:"/apidoc/blog/first-blog-post",component:b("/apidoc/blog/first-blog-post","2ea"),exact:!0},{path:"/apidoc/blog/long-blog-post",component:b("/apidoc/blog/long-blog-post","3fb"),exact:!0},{path:"/apidoc/blog/mdx-blog-post",component:b("/apidoc/blog/mdx-blog-post","5a8"),exact:!0},{path:"/apidoc/blog/tags",component:b("/apidoc/blog/tags","260"),exact:!0},{path:"/apidoc/blog/tags/docusaurus",component:b("/apidoc/blog/tags/docusaurus","f4b"),exact:!0},{path:"/apidoc/blog/tags/facebook",component:b("/apidoc/blog/tags/facebook","b2a"),exact:!0},{path:"/apidoc/blog/tags/hello",component:b("/apidoc/blog/tags/hello","b4c"),exact:!0},{path:"/apidoc/blog/tags/hola",component:b("/apidoc/blog/tags/hola","56a"),exact:!0},{path:"/apidoc/blog/welcome",component:b("/apidoc/blog/welcome","34c"),exact:!0},{path:"/apidoc/docs/grpc/grpcgateway",component:b("/apidoc/docs/grpc/grpcgateway","140"),exact:!0},{path:"/apidoc/markdown-page",component:b("/apidoc/markdown-page","228"),exact:!0},{path:"/apidoc/docs",component:b("/apidoc/docs","8f0"),routes:[{path:"/apidoc/docs/api/grpcrestapi/babylon-grpc-gateway-docs",component:b("/apidoc/docs/api/grpcrestapi/babylon-grpc-gateway-docs","05d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/api/grpcrestapi/base-header",component:b("/apidoc/docs/api/grpcrestapi/base-header","f17"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/bls-public-key-list",component:b("/apidoc/docs/api/grpcrestapi/bls-public-key-list","87e"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/btc-checkpoint-height",component:b("/apidoc/docs/api/grpcrestapi/btc-checkpoint-height","8e8"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/btc-checkpoint-params",component:b("/apidoc/docs/api/grpcrestapi/btc-checkpoint-params","2d9"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/btc-light-client-params",component:b("/apidoc/docs/api/grpcrestapi/btc-light-client-params","339"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/chain-info",component:b("/apidoc/docs/api/grpcrestapi/chain-info","b35"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/chain-list",component:b("/apidoc/docs/api/grpcrestapi/chain-list","6b9"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/checkpointing-params",component:b("/apidoc/docs/api/grpcrestapi/checkpointing-params","8da"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/contains",component:b("/apidoc/docs/api/grpcrestapi/contains","a24"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/contains-bytes",component:b("/apidoc/docs/api/grpcrestapi/contains-bytes","57b"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/current-epoch",component:b("/apidoc/docs/api/grpcrestapi/current-epoch","c20"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/delegation-lifecycle",component:b("/apidoc/docs/api/grpcrestapi/delegation-lifecycle","376"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/epoch-chain-info",component:b("/apidoc/docs/api/grpcrestapi/epoch-chain-info","5ff"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/epoch-info",component:b("/apidoc/docs/api/grpcrestapi/epoch-info","fb5"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/epoch-msgs",component:b("/apidoc/docs/api/grpcrestapi/epoch-msgs","65c"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/epoch-status",component:b("/apidoc/docs/api/grpcrestapi/epoch-status","6ea"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/epoch-submissions",component:b("/apidoc/docs/api/grpcrestapi/epoch-submissions","4a5"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/epoch-val-set",component:b("/apidoc/docs/api/grpcrestapi/epoch-val-set","37d"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/epoching-params",component:b("/apidoc/docs/api/grpcrestapi/epoching-params","b49"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/finalized-chain-info",component:b("/apidoc/docs/api/grpcrestapi/finalized-chain-info","926"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/finalized-chain-info-until-height",component:b("/apidoc/docs/api/grpcrestapi/finalized-chain-info-until-height","552"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/hashes",component:b("/apidoc/docs/api/grpcrestapi/hashes","b2c"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/header",component:b("/apidoc/docs/api/grpcrestapi/header","e8a"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/latest-epoch-msgs",component:b("/apidoc/docs/api/grpcrestapi/latest-epoch-msgs","dca"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/list-epoch-headers",component:b("/apidoc/docs/api/grpcrestapi/list-epoch-headers","3d1"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/list-headers",component:b("/apidoc/docs/api/grpcrestapi/list-headers","ef6"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/main-chain",component:b("/apidoc/docs/api/grpcrestapi/main-chain","843"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/raw-checkpoint",component:b("/apidoc/docs/api/grpcrestapi/raw-checkpoint","0a4"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/raw-checkpoint-list",component:b("/apidoc/docs/api/grpcrestapi/raw-checkpoint-list","aca"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/recent-epoch-status-count",component:b("/apidoc/docs/api/grpcrestapi/recent-epoch-status-count","31d"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/tip",component:b("/apidoc/docs/api/grpcrestapi/tip","e8d"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/validator-lifecycle",component:b("/apidoc/docs/api/grpcrestapi/validator-lifecycle","249"),exact:!0},{path:"/apidoc/docs/api/grpcrestapi/zone-concierge-params",component:b("/apidoc/docs/api/grpcrestapi/zone-concierge-params","121"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond",component:b("/apidoc/docs/cli/babylond","ef1"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylond_query",component:b("/apidoc/docs/cli/babylond/babylond_query","40a"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylond_rollback",component:b("/apidoc/docs/cli/babylond/babylond_rollback","2fe"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylond_rosetta",component:b("/apidoc/docs/cli/babylond/babylond_rosetta","568"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylond_start",component:b("/apidoc/docs/cli/babylond/babylond_start","9c7"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylond_status",component:b("/apidoc/docs/cli/babylond/babylond_status","619"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylond_tendermint",component:b("/apidoc/docs/cli/babylond/babylond_tendermint","b8e"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_reset-state",component:b("/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_reset-state","3f4"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-address",component:b("/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-address","988"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-node-id",component:b("/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-node-id","d2b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-validator",component:b("/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-validator","848"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_unsafe-reset-all",component:b("/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_unsafe-reset-all","0d6"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_version",component:b("/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_version","724"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylond_testnet",component:b("/apidoc/docs/cli/babylond/babylond_testnet","57b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylond_tx",component:b("/apidoc/docs/cli/babylond/babylond_tx","cfc"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_authz",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_authz","5b9"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_exec",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_exec","10f"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_grant",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_grant","c04"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_revoke",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_revoke","648"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_bank",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_bank","f83"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_multi-send",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_multi-send","a68"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_send",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_send","bac"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_broadcast",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_broadcast","d11"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_btccheckpoint",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_btccheckpoint","32b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_btclightclient",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_btclightclient","7ed"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_btclightclient/babylond_tx_btclightclient_insert-header",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_btclightclient/babylond_tx_btclightclient_insert-header","7d7"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_checkpointing",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_checkpointing","9dd"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_create-validator",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_create-validator","bbe"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_submit",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_submit","08e"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_crisis",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_crisis","9db"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_crisis/babylond_tx_crisis_invariant-broken",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_crisis/babylond_tx_crisis_invariant-broken","bad"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_decode",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_decode","2ec"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_distribution",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_distribution","c3d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_fund-community-pool",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_fund-community-pool","a50"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_set-withdraw-addr",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_set-withdraw-addr","f74"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-all-rewards",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-all-rewards","706"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-rewards",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-rewards","877"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_encode",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_encode","5fb"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_epoching",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_epoching","524"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_delegate",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_delegate","52a"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_redelegate",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_redelegate","ba5"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_unbond",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_unbond","35d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_evidence",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_evidence","a28"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_feegrant",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_feegrant","9e2"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_grant",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_grant","d00"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_revoke",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_revoke","c86"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_gov",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_gov","468"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_deposit",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_deposit","9ef"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_draft-proposal",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_draft-proposal","000"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-legacy-proposal",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-legacy-proposal","b5b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-proposal",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-proposal","36a"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_vote",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_vote","c8e"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_weighted-vote",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_weighted-vote","fc7"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_cancel",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_cancel","282"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_community",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_community","332"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_param",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_param","7e1"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_software",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_software","b23"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_ibc",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_ibc","19b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_ibc-transfer",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_ibc-transfer","d02"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc-transfer/babylond_tx_ibc-transfer_transfer",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc-transfer/babylond_tx_ibc-transfer_transfer","f4f"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_channel",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_channel","0c7"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_client",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_client","6e0"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_create",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_create","4d8"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_misbehaviour",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_misbehaviour","7de"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_update",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_update","17d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_upgrade",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_upgrade","fd6"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_multi-sign",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_multi-sign","eeb"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_multi-sign/babylond_tx_multi-sign-batch",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_multi-sign/babylond_tx_multi-sign-batch","92d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_sign",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_sign","175"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_sign/babylond_tx_sign-batch",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_sign/babylond_tx_sign-batch","5ba"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_slashing",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_slashing","c0d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_slashing/babylond_tx_slashing_unjail",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_slashing/babylond_tx_slashing_unjail","fca"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_staking",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_staking","2d7"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_cancel-unbond",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_cancel-unbond","e3d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_create-validator",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_create-validator","e33"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_delegate",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_delegate","05f"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_edit-validator",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_edit-validator","d1b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_redelegate",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_redelegate","284"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_unbond",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_unbond","e22"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_validate-signatures",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_validate-signatures","a44"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_vesting",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_vesting","7c5"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-periodic-vesting-account",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-periodic-vesting-account","0b9"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-permanent-locked-account",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-permanent-locked-account","f8f"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-vesting-account",component:b("/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-vesting-account","f51"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_zoneconcierge",component:b("/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_zoneconcierge","5fb"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylond_validate-genesis",component:b("/apidoc/docs/cli/babylond/babylond_validate-genesis","327"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylond_version",component:b("/apidoc/docs/cli/babylond/babylond_version","035"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylondaddgenesisaccount",component:b("/apidoc/docs/cli/babylond/babylondaddgenesisaccount","868"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylondaddgenesisbls",component:b("/apidoc/docs/cli/babylond/babylondaddgenesisbls","0e1"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylondcollectgentxs",component:b("/apidoc/docs/cli/babylond/babylondcollectgentxs","1e6"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylondconfig",component:b("/apidoc/docs/cli/babylond/babylondconfig","723"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylondcreatebls",component:b("/apidoc/docs/cli/babylond/babylondcreatebls","c35"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylondcreategenesiskey",component:b("/apidoc/docs/cli/babylond/babylondcreategenesiskey","49b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylondexport",component:b("/apidoc/docs/cli/babylond/babylondexport","d5c"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylondgentx",component:b("/apidoc/docs/cli/babylond/babylondgentx","018"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylondhelp",component:b("/apidoc/docs/cli/babylond/babylondhelp","74d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/babylondinit",component:b("/apidoc/docs/cli/babylond/babylondinit","201"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_account",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_account","75a"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_auth",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_auth","ba1"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_account",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_account","3eb"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_accounts",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_accounts","9e3"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_address_by_acc_num",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_address_by_acc_num","6c7"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_account",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_account","1a2"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_accounts",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_accounts","bb1"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_params","35b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_authz",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_authz","16f"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_authz/babylond_query_authz_grants",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_authz/babylond_query_authz_grants","c66"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_grantee",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_grantee","9f3"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_granter",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_granter","811"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_bank",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_bank","e47"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_balances",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_balances","aa4"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_denom_metadata",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_denom_metadata","002"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total","e5d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_block",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_block","aba"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_btccheckpoint",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_btccheckpoint","116"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_btc-height",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_btc-height","ffb"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_epoch_submissions",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_epoch_submissions","b69"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_params","317"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_btclightclient",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_btclightclient","69c"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_base-header",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_base-header","670"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_contains",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_contains","600"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes","5bb"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_main-chain",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_main-chain","118"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_params","292"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip","6ae"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_checkpointing",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_checkpointing","369"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_params","a3c"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_raw_checkpoint",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_raw_checkpoint","fa1"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/Babylond_query_checkpointing_raw-checkpoint/babylond_query_checkpointing_raw-checkpoint_list",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/Babylond_query_checkpointing_raw-checkpoint/babylond_query_checkpointing_raw-checkpoint_list","bfb"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_distribution",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_distribution","048"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_commission",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_commission","36f"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_community-pool",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_community-pool","7d4"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_params","349"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_rewards",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_rewards","a64"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes","46a"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_validator-outstanding-rewards",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_validator-outstanding-rewards","b04"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_epoching",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_epoching","a56"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_epoching/babylond_query_epoching_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_epoching/babylond_query_epoching_params","03e"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_evidence",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_evidence","874"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_freegrant",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_freegrant","685"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grant",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grant","fcb"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-grantee",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-grantee","735"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-granter",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-granter","256"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_gov",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_gov","e95"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposit",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposit","c8e"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposits",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposits","700"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_param",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_param","1cb"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_params","b53"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposal",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposal","ba6"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposals",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposals","32d"),exact:!0},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposer",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposer","8bf"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_tally",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_tally","c7c"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_vote",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_vote","278"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_votes",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_votes","97c"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc","c17"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel","d1f"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_channels",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_channels","82b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_client-state",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_client-state","629"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_connections",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_connections","815"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_end",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_end","820"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_next-sequence-receive",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_next-sequence-receive","24e"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-ack",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-ack","a87"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitment",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitment","9a2"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitments",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitments","596"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-receipt",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-receipt","b12"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-acks",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-acks","21e"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-packets",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-packets","2a6"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client","7b5"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state","ed0"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights","12b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-states",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-states","3d0"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_header",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_header","c11"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_params","a0d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_self-consensus-state",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_self-consensus-state","290"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_state",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_state","4d0"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_states",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_states","c1c"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_status",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_status","511"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection","72f"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections","e9d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_end",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_end","7c2"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_path",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_path","b30"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer","928"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-hash",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-hash","bc8"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-trace",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-trace","f8e"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces","1ca"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_escrow-address",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_escrow-address","3e4"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_params","69a"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_mint",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_mint","bae"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_annual-provisions",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_annual-provisions","1db"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_inflation",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_inflation","715"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_params","0e4"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_params","3ed"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_params/babylond_query_params_subspace",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_params/babylond_query_params_subspace","fb6"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_slashing",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_slashing","ce8"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_params","b56"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-info",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-info","f62"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-infos",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-infos","8d8"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_staking",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_staking","e56"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegation",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegation","e1b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations","10d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations-to",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations-to","7b0"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_historical-info",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_historical-info","f2f"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_params","a83"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_pool",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_pool","4ec"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation","a98"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation-from",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation-from","e6c"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegations",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegations","be6"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegation",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegation","a0c"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations","647"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations-from",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations-from","c9d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validator",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validator","ce9"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validators",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validators","300"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_tendermint-validator-set",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_tendermint-validator-set","87e"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_tx",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_tx","33d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_txs",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_txs","078"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_upgrade",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_upgrade","b48"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_applied",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_applied","1b4"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_module_versions",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_module_versions","cfe"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_plan",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_plan","02a"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_zoneconcierge",component:b("/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_zoneconcierge","905"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_zoneconcierge/babylond_query_zoneconcierge_params",component:b("/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_zoneconcierge/babylond_query_zoneconcierge_params","87b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/cli",component:b("/apidoc/docs/cli/babylond/cli","49e"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/debug/babylonddebug",component:b("/apidoc/docs/cli/babylond/debug/babylonddebug","b22"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/debug/babylonddebugaddr",component:b("/apidoc/docs/cli/babylond/debug/babylonddebugaddr","4e6"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/debug/babylonddebugpubkey",component:b("/apidoc/docs/cli/babylond/debug/babylonddebugpubkey","718"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/debug/babylonddebugpubkeyraw",component:b("/apidoc/docs/cli/babylond/debug/babylonddebugpubkeyraw","22c"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/debug/babylonddebugrawbytes",component:b("/apidoc/docs/cli/babylond/debug/babylonddebugrawbytes","1e8"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/keys/babylondkeys",component:b("/apidoc/docs/cli/babylond/keys/babylondkeys","45b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/keys/babylondkeysdd",component:b("/apidoc/docs/cli/babylond/keys/babylondkeysdd","e8b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/keys/babylondkeysdelete",component:b("/apidoc/docs/cli/babylond/keys/babylondkeysdelete","f87"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/keys/babylondkeysexport",component:b("/apidoc/docs/cli/babylond/keys/babylondkeysexport","524"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/keys/babylondkeysimport",component:b("/apidoc/docs/cli/babylond/keys/babylondkeysimport","0a2"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/keys/babylondkeyslist",component:b("/apidoc/docs/cli/babylond/keys/babylondkeyslist","9bf"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/keys/babylondkeysmigrate",component:b("/apidoc/docs/cli/babylond/keys/babylondkeysmigrate","030"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/keys/babylondkeysmnemonic",component:b("/apidoc/docs/cli/babylond/keys/babylondkeysmnemonic","31a"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/keys/babylondkeysparse",component:b("/apidoc/docs/cli/babylond/keys/babylondkeysparse","6df"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/keys/babylondkeysrename",component:b("/apidoc/docs/cli/babylond/keys/babylondkeysrename","c9c"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/keys/babylondkeysshow",component:b("/apidoc/docs/cli/babylond/keys/babylondkeysshow","c51"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/migrate",component:b("/apidoc/docs/cli/babylond/migrate","85b"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/cli/babylond/preparegenesis",component:b("/apidoc/docs/cli/babylond/preparegenesis","e62"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/error",component:b("/apidoc/docs/error","8a6"),exact:!0},{path:"/apidoc/docs/grpc/btccheckpointgrpc",component:b("/apidoc/docs/grpc/btccheckpointgrpc","127"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/btclightclient/lightclient1",component:b("/apidoc/docs/grpc/btclightclient/lightclient1","fe0"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/btclightclient/lightcontains",component:b("/apidoc/docs/grpc/btclightclient/lightcontains","3fc"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/btclightclient/lightcontainsbytes",component:b("/apidoc/docs/grpc/btclightclient/lightcontainsbytes","b01"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/btclightclient/lighthashes",component:b("/apidoc/docs/grpc/btclightclient/lighthashes","bb8"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/btclightclient/lightheader",component:b("/apidoc/docs/grpc/btclightclient/lightheader","84a"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/btclightclient/lightmainchain",component:b("/apidoc/docs/grpc/btclightclient/lightmainchain","916"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/btclightclient/lightparams",component:b("/apidoc/docs/grpc/btclightclient/lightparams","0f7"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/btclightclient/lighttip",component:b("/apidoc/docs/grpc/btclightclient/lighttip","9cf"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/checkpointing/checkpointmod",component:b("/apidoc/docs/grpc/checkpointing/checkpointmod","6e6"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/checkpointing/rawcheckpoint",component:b("/apidoc/docs/grpc/checkpointing/rawcheckpoint","01f"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/checkpointing/rawcheckpointlistepochnum",component:b("/apidoc/docs/grpc/checkpointing/rawcheckpointlistepochnum","172"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/checkpointing/rawcheckpointliststatus",component:b("/apidoc/docs/grpc/checkpointing/rawcheckpointliststatus","2eb"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/concierge/conciergeparams",component:b("/apidoc/docs/grpc/concierge/conciergeparams","926"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/concierge/zoneconcierge",component:b("/apidoc/docs/grpc/concierge/zoneconcierge","b4d"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/epoching/currentepoch",component:b("/apidoc/docs/grpc/epoching/currentepoch","b89"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/epoching/delegationlifecycle",component:b("/apidoc/docs/grpc/epoching/delegationlifecycle","7a8"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/epoching/epoch",component:b("/apidoc/docs/grpc/epoching/epoch","261"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/epoching/epochinfomod",component:b("/apidoc/docs/grpc/epoching/epochinfomod","ed3"),exact:!0},{path:"/apidoc/docs/grpc/epoching/epochmsgs",component:b("/apidoc/docs/grpc/epoching/epochmsgs","452"),exact:!0},{path:"/apidoc/docs/grpc/epoching/latepochmsgs",component:b("/apidoc/docs/grpc/epoching/latepochmsgs","543"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/epoching/paramsmod",component:b("/apidoc/docs/grpc/epoching/paramsmod","e58"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/epoching/validatorlifecycle",component:b("/apidoc/docs/grpc/epoching/validatorlifecycle","cda"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/epochnum",component:b("/apidoc/docs/grpc/epochnum","044"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/grpcgateway",component:b("/apidoc/docs/grpc/grpcgateway","6ea"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/grpcparams",component:b("/apidoc/docs/grpc/grpcparams","151"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/grpc/submissions",component:b("/apidoc/docs/grpc/submissions","152"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/installation",component:b("/apidoc/docs/installation","0f0"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/intro",component:b("/apidoc/docs/intro","7d8"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/introduction/keycomponent",component:b("/apidoc/docs/introduction/keycomponent","9a1"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/introduction/overview",component:b("/apidoc/docs/introduction/overview","a47"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/introduction/usecase",component:b("/apidoc/docs/introduction/usecase","ffa"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/module/btccheckpoint",component:b("/apidoc/docs/module/btccheckpoint","ecb"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/module/btccheckpoint/checkpointheight",component:b("/apidoc/docs/module/btccheckpoint/checkpointheight","fc2"),exact:!0},{path:"/apidoc/docs/module/btccheckpoint/checkpointparams",component:b("/apidoc/docs/module/btccheckpoint/checkpointparams","9e1"),exact:!0},{path:"/apidoc/docs/module/btccheckpoint/epochsubmissions",component:b("/apidoc/docs/module/btccheckpoint/epochsubmissions","3e8"),exact:!0},{path:"/apidoc/docs/module/btclightclient/lightbaseheader",component:b("/apidoc/docs/module/btclightclient/lightbaseheader","df2"),exact:!0},{path:"/apidoc/docs/module/btclightclient/lightclient",component:b("/apidoc/docs/module/btclightclient/lightclient","bcb"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/module/btclightclient/lightcontains",component:b("/apidoc/docs/module/btclightclient/lightcontains","f4d"),exact:!0},{path:"/apidoc/docs/module/btclightclient/lightcontainsbytes",component:b("/apidoc/docs/module/btclightclient/lightcontainsbytes","9f0"),exact:!0},{path:"/apidoc/docs/module/btclightclient/lighthashes",component:b("/apidoc/docs/module/btclightclient/lighthashes","c00"),exact:!0},{path:"/apidoc/docs/module/btclightclient/lightmainchain",component:b("/apidoc/docs/module/btclightclient/lightmainchain","ff7"),exact:!0},{path:"/apidoc/docs/module/btclightclient/lightparams",component:b("/apidoc/docs/module/btclightclient/lightparams","052"),exact:!0},{path:"/apidoc/docs/module/btclightclient/lighttip",component:b("/apidoc/docs/module/btclightclient/lighttip","255"),exact:!0},{path:"/apidoc/docs/module/checkpointing/blspublickey",component:b("/apidoc/docs/module/checkpointing/blspublickey","e2b"),exact:!0},{path:"/apidoc/docs/module/checkpointing/checkpointingmod",component:b("/apidoc/docs/module/checkpointing/checkpointingmod","24c"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/module/checkpointing/checkpointparams",component:b("/apidoc/docs/module/checkpointing/checkpointparams","220"),exact:!0},{path:"/apidoc/docs/module/checkpointing/epochstatus",component:b("/apidoc/docs/module/checkpointing/epochstatus","280"),exact:!0},{path:"/apidoc/docs/module/checkpointing/latestcheckpoint",component:b("/apidoc/docs/module/checkpointing/latestcheckpoint","bd3"),exact:!0},{path:"/apidoc/docs/module/checkpointing/rawcheckpoint",component:b("/apidoc/docs/module/checkpointing/rawcheckpoint","7fb"),exact:!0},{path:"/apidoc/docs/module/checkpointing/rawcheckpointinglist",component:b("/apidoc/docs/module/checkpointing/rawcheckpointinglist","de2"),exact:!0},{path:"/apidoc/docs/module/checkpointing/recentepochcount",component:b("/apidoc/docs/module/checkpointing/recentepochcount","6b6"),exact:!0},{path:"/apidoc/docs/module/checkpointing/recentrawcheckpointinglist",component:b("/apidoc/docs/module/checkpointing/recentrawcheckpointinglist","203"),exact:!0},{path:"/apidoc/docs/module/czconcierge",component:b("/apidoc/docs/module/czconcierge","bef"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/module/czconcierge/chaininfo",component:b("/apidoc/docs/module/czconcierge/chaininfo","861"),exact:!0},{path:"/apidoc/docs/module/czconcierge/chainlist",component:b("/apidoc/docs/module/czconcierge/chainlist","4e5"),exact:!0},{path:"/apidoc/docs/module/czconcierge/conciergeparams",component:b("/apidoc/docs/module/czconcierge/conciergeparams","2db"),exact:!0},{path:"/apidoc/docs/module/czconcierge/finalizedchaininfo",component:b("/apidoc/docs/module/czconcierge/finalizedchaininfo","e3c"),exact:!0},{path:"/apidoc/docs/module/epoch/currentepoch",component:b("/apidoc/docs/module/epoch/currentepoch","059"),exact:!0},{path:"/apidoc/docs/module/epoch/delegationlifecycle",component:b("/apidoc/docs/module/epoch/delegationlifecycle","84c"),exact:!0},{path:"/apidoc/docs/module/epoch/epochinfomod",component:b("/apidoc/docs/module/epoch/epochinfomod","48e"),exact:!0},{path:"/apidoc/docs/module/epoch/epochingmod",component:b("/apidoc/docs/module/epoch/epochingmod","981"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/module/epoch/epochmsgs",component:b("/apidoc/docs/module/epoch/epochmsgs","e3e"),exact:!0},{path:"/apidoc/docs/module/epoch/latepochmsgs",component:b("/apidoc/docs/module/epoch/latepochmsgs","48b"),exact:!0},{path:"/apidoc/docs/module/epoch/paramsmod",component:b("/apidoc/docs/module/epoch/paramsmod","b93"),exact:!0},{path:"/apidoc/docs/module/epoch/validatorlifecycle",component:b("/apidoc/docs/module/epoch/validatorlifecycle","42e"),exact:!0},{path:"/apidoc/docs/modules",component:b("/apidoc/docs/modules","818"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/node/nodeconfig",component:b("/apidoc/docs/node/nodeconfig","68a"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/node/nodemanage",component:b("/apidoc/docs/node/nodemanage","92a"),exact:!0},{path:"/apidoc/docs/node/nodeoperator",component:b("/apidoc/docs/node/nodeoperator","1dc"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/resources",component:b("/apidoc/docs/resources","9e0"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/resources/mainnet",component:b("/apidoc/docs/resources/mainnet","f86"),exact:!0},{path:"/apidoc/docs/resources/testnet",component:b("/apidoc/docs/resources/testnet","27f"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/setnode",component:b("/apidoc/docs/setnode","cab"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/support",component:b("/apidoc/docs/support","526"),exact:!0,sidebar:"docs"},{path:"/apidoc/docs/videoguides",component:b("/apidoc/docs/videoguides","46f"),exact:!0,sidebar:"docs"}]},{path:"/apidoc/",component:b("/apidoc/","480"),exact:!0},{path:"*",component:b("*")}]},98934:(e,t,n)=>{"use strict";n.d(t,{_:()=>a,t:()=>i});var o=n(67294);const a=o.createContext(!1);function i(e){let{children:t}=e;const[n,i]=(0,o.useState)(!1);return(0,o.useEffect)((()=>{i(!0)}),[]),o.createElement(a.Provider,{value:n},t)}},49383:(e,t,n)=>{"use strict";var o=n(67294),a=n(73935),i=n(73727),r=n(70405),s=n(10412);const l=[n(32497),n(3310),n(18320),n(52295),n(41304),n(4750),n(56748)];var c=n(723),d=n(16550),p=n(18790);function b(e){let{children:t}=e;return o.createElement(o.Fragment,null,t)}var u=n(87462),y=n(35742),h=n(52263),f=n(44996),m=n(86668),g=n(10833),_=n(94711),k=n(19727),v=n(43320),B=n(90197);function x(){const{i18n:{defaultLocale:e,localeConfigs:t}}=(0,h.Z)(),n=(0,_.l)();return o.createElement(y.Z,null,Object.entries(t).map((e=>{let[t,{htmlLang:a}]=e;return o.createElement("link",{key:t,rel:"alternate",href:n.createUrl({locale:t,fullyQualified:!0}),hrefLang:a})})),o.createElement("link",{rel:"alternate",href:n.createUrl({locale:e,fullyQualified:!0}),hrefLang:"x-default"}))}function w(e){let{permalink:t}=e;const{siteConfig:{url:n}}=(0,h.Z)(),a=function(){const{siteConfig:{url:e}}=(0,h.Z)(),{pathname:t}=(0,d.TH)();return e+(0,f.Z)(t)}(),i=t?`${n}${t}`:a;return o.createElement(y.Z,null,o.createElement("meta",{property:"og:url",content:i}),o.createElement("link",{rel:"canonical",href:i}))}function q(){const{i18n:{currentLocale:e}}=(0,h.Z)(),{metadata:t,image:n}=(0,m.L)();return o.createElement(o.Fragment,null,o.createElement(y.Z,null,o.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),o.createElement("body",{className:k.h})),n&&o.createElement(g.d,{image:n}),o.createElement(w,null),o.createElement(x,null),o.createElement(B.Z,{tag:v.HX,locale:e}),o.createElement(y.Z,null,t.map(((e,t)=>o.createElement("meta",(0,u.Z)({key:t},e))))))}const T=new Map;function E(e){if(T.has(e.pathname))return{...e,pathname:T.get(e.pathname)};if((0,p.f)(c.Z,e.pathname).some((e=>{let{route:t}=e;return!0===t.exact})))return T.set(e.pathname,e.pathname),e;const t=e.pathname.trim().replace(/(?:\/index)?\.html$/,"")||"/";return T.set(e.pathname,t),{...e,pathname:t}}var S=n(98934),C=n(58940);function A(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];const a=l.map((t=>{var o;const a=(null==(o=t.default)?void 0:o[e])??t[e];return null==a?void 0:a(...n)}));return()=>a.forEach((e=>null==e?void 0:e()))}const P=function(e){let{children:t,location:n,previousLocation:a}=e;return(0,o.useLayoutEffect)((()=>{a!==n&&(a&&function(e){const{hash:t}=e;if(t){const e=decodeURIComponent(t.substring(1)),n=document.getElementById(e);null==n||n.scrollIntoView()}else window.scrollTo(0,0)}(n),A("onRouteDidUpdate",{previousLocation:a,location:n}))}),[a,n]),t};function R(e){const t=Array.from(new Set([e,decodeURI(e)])).map((e=>(0,p.f)(c.Z,e))).flat();return Promise.all(t.map((e=>null==e.route.component.preload?void 0:e.route.component.preload())))}class I extends o.Component{constructor(e){super(e),this.previousLocation=void 0,this.routeUpdateCleanupCb=void 0,this.previousLocation=null,this.routeUpdateCleanupCb=s.default.canUseDOM?A("onRouteUpdate",{previousLocation:null,location:this.props.location}):()=>{},this.state={nextRouteHasLoaded:!0}}shouldComponentUpdate(e,t){if(e.location===this.props.location)return t.nextRouteHasLoaded;const n=e.location;return this.previousLocation=this.props.location,this.setState({nextRouteHasLoaded:!1}),this.routeUpdateCleanupCb=A("onRouteUpdate",{previousLocation:this.previousLocation,location:n}),R(n.pathname).then((()=>{this.routeUpdateCleanupCb(),this.setState({nextRouteHasLoaded:!0})})).catch((e=>{console.warn(e),window.location.reload()})),!1}render(){const{children:e,location:t}=this.props;return o.createElement(P,{previousLocation:this.previousLocation,location:t},o.createElement(d.AW,{location:t,render:()=>e}))}}const L=I,N="docusaurus-base-url-issue-banner-container",D="docusaurus-base-url-issue-banner-suggestion-container",j="__DOCUSAURUS_INSERT_BASEURL_BANNER";function U(e){return`\nwindow['${j}'] = true;\n\ndocument.addEventListener('DOMContentLoaded', maybeInsertBanner);\n\nfunction maybeInsertBanner() {\n  var shouldInsert = window['${j}'];\n  shouldInsert && insertBanner();\n}\n\nfunction insertBanner() {\n  var bannerContainer = document.getElementById('${N}');\n  if (!bannerContainer) {\n    return;\n  }\n  var bannerHtml = ${JSON.stringify(function(e){return`\n<div id="docusaurus-base-url-issue-banner" style="border: thick solid red; background-color: rgb(255, 230, 179); margin: 20px; padding: 20px; font-size: 20px;">\n   <p style="font-weight: bold; font-size: 30px;">Your Docusaurus site did not load properly.</p>\n   <p>A very common reason is a wrong site <a href="https://docusaurus.io/docs/docusaurus.config.js/#baseurl" style="font-weight: bold;">baseUrl configuration</a>.</p>\n   <p>Current configured baseUrl = <span style="font-weight: bold; color: red;">${e}</span> ${"/"===e?" (default value)":""}</p>\n   <p>We suggest trying baseUrl = <span id="${D}" style="font-weight: bold; color: green;"></span></p>\n</div>\n`}(e)).replace(/</g,"\\<")};\n  bannerContainer.innerHTML = bannerHtml;\n  var suggestionContainer = document.getElementById('${D}');\n  var actualHomePagePath = window.location.pathname;\n  var suggestedBaseUrl = actualHomePagePath.substr(-1) === '/'\n        ? actualHomePagePath\n        : actualHomePagePath + '/';\n  suggestionContainer.innerHTML = suggestedBaseUrl;\n}\n`}function Q(){const{siteConfig:{baseUrl:e}}=(0,h.Z)();return(0,o.useLayoutEffect)((()=>{window[j]=!1}),[]),o.createElement(o.Fragment,null,!s.default.canUseDOM&&o.createElement(y.Z,null,o.createElement("script",null,U(e))),o.createElement("div",{id:N}))}function O(){const{siteConfig:{baseUrl:e,baseUrlIssueBanner:t}}=(0,h.Z)(),{pathname:n}=(0,d.TH)();return t&&n===e?o.createElement(Q,null):null}function M(){const{siteConfig:{favicon:e,title:t,noIndex:n},i18n:{currentLocale:a,localeConfigs:i}}=(0,h.Z)(),r=(0,f.Z)(e),{htmlLang:s,direction:l}=i[a];return o.createElement(y.Z,null,o.createElement("html",{lang:s,dir:l}),o.createElement("title",null,t),o.createElement("meta",{property:"og:title",content:t}),o.createElement("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),n&&o.createElement("meta",{name:"robots",content:"noindex, nofollow"}),e&&o.createElement("link",{rel:"icon",href:r}))}var F=n(44763);function z(){const e=(0,p.H)(c.Z),t=(0,d.TH)();return o.createElement(F.Z,null,o.createElement(C.M,null,o.createElement(S.t,null,o.createElement(b,null,o.createElement(M,null),o.createElement(q,null),o.createElement(O,null),o.createElement(L,{location:E(t)},e)))))}var H=n(16887);const Z=function(e){try{return document.createElement("link").relList.supports(e)}catch{return!1}}("prefetch")?function(e){return new Promise(((t,n)=>{var o;if("undefined"==typeof document)return void n();const a=document.createElement("link");a.setAttribute("rel","prefetch"),a.setAttribute("href",e),a.onload=()=>t(),a.onerror=()=>n();const i=document.getElementsByTagName("head")[0]??(null==(o=document.getElementsByName("script")[0])?void 0:o.parentNode);null==i||i.appendChild(a)}))}:function(e){return new Promise(((t,n)=>{const o=new XMLHttpRequest;o.open("GET",e,!0),o.withCredentials=!0,o.onload=()=>{200===o.status?t():n()},o.send(null)}))};var G=n(99670);const $=new Set,K=new Set,V=()=>{var e,t;return(null==(e=navigator.connection)?void 0:e.effectiveType.includes("2g"))||(null==(t=navigator.connection)?void 0:t.saveData)},W={prefetch(e){if(!(e=>!V()&&!K.has(e)&&!$.has(e))(e))return!1;$.add(e);const t=(0,p.f)(c.Z,e).flatMap((e=>{return t=e.route.path,Object.entries(H).filter((e=>{let[n]=e;return n.replace(/-[^-]+$/,"")===t})).flatMap((e=>{let[,t]=e;return Object.values((0,G.Z)(t))}));var t}));return Promise.all(t.map((e=>{const t=n.gca(e);return t&&!t.includes("undefined")?Z(t).catch((()=>{})):Promise.resolve()})))},preload:e=>!!(e=>!V()&&!K.has(e))(e)&&(K.add(e),R(e))},J=Object.freeze(W);if(s.default.canUseDOM){window.docusaurus=J;const e=a.hydrate;R(window.location.pathname).then((()=>{e(o.createElement(r.B6,null,o.createElement(i.VK,null,o.createElement(z,null))),document.getElementById("__docusaurus"))}))}},58940:(e,t,n)=>{"use strict";n.d(t,{_:()=>d,M:()=>p});var o=n(67294),a=n(36809);const i=JSON.parse('{"docusaurus-plugin-redoc":{"grpc":{"url":"redocusaurus\\\\grpc.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","info":{"title":"Babylon - gRPC Gateway docs","description":"A REST interface for state queries","version":"1.0.0"},"paths":{"/babylon/btccheckpoint/v1/params":{"get":{"summary":"Parameters queries the parameters of the module.","operationId":"BtcCheckpointParams","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object","properties":{"btc_confirmation_depth":{"type":"string","format":"uint64","title":"btc_confirmation_depth is the confirmation depth in BTC.\\nA block is considered irreversible only when it is at least k-deep in BTC\\n(k in research paper)"},"checkpoint_finalization_timeout":{"type":"string","format":"uint64","title":"checkpoint_finalization_timeout is the maximum time window (measured in BTC blocks) between a checkpoint\\n- being submitted to BTC, and\\n- being reported back to BBN\\nIf a checkpoint has not been reported back within w BTC blocks, then BBN has dishonest majority and is stalling checkpoints\\n(w in research paper)"}}}},"description":"QueryParamsResponse is response type for the Query/Params RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"tags":["Query"]}},"/babylon/btccheckpoint/v1/{epoch_num}":{"get":{"summary":"BtcCheckpointHeight returns earliest block height for given rawcheckpoint","operationId":"BtcCheckpointHeight","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"earliest_btc_block_number":{"type":"string","format":"uint64","title":"Earliest btc block number containing given raw checkpoint"}},"title":"QueryCurrentEpochResponse is response type for the Query/CurrentEpoch RPC method"}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"parameters":[{"name":"epoch_num","description":"Number of epoch for which the earliest checkpointing btc height is requested","in":"path","required":true,"schema":{"type":"string","format":"uint64"}}],"tags":["Query"]}},"/babylon/btccheckpoint/v1/{epoch_num}/submissions":{"get":{"operationId":"EpochSubmissions","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"keys":{"type":"array","items":{"type":"object","properties":{"key":{"type":"array","items":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block"}}},"title":"Checkpoint can be composed from multiple transactions, so to identify whole\\nsubmission we need list of transaction keys.\\nEach submission can generally be identified by this list of (txIdx, blockHash)\\ntuples.\\nNote: this could possibly be optimized as if transactions were in one block\\nthey would have the same block hash and different indexes, but each blockhash\\nis only 33 (1  byte for prefix encoding and 32 byte hash), so there should\\nbe other strong arguments for this optimization"},"description":"All submissions saved during an epoch."},"pagination":{"type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}}}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"parameters":[{"name":"epoch_num","description":"Number of epoch for which submissions are requested","in":"path","required":true,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.key","description":"key is a value returned in PageResponse.next_key to begin\\nquerying the next page most efficiently. Only one of offset or key\\nshould be set.","in":"query","required":false,"schema":{"type":"string","format":"byte"}},{"name":"pagination.offset","description":"offset is a numeric offset that can be used when key is unavailable.\\nIt is less efficient than using key. Only one of offset or key should\\nbe set.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.limit","description":"limit is the total number of results to be returned in the result page.\\nIf left empty it will default to a value to be set by each app.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.count_total","description":"count_total is set to true  to indicate that the result set should include\\na count of the total number of items available for pagination in UIs.\\ncount_total is only respected when offset is used. It is ignored when key\\nis set.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"pagination.reverse","description":"reverse is set to true if results are to be returned in the descending order.\\n\\nSince: cosmos-sdk 0.43","in":"query","required":false,"schema":{"type":"boolean"}}],"tags":["Query"]}},"/babylon/btclightclient/v1/baseheader":{"get":{"operationId":"BaseHeader","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"header":{"type":"object","properties":{"header":{"type":"string","format":"byte"},"hash":{"type":"string","format":"byte"},"height":{"type":"string","format":"uint64"},"work":{"type":"string","format":"byte"}}}}}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"tags":["Query"]}},"/babylon/btclightclient/v1/contains":{"get":{"summary":"Contains checks whether a hash is maintained by the module.","operationId":"Contains","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"contains":{"type":"boolean"}},"description":"QueryContainsResponse is response type for the Query/Contains RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"parameters":[{"name":"hash","in":"query","required":false,"schema":{"type":"string","format":"byte"}}],"tags":["Query"]}},"/babylon/btclightclient/v1/containsBytes":{"get":{"summary":"ContainsBytes is a temporary method that\\nchecks whether a hash is maintained by the module.\\nSee discussion at https://github.com/babylonchain/babylon/pull/132\\nfor more details.","operationId":"ContainsBytes","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"contains":{"type":"boolean"}},"description":"QueryContainsResponse is response type for the temporary Query/ContainsBytes RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"parameters":[{"name":"hash","in":"query","required":false,"schema":{"type":"string","format":"byte"}}],"tags":["Query"]}},"/babylon/btclightclient/v1/hashes":{"get":{"summary":"Hashes retrieves the hashes maintained by the module.","operationId":"Hashes","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"hashes":{"type":"array","items":{"type":"string","format":"byte"}},"pagination":{"type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}},"description":"QueryHashesResponse is response type for the Query/Hashes RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"parameters":[{"name":"pagination.key","description":"key is a value returned in PageResponse.next_key to begin\\nquerying the next page most efficiently. Only one of offset or key\\nshould be set.","in":"query","required":false,"schema":{"type":"string","format":"byte"}},{"name":"pagination.offset","description":"offset is a numeric offset that can be used when key is unavailable.\\nIt is less efficient than using key. Only one of offset or key should\\nbe set.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.limit","description":"limit is the total number of results to be returned in the result page.\\nIf left empty it will default to a value to be set by each app.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.count_total","description":"count_total is set to true  to indicate that the result set should include\\na count of the total number of items available for pagination in UIs.\\ncount_total is only respected when offset is used. It is ignored when key\\nis set.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"pagination.reverse","description":"reverse is set to true if results are to be returned in the descending order.\\n\\nSince: cosmos-sdk 0.43","in":"query","required":false,"schema":{"type":"boolean"}}],"tags":["Query"]}},"/babylon/btclightclient/v1/mainchain":{"get":{"summary":"MainChain returns the canonical chain","operationId":"MainChain","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"header":{"type":"string","format":"byte"},"hash":{"type":"string","format":"byte"},"height":{"type":"string","format":"uint64"},"work":{"type":"string","format":"byte"}}}},"pagination":{"type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}},"description":"QueryMainChainResponse is response type for the Query/MainChain RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"parameters":[{"name":"pagination.key","description":"key is a value returned in PageResponse.next_key to begin\\nquerying the next page most efficiently. Only one of offset or key\\nshould be set.","in":"query","required":false,"schema":{"type":"string","format":"byte"}},{"name":"pagination.offset","description":"offset is a numeric offset that can be used when key is unavailable.\\nIt is less efficient than using key. Only one of offset or key should\\nbe set.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.limit","description":"limit is the total number of results to be returned in the result page.\\nIf left empty it will default to a value to be set by each app.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.count_total","description":"count_total is set to true  to indicate that the result set should include\\na count of the total number of items available for pagination in UIs.\\ncount_total is only respected when offset is used. It is ignored when key\\nis set.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"pagination.reverse","description":"reverse is set to true if results are to be returned in the descending order.\\n\\nSince: cosmos-sdk 0.43","in":"query","required":false,"schema":{"type":"boolean"}}],"tags":["Query"]}},"/babylon/btclightclient/v1/params":{"get":{"summary":"Parameters queries the parameters of the module.","operationId":"BtcLightClientParams","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object"}},"description":"QueryParamsResponse is response type for the Query/Params RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"tags":["Query"]}},"/babylon/btclightclient/v1/tip":{"get":{"summary":"Tip return best header on canonical chain","operationId":"Tip","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"header":{"type":"object","properties":{"header":{"type":"string","format":"byte"},"hash":{"type":"string","format":"byte"},"height":{"type":"string","format":"uint64"},"work":{"type":"string","format":"byte"}}}}}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"tags":["Query"]}},"/babylon/epoching/v1/current_epoch":{"get":{"summary":"CurrentEpoch queries the current epoch","operationId":"CurrentEpoch","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"current_epoch":{"type":"string","format":"uint64","title":"current_epoch is the current epoch number"},"epoch_boundary":{"type":"string","format":"uint64","title":"epoch_boundary is the height of this epoch\'s last block"}},"title":"QueryCurrentEpochResponse is the response type for the Query/CurrentEpoch RPC method"}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"tags":["Query"]}},"/babylon/epoching/v1/delegation_lifecycle/{del_addr}":{"get":{"summary":"DelegationLifecycle queries the lifecycle of a given delegation","operationId":"DelegationLifecycle","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"del_life":{"type":"object","properties":{"del_addr":{"type":"string"},"del_life":{"type":"array","items":{"type":"object","properties":{"state":{"type":"string","enum":["CREATED","BONDED","UNBONDING","UNBONDED","REMOVED"],"default":"CREATED"},"val_addr":{"type":"string"},"block_height":{"type":"string","format":"uint64"},"block_time":{"type":"string","format":"date-time"}}}}}}}}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"del_addr","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Query"]}},"/babylon/epoching/v1/epochs/{epoch_num}":{"get":{"summary":"EpochInfo queries the information of a given epoch","operationId":"EpochInfo","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"epoch":{"type":"object","properties":{"epoch_number":{"type":"string","format":"uint64"},"current_epoch_interval":{"type":"string","format":"uint64"},"first_block_height":{"type":"string","format":"uint64"},"last_block_header":{"description":"last_block_header is the header of the last block in this epoch.\\nBabylon needs to remember the last header of each epoch to complete unbonding validators/delegations when a previous epoch\'s checkpoint is finalised.\\nThe last_block_header field is nil in the epoch\'s beginning, and is set upon the end of this epoch.","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}}},"app_hash_root":{"type":"string","format":"byte","title":"app_hash_root is the Merkle root of all AppHashs in this epoch\\nIt will be used for proving a block is in an epoch"},"sealer_header":{"title":"sealer_header is the 2nd header of the next epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."}}}}}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"epoch_num","in":"path","required":true,"schema":{"type":"string","format":"uint64"}}],"tags":["Query"]}},"/babylon/epoching/v1/epochs/{epoch_num}/messages":{"get":{"summary":"EpochMsgs queries the messages of a given epoch","operationId":"EpochMsgs","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"msgs":{"type":"array","items":{"type":"object","properties":{"tx_id":{"type":"string","format":"byte","title":"tx_id is the ID of the tx that contains the message"},"msg_id":{"type":"string","format":"byte","title":"msg_id is the original message ID, i.e., hash of the marshaled message"},"block_height":{"type":"string","format":"uint64","title":"block_height is the height when this msg is submitted to Babylon"},"block_time":{"type":"string","format":"date-time","title":"block_time is the timestamp when this msg is submitted to Babylon"},"msg_create_validator":{"type":"object","properties":{"description":{"type":"object","properties":{"moniker":{"type":"string","description":"moniker defines a human-readable name for the validator."},"identity":{"type":"string","description":"identity defines an optional identity signature (ex. UPort or Keybase)."},"website":{"type":"string","description":"website defines an optional website link."},"security_contact":{"type":"string","description":"security_contact defines an optional email for security contact."},"details":{"type":"string","description":"details define other optional details."}},"description":"Description defines a validator description."},"commission":{"type":"object","properties":{"rate":{"type":"string","description":"rate is the commission rate charged to delegators, as a fraction."},"max_rate":{"type":"string","description":"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},"max_change_rate":{"type":"string","description":"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},"description":"CommissionRates defines the initial commission rates to be used for creating\\na validator."},"min_self_delegation":{"type":"string"},"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"pubkey":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"value":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgCreateValidator defines a SDK message for creating a new validator."},"msg_delegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgDelegate defines a SDK message for performing a delegation of coins\\nfrom a delegator to a validator."},"msg_undelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgUndelegate defines a SDK message for performing an undelegation from a\\ndelegate and a validator."},"msg_begin_redelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_src_address":{"type":"string"},"validator_dst_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgBeginRedelegate defines a SDK message for performing a redelegation\\nof coins from a delegator and source validator to a destination validator."}},"title":"QueuedMessage is a message that can change the validator set and is delayed to the epoch boundary"},"title":"msgs is the list of messages queued in the current epoch"},"pagination":{"title":"pagination defines the pagination in the response","type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}},"title":"QueryEpochMsgsResponse is the response type for the Query/EpochMsgs RPC method"}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"epoch_num","description":"epoch_num is the number of epoch of the requested msg queue","in":"path","required":true,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.key","description":"key is a value returned in PageResponse.next_key to begin\\nquerying the next page most efficiently. Only one of offset or key\\nshould be set.","in":"query","required":false,"schema":{"type":"string","format":"byte"}},{"name":"pagination.offset","description":"offset is a numeric offset that can be used when key is unavailable.\\nIt is less efficient than using key. Only one of offset or key should\\nbe set.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.limit","description":"limit is the total number of results to be returned in the result page.\\nIf left empty it will default to a value to be set by each app.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.count_total","description":"count_total is set to true  to indicate that the result set should include\\na count of the total number of items available for pagination in UIs.\\ncount_total is only respected when offset is used. It is ignored when key\\nis set.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"pagination.reverse","description":"reverse is set to true if results are to be returned in the descending order.\\n\\nSince: cosmos-sdk 0.43","in":"query","required":false,"schema":{"type":"boolean"}}],"tags":["Query"]}},"/babylon/epoching/v1/epochs/{epoch_num}/validator_set":{"get":{"summary":"EpochValSet queries the validator set of a given epoch","operationId":"EpochValSet","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"validators":{"type":"array","items":{"type":"object","properties":{"addr":{"type":"string","format":"byte","title":"addr is the validator\'s address (in sdk.ValAddress)"},"power":{"type":"string","format":"int64","title":"power is the validator\'s voting power"}}}},"total_voting_power":{"type":"string","format":"int64"},"pagination":{"type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}}}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"epoch_num","in":"path","required":true,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.key","description":"key is a value returned in PageResponse.next_key to begin\\nquerying the next page most efficiently. Only one of offset or key\\nshould be set.","in":"query","required":false,"schema":{"type":"string","format":"byte"}},{"name":"pagination.offset","description":"offset is a numeric offset that can be used when key is unavailable.\\nIt is less efficient than using key. Only one of offset or key should\\nbe set.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.limit","description":"limit is the total number of results to be returned in the result page.\\nIf left empty it will default to a value to be set by each app.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.count_total","description":"count_total is set to true  to indicate that the result set should include\\na count of the total number of items available for pagination in UIs.\\ncount_total is only respected when offset is used. It is ignored when key\\nis set.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"pagination.reverse","description":"reverse is set to true if results are to be returned in the descending order.\\n\\nSince: cosmos-sdk 0.43","in":"query","required":false,"schema":{"type":"boolean"}}],"tags":["Query"]}},"/babylon/epoching/v1/epochs:latest/messages":{"get":{"summary":"LatestEpochMsgs queries the messages within a given number of most recent epochs","operationId":"LatestEpochMsgs","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"latest_epoch_msgs":{"type":"array","items":{"type":"object","properties":{"epoch_number":{"type":"string","format":"uint64"},"msgs":{"type":"array","items":{"type":"object","properties":{"tx_id":{"type":"string","format":"byte","title":"tx_id is the ID of the tx that contains the message"},"msg_id":{"type":"string","format":"byte","title":"msg_id is the original message ID, i.e., hash of the marshaled message"},"block_height":{"type":"string","format":"uint64","title":"block_height is the height when this msg is submitted to Babylon"},"block_time":{"type":"string","format":"date-time","title":"block_time is the timestamp when this msg is submitted to Babylon"},"msg_create_validator":{"type":"object","properties":{"description":{"type":"object","properties":{"moniker":{"type":"string","description":"moniker defines a human-readable name for the validator."},"identity":{"type":"string","description":"identity defines an optional identity signature (ex. UPort or Keybase)."},"website":{"type":"string","description":"website defines an optional website link."},"security_contact":{"type":"string","description":"security_contact defines an optional email for security contact."},"details":{"type":"string","description":"details define other optional details."}},"description":"Description defines a validator description."},"commission":{"type":"object","properties":{"rate":{"type":"string","description":"rate is the commission rate charged to delegators, as a fraction."},"max_rate":{"type":"string","description":"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},"max_change_rate":{"type":"string","description":"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},"description":"CommissionRates defines the initial commission rates to be used for creating\\na validator."},"min_self_delegation":{"type":"string"},"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"pubkey":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"value":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgCreateValidator defines a SDK message for creating a new validator."},"msg_delegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgDelegate defines a SDK message for performing a delegation of coins\\nfrom a delegator to a validator."},"msg_undelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgUndelegate defines a SDK message for performing an undelegation from a\\ndelegate and a validator."},"msg_begin_redelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_src_address":{"type":"string"},"validator_dst_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgBeginRedelegate defines a SDK message for performing a redelegation\\nof coins from a delegator and source validator to a destination validator."}},"title":"QueuedMessage is a message that can change the validator set and is delayed to the epoch boundary"}}}},"title":"epoch_msg_map is a list of QueuedMessageList\\neach QueuedMessageList has a field identifying the epoch number"},"pagination":{"type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}},"title":"QueryLatestEpochMsgsResponse is the response type for the Query/LatestEpochMsgs RPC method"}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"end_epoch","description":"end_epoch is the number of the last epoch to query.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"epoch_count","description":"epoch_count is the number of epochs to query.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.key","description":"key is a value returned in PageResponse.next_key to begin\\nquerying the next page most efficiently. Only one of offset or key\\nshould be set.","in":"query","required":false,"schema":{"type":"string","format":"byte"}},{"name":"pagination.offset","description":"offset is a numeric offset that can be used when key is unavailable.\\nIt is less efficient than using key. Only one of offset or key should\\nbe set.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.limit","description":"limit is the total number of results to be returned in the result page.\\nIf left empty it will default to a value to be set by each app.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.count_total","description":"count_total is set to true  to indicate that the result set should include\\na count of the total number of items available for pagination in UIs.\\ncount_total is only respected when offset is used. It is ignored when key\\nis set.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"pagination.reverse","description":"reverse is set to true if results are to be returned in the descending order.\\n\\nSince: cosmos-sdk 0.43","in":"query","required":false,"schema":{"type":"boolean"}}],"tags":["Query"]}},"/babylon/epoching/v1/params":{"get":{"summary":"Params queries the parameters of the module.","operationId":"EpochingParams","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object","properties":{"epoch_interval":{"type":"string","format":"uint64","title":"epoch_interval is the number of consecutive blocks to form an epoch"}}}},"description":"QueryParamsResponse is the response type for the Query/Params RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"tags":["Query"]}},"/babylon/epoching/v1/validator_lifecycle/{val_addr}":{"get":{"summary":"ValidatorLifecycle queries the lifecycle of a given validator","operationId":"ValidatorLifecycle","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"val_life":{"type":"object","properties":{"val_addr":{"type":"string"},"val_life":{"type":"array","items":{"type":"object","properties":{"state":{"type":"string","enum":["CREATED","BONDED","UNBONDING","UNBONDED","REMOVED"],"default":"CREATED"},"block_height":{"type":"string","format":"uint64"},"block_time":{"type":"string","format":"date-time"}}}}}}}}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"val_addr","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Query"]}},"/babylon/checkpointing/v1/bls_public_keys/{epoch_num}":{"get":{"summary":"BlsPublicKeyList queries a list of bls public keys of the validators at a given epoch number.","operationId":"BlsPublicKeyList","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"validator_with_bls_keys":{"type":"array","items":{"type":"object","properties":{"validator_address":{"type":"string"},"bls_pub_key":{"type":"string","format":"byte"},"voting_power":{"type":"string","format":"uint64"}},"title":"ValidatorWithBlsKey couples validator address, voting power, and its bls public key"}},"pagination":{"description":"pagination defines the pagination in the response.","type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}}}},"description":"QueryBlsPublicKeyListResponse is the response type for the Query/BlsPublicKeys\\nRPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"parameters":[{"name":"epoch_num","description":"epoch_num defines the epoch for the queried bls public keys","in":"path","required":true,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.key","description":"key is a value returned in PageResponse.next_key to begin\\nquerying the next page most efficiently. Only one of offset or key\\nshould be set.","in":"query","required":false,"schema":{"type":"string","format":"byte"}},{"name":"pagination.offset","description":"offset is a numeric offset that can be used when key is unavailable.\\nIt is less efficient than using key. Only one of offset or key should\\nbe set.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.limit","description":"limit is the total number of results to be returned in the result page.\\nIf left empty it will default to a value to be set by each app.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.count_total","description":"count_total is set to true  to indicate that the result set should include\\na count of the total number of items available for pagination in UIs.\\ncount_total is only respected when offset is used. It is ignored when key\\nis set.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"pagination.reverse","description":"reverse is set to true if results are to be returned in the descending order.\\n\\nSince: cosmos-sdk 0.43","in":"query","required":false,"schema":{"type":"boolean"}}],"tags":["Query"]}},"/babylon/checkpointing/v1/epochs/{epoch_num}/status":{"get":{"summary":"EpochStatus queries the status of the checkpoint at a given epoch","operationId":"EpochStatus","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"status":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC."}},"description":"QueryEpochStatusResponse is the response type for the Query/EpochStatus\\nRPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"parameters":[{"name":"epoch_num","in":"path","required":true,"schema":{"type":"string","format":"uint64"}}],"tags":["Query"]}},"/babylon/checkpointing/v1/epochs:status_count":{"get":{"summary":"RecentEpochStatusCount queries the number of epochs with each status in recent epochs","operationId":"RecentEpochStatusCount","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"tip_epoch":{"type":"string","format":"uint64"},"epoch_count":{"type":"string","format":"uint64"},"status_count":{"type":"object","additionalProperties":{"type":"string","format":"uint64"}}},"description":"QueryRecentEpochStatusCountResponse is the response type for the Query/EpochStatusCount\\nRPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"parameters":[{"name":"epoch_count","description":"epoch_count is the number of the most recent epochs to include in the aggregation.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}}],"tags":["Query"]}},"/babylon/checkpointing/v1/params":{"get":{"summary":"Parameters queries the parameters of the module.","operationId":"CheckpointingParams","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object"}},"description":"QueryParamsResponse is response type for the Query/Params RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"tags":["Query"]}},"/babylon/checkpointing/v1/raw_checkpoint/{epoch_num}":{"get":{"summary":"RawCheckpoint queries a checkpoints at a given epoch number.","operationId":"RawCheckpoint","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"raw_checkpoint":{"type":"object","properties":{"ckpt":{"type":"object","properties":{"epoch_num":{"type":"string","format":"uint64","title":"epoch_num defines the epoch number the raw checkpoint is for"},"last_commit_hash":{"type":"string","format":"byte","title":"last_commit_hash defines the \'LastCommitHash\' that individual BLS sigs are signed on"},"bitmap":{"type":"string","format":"byte","title":"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},"bls_multi_sig":{"type":"string","format":"byte","title":"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}},"title":"RawCheckpoint wraps the BLS multi sig with meta data"},"status":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.","title":"status defines the status of the checkpoint"},"bls_aggr_pk":{"type":"string","format":"byte","title":"bls_aggr_pk defines the aggregated BLS public key"},"power_sum":{"type":"string","format":"uint64","title":"power_sum defines the accumulated voting power for the checkpoint"},"lifecycle":{"type":"array","items":{"type":"object","properties":{"state":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.","title":"state defines the event of a state transition towards this state"},"block_height":{"type":"string","format":"uint64","title":"block_height is the height of the Babylon block that triggers the state update"},"block_time":{"type":"string","format":"date-time","title":"block_time is the timestamp in the Babylon block that triggers the state update"}}},"description":"lifecycle defines the lifecycle of this checkpoint, i.e., each state transition and\\nthe time (in both timestamp and block height) of this transition."}},"description":"RawCheckpointWithMeta wraps the raw checkpoint with meta data."}},"description":"QueryRawCheckpointResponse is the response type for the Query/RawCheckpoint\\nRPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"parameters":[{"name":"epoch_num","description":"epoch_num defines the epoch for the queried checkpoint","in":"path","required":true,"schema":{"type":"string","format":"uint64"}}],"tags":["Query"]}},"/babylon/checkpointing/v1/raw_checkpoints/{status}":{"get":{"summary":"RawCheckpointList queries all checkpoints that match the given status.","operationId":"RawCheckpointList","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"raw_checkpoints":{"type":"array","items":{"type":"object","properties":{"ckpt":{"type":"object","properties":{"epoch_num":{"type":"string","format":"uint64","title":"epoch_num defines the epoch number the raw checkpoint is for"},"last_commit_hash":{"type":"string","format":"byte","title":"last_commit_hash defines the \'LastCommitHash\' that individual BLS sigs are signed on"},"bitmap":{"type":"string","format":"byte","title":"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},"bls_multi_sig":{"type":"string","format":"byte","title":"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}},"title":"RawCheckpoint wraps the BLS multi sig with meta data"},"status":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.","title":"status defines the status of the checkpoint"},"bls_aggr_pk":{"type":"string","format":"byte","title":"bls_aggr_pk defines the aggregated BLS public key"},"power_sum":{"type":"string","format":"uint64","title":"power_sum defines the accumulated voting power for the checkpoint"},"lifecycle":{"type":"array","items":{"type":"object","properties":{"state":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.","title":"state defines the event of a state transition towards this state"},"block_height":{"type":"string","format":"uint64","title":"block_height is the height of the Babylon block that triggers the state update"},"block_time":{"type":"string","format":"date-time","title":"block_time is the timestamp in the Babylon block that triggers the state update"}}},"description":"lifecycle defines the lifecycle of this checkpoint, i.e., each state transition and\\nthe time (in both timestamp and block height) of this transition."}},"description":"RawCheckpointWithMeta wraps the raw checkpoint with meta data."},"title":"the order is going from the newest to oldest based on the epoch number"},"pagination":{"description":"pagination defines the pagination in the response.","type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}}}},"description":"QueryRawCheckpointListResponse is the response type for the Query/RawCheckpoints\\nRPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string"},"value":{"type":"string","format":"byte"}}}}}}}}}},"parameters":[{"name":"status","description":"status defines the status of the raw checkpoints of the query","in":"path","required":true,"schema":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"]}},{"name":"pagination.key","description":"key is a value returned in PageResponse.next_key to begin\\nquerying the next page most efficiently. Only one of offset or key\\nshould be set.","in":"query","required":false,"schema":{"type":"string","format":"byte"}},{"name":"pagination.offset","description":"offset is a numeric offset that can be used when key is unavailable.\\nIt is less efficient than using key. Only one of offset or key should\\nbe set.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.limit","description":"limit is the total number of results to be returned in the result page.\\nIf left empty it will default to a value to be set by each app.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.count_total","description":"count_total is set to true  to indicate that the result set should include\\na count of the total number of items available for pagination in UIs.\\ncount_total is only respected when offset is used. It is ignored when key\\nis set.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"pagination.reverse","description":"reverse is set to true if results are to be returned in the descending order.\\n\\nSince: cosmos-sdk 0.43","in":"query","required":false,"schema":{"type":"boolean"}}],"tags":["Query"]}},"/babylon/zoneconcierge/v1/chain_info/{chain_id}":{"get":{"summary":"ChainInfo queries the latest info of a chain in Babylon\'s view","operationId":"ChainInfo","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"chain_info":{"title":"chain_info is the info of the CZ","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the ID of the chain"},"latest_header":{"title":"latest_header is the latest header in CZ\'s canonical chain","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}}},"latest_forks":{"title":"latest_forks is the latest forks, formed as a series of IndexedHeader (from low to high)","type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"blocks is the list of non-canonical indexed headers at the same height"}},"description":"Forks is a list of non-canonical `IndexedHeader`s at the same height.\\nFor example, assuming the following blockchain\\n```\\nA <- B <- C <- D <- E\\n           \\\\ -- D1\\n           \\\\ -- D2\\n```\\nThen the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.\\n\\nNote that each `IndexedHeader` in the fork should have a valid quorum certificate. \\nSuch forks exist since Babylon considers CZs might have dishonest majority.\\nAlso note that the IBC-Go implementation will only consider the first header in a fork valid, since\\nthe subsequent headers cannot be verified without knowing the validator set in the previous header."},"timestamped_headers_count":{"type":"string","format":"uint64","title":"timestamped_headers_count is the number of timestamped headers in CZ\'s canonical chain"}}}},"description":"QueryChainInfoResponse is response type for the Query/ChainInfo RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"chain_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Query"]}},"/babylon/zoneconcierge/v1/chain_info/{chain_id}/epochs/{epoch_num}":{"get":{"summary":"EpochChainInfo queries the latest info of a chain in a given epoch of Babylon\'s view","operationId":"EpochChainInfo","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"chain_info":{"title":"chain_info is the info of the CZ","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the ID of the chain"},"latest_header":{"title":"latest_header is the latest header in CZ\'s canonical chain","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}}},"latest_forks":{"title":"latest_forks is the latest forks, formed as a series of IndexedHeader (from low to high)","type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"blocks is the list of non-canonical indexed headers at the same height"}},"description":"Forks is a list of non-canonical `IndexedHeader`s at the same height.\\nFor example, assuming the following blockchain\\n```\\nA <- B <- C <- D <- E\\n           \\\\ -- D1\\n           \\\\ -- D2\\n```\\nThen the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.\\n\\nNote that each `IndexedHeader` in the fork should have a valid quorum certificate. \\nSuch forks exist since Babylon considers CZs might have dishonest majority.\\nAlso note that the IBC-Go implementation will only consider the first header in a fork valid, since\\nthe subsequent headers cannot be verified without knowing the validator set in the previous header."},"timestamped_headers_count":{"type":"string","format":"uint64","title":"timestamped_headers_count is the number of timestamped headers in CZ\'s canonical chain"}}}},"description":"QueryEpochChainInfoResponse is response type for the Query/EpochChainInfo RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"chain_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"epoch_num","in":"path","required":true,"schema":{"type":"string","format":"uint64"}}],"tags":["Query"]}},"/babylon/zoneconcierge/v1/chain_info/{chain_id}/header/{height}":{"get":{"summary":"Header queries the CZ header and fork headers at a given height.","operationId":"Header","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"header":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"fork_headers":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"blocks is the list of non-canonical indexed headers at the same height"}},"description":"Forks is a list of non-canonical `IndexedHeader`s at the same height.\\nFor example, assuming the following blockchain\\n```\\nA <- B <- C <- D <- E\\n           \\\\ -- D1\\n           \\\\ -- D2\\n```\\nThen the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.\\n\\nNote that each `IndexedHeader` in the fork should have a valid quorum certificate. \\nSuch forks exist since Babylon considers CZs might have dishonest majority.\\nAlso note that the IBC-Go implementation will only consider the first header in a fork valid, since\\nthe subsequent headers cannot be verified without knowing the validator set in the previous header."}},"description":"QueryParamsResponse is response type for the Query/Header RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"chain_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"height","in":"path","required":true,"schema":{"type":"string","format":"uint64"}}],"tags":["Query"]}},"/babylon/zoneconcierge/v1/chains":{"get":{"summary":"ChainList queries the list of chains that checkpoint to Babylon","operationId":"ChainList","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"chain_ids":{"type":"array","items":{"type":"string"}}},"title":"QueryChainListResponse is response type for the Query/ChainList RPC method"}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"tags":["Query"]}},"/babylon/zoneconcierge/v1/finalized_chain_info/{chain_id}":{"get":{"summary":"FinalizedChainInfo queries the BTC-finalised info of a chain, with proofs","operationId":"FinalizedChainInfo","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"finalized_chain_info":{"title":"finalized_chain_info is the info of the CZ","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the ID of the chain"},"latest_header":{"title":"latest_header is the latest header in CZ\'s canonical chain","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}}},"latest_forks":{"title":"latest_forks is the latest forks, formed as a series of IndexedHeader (from low to high)","type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"blocks is the list of non-canonical indexed headers at the same height"}},"description":"Forks is a list of non-canonical `IndexedHeader`s at the same height.\\nFor example, assuming the following blockchain\\n```\\nA <- B <- C <- D <- E\\n           \\\\ -- D1\\n           \\\\ -- D2\\n```\\nThen the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.\\n\\nNote that each `IndexedHeader` in the fork should have a valid quorum certificate. \\nSuch forks exist since Babylon considers CZs might have dishonest majority.\\nAlso note that the IBC-Go implementation will only consider the first header in a fork valid, since\\nthe subsequent headers cannot be verified without knowing the validator set in the previous header."},"timestamped_headers_count":{"type":"string","format":"uint64","title":"timestamped_headers_count is the number of timestamped headers in CZ\'s canonical chain"}}},"epoch_info":{"title":"epoch_info is the metadata of the last BTC-finalised epoch","type":"object","properties":{"epoch_number":{"type":"string","format":"uint64"},"current_epoch_interval":{"type":"string","format":"uint64"},"first_block_height":{"type":"string","format":"uint64"},"last_block_header":{"description":"last_block_header is the header of the last block in this epoch.\\nBabylon needs to remember the last header of each epoch to complete unbonding validators/delegations when a previous epoch\'s checkpoint is finalised.\\nThe last_block_header field is nil in the epoch\'s beginning, and is set upon the end of this epoch.","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}}},"app_hash_root":{"type":"string","format":"byte","title":"app_hash_root is the Merkle root of all AppHashs in this epoch\\nIt will be used for proving a block is in an epoch"},"sealer_header":{"title":"sealer_header is the 2nd header of the next epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."}}},"raw_checkpoint":{"title":"raw_checkpoint is the raw checkpoint of this epoch","type":"object","properties":{"epoch_num":{"type":"string","format":"uint64","title":"epoch_num defines the epoch number the raw checkpoint is for"},"last_commit_hash":{"type":"string","format":"byte","title":"last_commit_hash defines the \'LastCommitHash\' that individual BLS sigs are signed on"},"bitmap":{"type":"string","format":"byte","title":"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},"bls_multi_sig":{"type":"string","format":"byte","title":"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}}},"btc_submission_key":{"title":"btc_submission_key is position of two BTC txs that include the raw checkpoint of this epoch","type":"object","properties":{"key":{"type":"array","items":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block"}}}},"proof":{"title":"proof is the proof that the chain info is finalized","type":"object","properties":{"proof_tx_in_block":{"title":"proof_tx_in_block is the proof that tx that carries the header is included in a certain Babylon block","type":"object","properties":{"root_hash":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"},"proof":{"type":"object","properties":{"total":{"type":"string","format":"int64"},"index":{"type":"string","format":"int64"},"leaf_hash":{"type":"string","format":"byte"},"aunts":{"type":"array","items":{"type":"string","format":"byte"}}}}},"description":"TxProof represents a Merkle proof of the presence of a transaction in the Merkle tree."},"proof_header_in_epoch":{"type":"object","properties":{"total":{"type":"string","format":"int64"},"index":{"type":"string","format":"int64"},"leaf_hash":{"type":"string","format":"byte"},"aunts":{"type":"array","items":{"type":"string","format":"byte"}}},"title":"proof_header_in_epoch is the proof that the Babylon header is in a certain epoch"},"proof_epoch_sealed":{"title":"proof_epoch_sealed is the proof that the epoch is sealed","type":"object","properties":{"validator_set":{"type":"array","items":{"type":"object","properties":{"validator_address":{"type":"string"},"bls_pub_key":{"type":"string","format":"byte"},"voting_power":{"type":"string","format":"uint64"}},"title":"ValidatorWithBlsKey couples validator address, voting power, and its bls public key"},"title":"validator_set is the validator set of the sealed epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header"},"proof_epoch_info":{"title":"proof_epoch_info is the Merkle proof that the epoch\'s metadata is committed to `app_hash` of the sealer header","type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}}},"proof_epoch_val_set":{"title":"proof_epoch_info is the Merkle proof that the epoch\'s validator set is committed to `app_hash` of the sealer header","type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}}}}},"proof_epoch_submitted":{"type":"array","items":{"type":"object","properties":{"key":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block","description":"key is the position (txIdx, blockHash) of this tx on BTC blockchain\\nAlthough it is already a part of SubmissionKey, we store it here again\\nto make TransactionInfo self-contained.\\nFor example, storing the key allows TransactionInfo to not relay on \\nthe fact that TransactionInfo will be ordered in the same order as \\nTransactionKeys in SubmissionKey."},"transaction":{"type":"string","format":"byte","title":"transaction is the full transaction in bytes"},"proof":{"type":"string","format":"byte","title":"proof is the Merkle proof that this tx is included in the position in `key`\\nTODO: maybe it could use here better format as we already processed and \\nvalideated the proof?"}},"title":"TransactionInfo is the info of a tx that contains Babylon checkpoint, including\\n- the position of the tx on BTC blockchain\\n- the full tx content\\n- the Merkle proof that this tx is on the above position"},"title":"proof_epoch_submitted is the proof that the epoch\'s checkpoint is included in BTC ledger\\nIt is the two TransactionInfo in the best (i.e., earliest) checkpoint submission"}}}},"description":"QueryFinalizedChainInfoResponse is response type for the Query/FinalizedChainInfo RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"chain_id","description":"chain_id is the ID of the CZ","in":"path","required":true,"schema":{"type":"string"}},{"name":"prove","description":"prove indicates whether the querier wants to get proofs of this timestamp.","in":"query","required":false,"schema":{"type":"boolean"}}],"tags":["Query"]}},"/babylon/zoneconcierge/v1/finalized_chain_info/{chain_id}/height/{height}":{"get":{"summary":"FinalizedChainInfoUntilHeight queries the BTC-finalised info no later than the provided CZ height, with proofs","operationId":"FinalizedChainInfoUntilHeight","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"finalized_chain_info":{"title":"finalized_chain_info is the info of the CZ","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the ID of the chain"},"latest_header":{"title":"latest_header is the latest header in CZ\'s canonical chain","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}}},"latest_forks":{"title":"latest_forks is the latest forks, formed as a series of IndexedHeader (from low to high)","type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"blocks is the list of non-canonical indexed headers at the same height"}},"description":"Forks is a list of non-canonical `IndexedHeader`s at the same height.\\nFor example, assuming the following blockchain\\n```\\nA <- B <- C <- D <- E\\n           \\\\ -- D1\\n           \\\\ -- D2\\n```\\nThen the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.\\n\\nNote that each `IndexedHeader` in the fork should have a valid quorum certificate. \\nSuch forks exist since Babylon considers CZs might have dishonest majority.\\nAlso note that the IBC-Go implementation will only consider the first header in a fork valid, since\\nthe subsequent headers cannot be verified without knowing the validator set in the previous header."},"timestamped_headers_count":{"type":"string","format":"uint64","title":"timestamped_headers_count is the number of timestamped headers in CZ\'s canonical chain"}}},"epoch_info":{"title":"epoch_info is the metadata of the last BTC-finalised epoch","type":"object","properties":{"epoch_number":{"type":"string","format":"uint64"},"current_epoch_interval":{"type":"string","format":"uint64"},"first_block_height":{"type":"string","format":"uint64"},"last_block_header":{"description":"last_block_header is the header of the last block in this epoch.\\nBabylon needs to remember the last header of each epoch to complete unbonding validators/delegations when a previous epoch\'s checkpoint is finalised.\\nThe last_block_header field is nil in the epoch\'s beginning, and is set upon the end of this epoch.","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}}},"app_hash_root":{"type":"string","format":"byte","title":"app_hash_root is the Merkle root of all AppHashs in this epoch\\nIt will be used for proving a block is in an epoch"},"sealer_header":{"title":"sealer_header is the 2nd header of the next epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."}}},"raw_checkpoint":{"title":"raw_checkpoint is the raw checkpoint of this epoch","type":"object","properties":{"epoch_num":{"type":"string","format":"uint64","title":"epoch_num defines the epoch number the raw checkpoint is for"},"last_commit_hash":{"type":"string","format":"byte","title":"last_commit_hash defines the \'LastCommitHash\' that individual BLS sigs are signed on"},"bitmap":{"type":"string","format":"byte","title":"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},"bls_multi_sig":{"type":"string","format":"byte","title":"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}}},"btc_submission_key":{"title":"btc_submission_key is position of two BTC txs that include the raw checkpoint of this epoch","type":"object","properties":{"key":{"type":"array","items":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block"}}}},"proof":{"title":"proof is the proof that the chain info is finalized","type":"object","properties":{"proof_tx_in_block":{"title":"proof_tx_in_block is the proof that tx that carries the header is included in a certain Babylon block","type":"object","properties":{"root_hash":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"},"proof":{"type":"object","properties":{"total":{"type":"string","format":"int64"},"index":{"type":"string","format":"int64"},"leaf_hash":{"type":"string","format":"byte"},"aunts":{"type":"array","items":{"type":"string","format":"byte"}}}}},"description":"TxProof represents a Merkle proof of the presence of a transaction in the Merkle tree."},"proof_header_in_epoch":{"type":"object","properties":{"total":{"type":"string","format":"int64"},"index":{"type":"string","format":"int64"},"leaf_hash":{"type":"string","format":"byte"},"aunts":{"type":"array","items":{"type":"string","format":"byte"}}},"title":"proof_header_in_epoch is the proof that the Babylon header is in a certain epoch"},"proof_epoch_sealed":{"title":"proof_epoch_sealed is the proof that the epoch is sealed","type":"object","properties":{"validator_set":{"type":"array","items":{"type":"object","properties":{"validator_address":{"type":"string"},"bls_pub_key":{"type":"string","format":"byte"},"voting_power":{"type":"string","format":"uint64"}},"title":"ValidatorWithBlsKey couples validator address, voting power, and its bls public key"},"title":"validator_set is the validator set of the sealed epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header"},"proof_epoch_info":{"title":"proof_epoch_info is the Merkle proof that the epoch\'s metadata is committed to `app_hash` of the sealer header","type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}}},"proof_epoch_val_set":{"title":"proof_epoch_info is the Merkle proof that the epoch\'s validator set is committed to `app_hash` of the sealer header","type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}}}}},"proof_epoch_submitted":{"type":"array","items":{"type":"object","properties":{"key":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block","description":"key is the position (txIdx, blockHash) of this tx on BTC blockchain\\nAlthough it is already a part of SubmissionKey, we store it here again\\nto make TransactionInfo self-contained.\\nFor example, storing the key allows TransactionInfo to not relay on \\nthe fact that TransactionInfo will be ordered in the same order as \\nTransactionKeys in SubmissionKey."},"transaction":{"type":"string","format":"byte","title":"transaction is the full transaction in bytes"},"proof":{"type":"string","format":"byte","title":"proof is the Merkle proof that this tx is included in the position in `key`\\nTODO: maybe it could use here better format as we already processed and \\nvalideated the proof?"}},"title":"TransactionInfo is the info of a tx that contains Babylon checkpoint, including\\n- the position of the tx on BTC blockchain\\n- the full tx content\\n- the Merkle proof that this tx is on the above position"},"title":"proof_epoch_submitted is the proof that the epoch\'s checkpoint is included in BTC ledger\\nIt is the two TransactionInfo in the best (i.e., earliest) checkpoint submission"}}}},"description":"QueryFinalizedChainInfoUntilHeightResponse is response type for the Query/FinalizedChainInfoUntilHeight RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"chain_id","description":"chain_id is the ID of the CZ","in":"path","required":true,"schema":{"type":"string"}},{"name":"height","description":"height is the height of the CZ chain\\nsuch that the returned finalised chain info will be no later than this height","in":"path","required":true,"schema":{"type":"string","format":"uint64"}},{"name":"prove","description":"prove indicates whether the querier wants to get proofs of this timestamp.","in":"query","required":false,"schema":{"type":"boolean"}}],"tags":["Query"]}},"/babylon/zoneconcierge/v1/headers/{chain_id}":{"get":{"summary":"ListHeaders queries the headers of a chain in Babylon\'s view, with pagination support","operationId":"ListHeaders","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"headers is the list of headers"},"pagination":{"title":"pagination defines the pagination in the response","type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}},"description":"QueryListHeadersResponse is response type for the Query/ListHeaders RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"chain_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"pagination.key","description":"key is a value returned in PageResponse.next_key to begin\\nquerying the next page most efficiently. Only one of offset or key\\nshould be set.","in":"query","required":false,"schema":{"type":"string","format":"byte"}},{"name":"pagination.offset","description":"offset is a numeric offset that can be used when key is unavailable.\\nIt is less efficient than using key. Only one of offset or key should\\nbe set.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.limit","description":"limit is the total number of results to be returned in the result page.\\nIf left empty it will default to a value to be set by each app.","in":"query","required":false,"schema":{"type":"string","format":"uint64"}},{"name":"pagination.count_total","description":"count_total is set to true  to indicate that the result set should include\\na count of the total number of items available for pagination in UIs.\\ncount_total is only respected when offset is used. It is ignored when key\\nis set.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"pagination.reverse","description":"reverse is set to true if results are to be returned in the descending order.\\n\\nSince: cosmos-sdk 0.43","in":"query","required":false,"schema":{"type":"boolean"}}],"tags":["Query"]}},"/babylon/zoneconcierge/v1/headers/{chain_id}/epochs/{epoch_num}":{"get":{"summary":"ListEpochHeaders queries the headers of a chain timestamped in a given epoch of Babylon, with pagination support","operationId":"ListEpochHeaders","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"headers is the list of headers"}},"description":"QueryListEpochHeadersResponse is response type for the Query/ListEpochHeaders RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"parameters":[{"name":"chain_id","in":"path","required":true,"schema":{"type":"string"}},{"name":"epoch_num","in":"path","required":true,"schema":{"type":"string","format":"uint64"}}],"tags":["Query"]}},"/babylon/zoneconcierge/v1/params":{"get":{"summary":"Parameters queries the parameters of the module.","operationId":"ZoneConciergeParams","responses":{"200":{"description":"A successful response.","content":{"*/*":{"schema":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object"}},"description":"QueryParamsResponse is response type for the Query/Params RPC method."}}}},"default":{"description":"An unexpected error response.","content":{"*/*":{"schema":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}}}}}},"tags":["Query"]}}},"components":{"schemas":{"babylon.btccheckpoint.v1.Params":{"type":"object","properties":{"btc_confirmation_depth":{"type":"string","format":"uint64","title":"btc_confirmation_depth is the confirmation depth in BTC.\\nA block is considered irreversible only when it is at least k-deep in BTC\\n(k in research paper)"},"checkpoint_finalization_timeout":{"type":"string","format":"uint64","title":"checkpoint_finalization_timeout is the maximum time window (measured in BTC blocks) between a checkpoint\\n- being submitted to BTC, and\\n- being reported back to BBN\\nIf a checkpoint has not been reported back within w BTC blocks, then BBN has dishonest majority and is stalling checkpoints\\n(w in research paper)"}},"description":"Params defines the parameters for the module."},"babylon.btccheckpoint.v1.QueryBtcCheckpointHeightResponse":{"type":"object","properties":{"earliest_btc_block_number":{"type":"string","format":"uint64","title":"Earliest btc block number containing given raw checkpoint"}},"title":"QueryCurrentEpochResponse is response type for the Query/CurrentEpoch RPC method"},"babylon.btccheckpoint.v1.QueryEpochSubmissionsResponse":{"type":"object","properties":{"keys":{"type":"array","items":{"type":"object","properties":{"key":{"type":"array","items":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block"}}},"title":"Checkpoint can be composed from multiple transactions, so to identify whole\\nsubmission we need list of transaction keys.\\nEach submission can generally be identified by this list of (txIdx, blockHash)\\ntuples.\\nNote: this could possibly be optimized as if transactions were in one block\\nthey would have the same block hash and different indexes, but each blockhash\\nis only 33 (1  byte for prefix encoding and 32 byte hash), so there should\\nbe other strong arguments for this optimization"},"description":"All submissions saved during an epoch."},"pagination":{"type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}}},"babylon.btccheckpoint.v1.QueryParamsResponse":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object","properties":{"btc_confirmation_depth":{"type":"string","format":"uint64","title":"btc_confirmation_depth is the confirmation depth in BTC.\\nA block is considered irreversible only when it is at least k-deep in BTC\\n(k in research paper)"},"checkpoint_finalization_timeout":{"type":"string","format":"uint64","title":"checkpoint_finalization_timeout is the maximum time window (measured in BTC blocks) between a checkpoint\\n- being submitted to BTC, and\\n- being reported back to BBN\\nIf a checkpoint has not been reported back within w BTC blocks, then BBN has dishonest majority and is stalling checkpoints\\n(w in research paper)"}}}},"description":"QueryParamsResponse is response type for the Query/Params RPC method."},"babylon.btccheckpoint.v1.SubmissionKey":{"type":"object","properties":{"key":{"type":"array","items":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block"}}},"title":"Checkpoint can be composed from multiple transactions, so to identify whole\\nsubmission we need list of transaction keys.\\nEach submission can generally be identified by this list of (txIdx, blockHash)\\ntuples.\\nNote: this could possibly be optimized as if transactions were in one block\\nthey would have the same block hash and different indexes, but each blockhash\\nis only 33 (1  byte for prefix encoding and 32 byte hash), so there should\\nbe other strong arguments for this optimization"},"babylon.btccheckpoint.v1.TransactionKey":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block"},"cosmos.base.query.v1beta1.PageRequest":{"type":"object","properties":{"key":{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\\nquerying the next page most efficiently. Only one of offset or key\\nshould be set."},"offset":{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\\nIt is less efficient than using key. Only one of offset or key should\\nbe set."},"limit":{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\\nIf left empty it will default to a value to be set by each app."},"count_total":{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\\na count of the total number of items available for pagination in UIs.\\ncount_total is only respected when offset is used. It is ignored when key\\nis set."},"reverse":{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\\n\\nSince: cosmos-sdk 0.43"}},"description":"message SomeRequest {\\n         Foo some_parameter = 1;\\n         PageRequest pagination = 2;\\n }","title":"PageRequest is to be embedded in gRPC request messages for efficient\\npagination. Ex:"},"cosmos.base.query.v1beta1.PageResponse":{"type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"},"google.protobuf.Any":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"grpc.gateway.runtime.Error":{"type":"object","properties":{"error":{"type":"string"},"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"}}}},"babylon.btclightclient.v1.BTCHeaderInfo":{"type":"object","properties":{"header":{"type":"string","format":"byte"},"hash":{"type":"string","format":"byte"},"height":{"type":"string","format":"uint64"},"work":{"type":"string","format":"byte"}}},"babylon.btclightclient.v1.Params":{"type":"object","description":"Params defines the parameters for the module."},"babylon.btclightclient.v1.QueryBaseHeaderResponse":{"type":"object","properties":{"header":{"type":"object","properties":{"header":{"type":"string","format":"byte"},"hash":{"type":"string","format":"byte"},"height":{"type":"string","format":"uint64"},"work":{"type":"string","format":"byte"}}}}},"babylon.btclightclient.v1.QueryContainsBytesResponse":{"type":"object","properties":{"contains":{"type":"boolean"}},"description":"QueryContainsResponse is response type for the temporary Query/ContainsBytes RPC method."},"babylon.btclightclient.v1.QueryContainsResponse":{"type":"object","properties":{"contains":{"type":"boolean"}},"description":"QueryContainsResponse is response type for the Query/Contains RPC method."},"babylon.btclightclient.v1.QueryHashesResponse":{"type":"object","properties":{"hashes":{"type":"array","items":{"type":"string","format":"byte"}},"pagination":{"type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}},"description":"QueryHashesResponse is response type for the Query/Hashes RPC method."},"babylon.btclightclient.v1.QueryMainChainResponse":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"header":{"type":"string","format":"byte"},"hash":{"type":"string","format":"byte"},"height":{"type":"string","format":"uint64"},"work":{"type":"string","format":"byte"}}}},"pagination":{"type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}},"description":"QueryMainChainResponse is response type for the Query/MainChain RPC method."},"babylon.btclightclient.v1.QueryParamsResponse":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object"}},"description":"QueryParamsResponse is response type for the Query/Params RPC method."},"babylon.btclightclient.v1.QueryTipResponse":{"type":"object","properties":{"header":{"type":"object","properties":{"header":{"type":"string","format":"byte"},"hash":{"type":"string","format":"byte"},"height":{"type":"string","format":"uint64"},"work":{"type":"string","format":"byte"}}}}},"babylon.epoching.v1.BondState":{"type":"string","enum":["CREATED","BONDED","UNBONDING","UNBONDED","REMOVED"],"default":"CREATED"},"babylon.epoching.v1.DelegationLifecycle":{"type":"object","properties":{"del_addr":{"type":"string"},"del_life":{"type":"array","items":{"type":"object","properties":{"state":{"type":"string","enum":["CREATED","BONDED","UNBONDING","UNBONDED","REMOVED"],"default":"CREATED"},"val_addr":{"type":"string"},"block_height":{"type":"string","format":"uint64"},"block_time":{"type":"string","format":"date-time"}}}}}},"babylon.epoching.v1.DelegationStateUpdate":{"type":"object","properties":{"state":{"type":"string","enum":["CREATED","BONDED","UNBONDING","UNBONDED","REMOVED"],"default":"CREATED"},"val_addr":{"type":"string"},"block_height":{"type":"string","format":"uint64"},"block_time":{"type":"string","format":"date-time"}}},"babylon.epoching.v1.Epoch":{"type":"object","properties":{"epoch_number":{"type":"string","format":"uint64"},"current_epoch_interval":{"type":"string","format":"uint64"},"first_block_height":{"type":"string","format":"uint64"},"last_block_header":{"description":"last_block_header is the header of the last block in this epoch.\\nBabylon needs to remember the last header of each epoch to complete unbonding validators/delegations when a previous epoch\'s checkpoint is finalised.\\nThe last_block_header field is nil in the epoch\'s beginning, and is set upon the end of this epoch.","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}}},"app_hash_root":{"type":"string","format":"byte","title":"app_hash_root is the Merkle root of all AppHashs in this epoch\\nIt will be used for proving a block is in an epoch"},"sealer_header":{"title":"sealer_header is the 2nd header of the next epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."}}},"babylon.epoching.v1.Params":{"type":"object","properties":{"epoch_interval":{"type":"string","format":"uint64","title":"epoch_interval is the number of consecutive blocks to form an epoch"}},"description":"Params defines the parameters for the module."},"babylon.epoching.v1.QueryCurrentEpochResponse":{"type":"object","properties":{"current_epoch":{"type":"string","format":"uint64","title":"current_epoch is the current epoch number"},"epoch_boundary":{"type":"string","format":"uint64","title":"epoch_boundary is the height of this epoch\'s last block"}},"title":"QueryCurrentEpochResponse is the response type for the Query/CurrentEpoch RPC method"},"babylon.epoching.v1.QueryDelegationLifecycleResponse":{"type":"object","properties":{"del_life":{"type":"object","properties":{"del_addr":{"type":"string"},"del_life":{"type":"array","items":{"type":"object","properties":{"state":{"type":"string","enum":["CREATED","BONDED","UNBONDING","UNBONDED","REMOVED"],"default":"CREATED"},"val_addr":{"type":"string"},"block_height":{"type":"string","format":"uint64"},"block_time":{"type":"string","format":"date-time"}}}}}}}},"babylon.epoching.v1.QueryEpochInfoResponse":{"type":"object","properties":{"epoch":{"type":"object","properties":{"epoch_number":{"type":"string","format":"uint64"},"current_epoch_interval":{"type":"string","format":"uint64"},"first_block_height":{"type":"string","format":"uint64"},"last_block_header":{"description":"last_block_header is the header of the last block in this epoch.\\nBabylon needs to remember the last header of each epoch to complete unbonding validators/delegations when a previous epoch\'s checkpoint is finalised.\\nThe last_block_header field is nil in the epoch\'s beginning, and is set upon the end of this epoch.","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}}},"app_hash_root":{"type":"string","format":"byte","title":"app_hash_root is the Merkle root of all AppHashs in this epoch\\nIt will be used for proving a block is in an epoch"},"sealer_header":{"title":"sealer_header is the 2nd header of the next epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."}}}}},"babylon.epoching.v1.QueryEpochMsgsResponse":{"type":"object","properties":{"msgs":{"type":"array","items":{"type":"object","properties":{"tx_id":{"type":"string","format":"byte","title":"tx_id is the ID of the tx that contains the message"},"msg_id":{"type":"string","format":"byte","title":"msg_id is the original message ID, i.e., hash of the marshaled message"},"block_height":{"type":"string","format":"uint64","title":"block_height is the height when this msg is submitted to Babylon"},"block_time":{"type":"string","format":"date-time","title":"block_time is the timestamp when this msg is submitted to Babylon"},"msg_create_validator":{"type":"object","properties":{"description":{"type":"object","properties":{"moniker":{"type":"string","description":"moniker defines a human-readable name for the validator."},"identity":{"type":"string","description":"identity defines an optional identity signature (ex. UPort or Keybase)."},"website":{"type":"string","description":"website defines an optional website link."},"security_contact":{"type":"string","description":"security_contact defines an optional email for security contact."},"details":{"type":"string","description":"details define other optional details."}},"description":"Description defines a validator description."},"commission":{"type":"object","properties":{"rate":{"type":"string","description":"rate is the commission rate charged to delegators, as a fraction."},"max_rate":{"type":"string","description":"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},"max_change_rate":{"type":"string","description":"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},"description":"CommissionRates defines the initial commission rates to be used for creating\\na validator."},"min_self_delegation":{"type":"string"},"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"pubkey":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"value":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgCreateValidator defines a SDK message for creating a new validator."},"msg_delegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgDelegate defines a SDK message for performing a delegation of coins\\nfrom a delegator to a validator."},"msg_undelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgUndelegate defines a SDK message for performing an undelegation from a\\ndelegate and a validator."},"msg_begin_redelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_src_address":{"type":"string"},"validator_dst_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgBeginRedelegate defines a SDK message for performing a redelegation\\nof coins from a delegator and source validator to a destination validator."}},"title":"QueuedMessage is a message that can change the validator set and is delayed to the epoch boundary"},"title":"msgs is the list of messages queued in the current epoch"},"pagination":{"title":"pagination defines the pagination in the response","type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}},"title":"QueryEpochMsgsResponse is the response type for the Query/EpochMsgs RPC method"},"babylon.epoching.v1.QueryEpochValSetResponse":{"type":"object","properties":{"validators":{"type":"array","items":{"type":"object","properties":{"addr":{"type":"string","format":"byte","title":"addr is the validator\'s address (in sdk.ValAddress)"},"power":{"type":"string","format":"int64","title":"power is the validator\'s voting power"}}}},"total_voting_power":{"type":"string","format":"int64"},"pagination":{"type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}}},"babylon.epoching.v1.QueryLatestEpochMsgsResponse":{"type":"object","properties":{"latest_epoch_msgs":{"type":"array","items":{"type":"object","properties":{"epoch_number":{"type":"string","format":"uint64"},"msgs":{"type":"array","items":{"type":"object","properties":{"tx_id":{"type":"string","format":"byte","title":"tx_id is the ID of the tx that contains the message"},"msg_id":{"type":"string","format":"byte","title":"msg_id is the original message ID, i.e., hash of the marshaled message"},"block_height":{"type":"string","format":"uint64","title":"block_height is the height when this msg is submitted to Babylon"},"block_time":{"type":"string","format":"date-time","title":"block_time is the timestamp when this msg is submitted to Babylon"},"msg_create_validator":{"type":"object","properties":{"description":{"type":"object","properties":{"moniker":{"type":"string","description":"moniker defines a human-readable name for the validator."},"identity":{"type":"string","description":"identity defines an optional identity signature (ex. UPort or Keybase)."},"website":{"type":"string","description":"website defines an optional website link."},"security_contact":{"type":"string","description":"security_contact defines an optional email for security contact."},"details":{"type":"string","description":"details define other optional details."}},"description":"Description defines a validator description."},"commission":{"type":"object","properties":{"rate":{"type":"string","description":"rate is the commission rate charged to delegators, as a fraction."},"max_rate":{"type":"string","description":"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},"max_change_rate":{"type":"string","description":"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},"description":"CommissionRates defines the initial commission rates to be used for creating\\na validator."},"min_self_delegation":{"type":"string"},"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"pubkey":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"value":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgCreateValidator defines a SDK message for creating a new validator."},"msg_delegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgDelegate defines a SDK message for performing a delegation of coins\\nfrom a delegator to a validator."},"msg_undelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgUndelegate defines a SDK message for performing an undelegation from a\\ndelegate and a validator."},"msg_begin_redelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_src_address":{"type":"string"},"validator_dst_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgBeginRedelegate defines a SDK message for performing a redelegation\\nof coins from a delegator and source validator to a destination validator."}},"title":"QueuedMessage is a message that can change the validator set and is delayed to the epoch boundary"}}}},"title":"epoch_msg_map is a list of QueuedMessageList\\neach QueuedMessageList has a field identifying the epoch number"},"pagination":{"type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}},"title":"QueryLatestEpochMsgsResponse is the response type for the Query/LatestEpochMsgs RPC method"},"babylon.epoching.v1.QueryParamsResponse":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object","properties":{"epoch_interval":{"type":"string","format":"uint64","title":"epoch_interval is the number of consecutive blocks to form an epoch"}}}},"description":"QueryParamsResponse is the response type for the Query/Params RPC method."},"babylon.epoching.v1.QueryValidatorLifecycleResponse":{"type":"object","properties":{"val_life":{"type":"object","properties":{"val_addr":{"type":"string"},"val_life":{"type":"array","items":{"type":"object","properties":{"state":{"type":"string","enum":["CREATED","BONDED","UNBONDING","UNBONDED","REMOVED"],"default":"CREATED"},"block_height":{"type":"string","format":"uint64"},"block_time":{"type":"string","format":"date-time"}}}}}}}},"babylon.epoching.v1.QueuedMessage":{"type":"object","properties":{"tx_id":{"type":"string","format":"byte","title":"tx_id is the ID of the tx that contains the message"},"msg_id":{"type":"string","format":"byte","title":"msg_id is the original message ID, i.e., hash of the marshaled message"},"block_height":{"type":"string","format":"uint64","title":"block_height is the height when this msg is submitted to Babylon"},"block_time":{"type":"string","format":"date-time","title":"block_time is the timestamp when this msg is submitted to Babylon"},"msg_create_validator":{"type":"object","properties":{"description":{"type":"object","properties":{"moniker":{"type":"string","description":"moniker defines a human-readable name for the validator."},"identity":{"type":"string","description":"identity defines an optional identity signature (ex. UPort or Keybase)."},"website":{"type":"string","description":"website defines an optional website link."},"security_contact":{"type":"string","description":"security_contact defines an optional email for security contact."},"details":{"type":"string","description":"details define other optional details."}},"description":"Description defines a validator description."},"commission":{"type":"object","properties":{"rate":{"type":"string","description":"rate is the commission rate charged to delegators, as a fraction."},"max_rate":{"type":"string","description":"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},"max_change_rate":{"type":"string","description":"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},"description":"CommissionRates defines the initial commission rates to be used for creating\\na validator."},"min_self_delegation":{"type":"string"},"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"pubkey":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"value":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgCreateValidator defines a SDK message for creating a new validator."},"msg_delegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgDelegate defines a SDK message for performing a delegation of coins\\nfrom a delegator to a validator."},"msg_undelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgUndelegate defines a SDK message for performing an undelegation from a\\ndelegate and a validator."},"msg_begin_redelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_src_address":{"type":"string"},"validator_dst_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgBeginRedelegate defines a SDK message for performing a redelegation\\nof coins from a delegator and source validator to a destination validator."}},"title":"QueuedMessage is a message that can change the validator set and is delayed to the epoch boundary"},"babylon.epoching.v1.QueuedMessageList":{"type":"object","properties":{"epoch_number":{"type":"string","format":"uint64"},"msgs":{"type":"array","items":{"type":"object","properties":{"tx_id":{"type":"string","format":"byte","title":"tx_id is the ID of the tx that contains the message"},"msg_id":{"type":"string","format":"byte","title":"msg_id is the original message ID, i.e., hash of the marshaled message"},"block_height":{"type":"string","format":"uint64","title":"block_height is the height when this msg is submitted to Babylon"},"block_time":{"type":"string","format":"date-time","title":"block_time is the timestamp when this msg is submitted to Babylon"},"msg_create_validator":{"type":"object","properties":{"description":{"type":"object","properties":{"moniker":{"type":"string","description":"moniker defines a human-readable name for the validator."},"identity":{"type":"string","description":"identity defines an optional identity signature (ex. UPort or Keybase)."},"website":{"type":"string","description":"website defines an optional website link."},"security_contact":{"type":"string","description":"security_contact defines an optional email for security contact."},"details":{"type":"string","description":"details define other optional details."}},"description":"Description defines a validator description."},"commission":{"type":"object","properties":{"rate":{"type":"string","description":"rate is the commission rate charged to delegators, as a fraction."},"max_rate":{"type":"string","description":"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},"max_change_rate":{"type":"string","description":"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},"description":"CommissionRates defines the initial commission rates to be used for creating\\na validator."},"min_self_delegation":{"type":"string"},"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"pubkey":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"value":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgCreateValidator defines a SDK message for creating a new validator."},"msg_delegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgDelegate defines a SDK message for performing a delegation of coins\\nfrom a delegator to a validator."},"msg_undelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgUndelegate defines a SDK message for performing an undelegation from a\\ndelegate and a validator."},"msg_begin_redelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_src_address":{"type":"string"},"validator_dst_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgBeginRedelegate defines a SDK message for performing a redelegation\\nof coins from a delegator and source validator to a destination validator."}},"title":"QueuedMessage is a message that can change the validator set and is delayed to the epoch boundary"}}}},"babylon.epoching.v1.ValStateUpdate":{"type":"object","properties":{"state":{"type":"string","enum":["CREATED","BONDED","UNBONDING","UNBONDED","REMOVED"],"default":"CREATED"},"block_height":{"type":"string","format":"uint64"},"block_time":{"type":"string","format":"date-time"}}},"babylon.epoching.v1.Validator":{"type":"object","properties":{"addr":{"type":"string","format":"byte","title":"addr is the validator\'s address (in sdk.ValAddress)"},"power":{"type":"string","format":"int64","title":"power is the validator\'s voting power"}}},"babylon.epoching.v1.ValidatorLifecycle":{"type":"object","properties":{"val_addr":{"type":"string"},"val_life":{"type":"array","items":{"type":"object","properties":{"state":{"type":"string","enum":["CREATED","BONDED","UNBONDING","UNBONDED","REMOVED"],"default":"CREATED"},"block_height":{"type":"string","format":"uint64"},"block_time":{"type":"string","format":"date-time"}}}}}},"cosmos.base.v1beta1.Coin":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."},"cosmos.staking.v1beta1.CommissionRates":{"type":"object","properties":{"rate":{"type":"string","description":"rate is the commission rate charged to delegators, as a fraction."},"max_rate":{"type":"string","description":"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},"max_change_rate":{"type":"string","description":"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},"description":"CommissionRates defines the initial commission rates to be used for creating\\na validator."},"cosmos.staking.v1beta1.Description":{"type":"object","properties":{"moniker":{"type":"string","description":"moniker defines a human-readable name for the validator."},"identity":{"type":"string","description":"identity defines an optional identity signature (ex. UPort or Keybase)."},"website":{"type":"string","description":"website defines an optional website link."},"security_contact":{"type":"string","description":"security_contact defines an optional email for security contact."},"details":{"type":"string","description":"details define other optional details."}},"description":"Description defines a validator description."},"cosmos.staking.v1beta1.MsgBeginRedelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_src_address":{"type":"string"},"validator_dst_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgBeginRedelegate defines a SDK message for performing a redelegation\\nof coins from a delegator and source validator to a destination validator."},"cosmos.staking.v1beta1.MsgCreateValidator":{"type":"object","properties":{"description":{"type":"object","properties":{"moniker":{"type":"string","description":"moniker defines a human-readable name for the validator."},"identity":{"type":"string","description":"identity defines an optional identity signature (ex. UPort or Keybase)."},"website":{"type":"string","description":"website defines an optional website link."},"security_contact":{"type":"string","description":"security_contact defines an optional email for security contact."},"details":{"type":"string","description":"details define other optional details."}},"description":"Description defines a validator description."},"commission":{"type":"object","properties":{"rate":{"type":"string","description":"rate is the commission rate charged to delegators, as a fraction."},"max_rate":{"type":"string","description":"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},"max_change_rate":{"type":"string","description":"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},"description":"CommissionRates defines the initial commission rates to be used for creating\\na validator."},"min_self_delegation":{"type":"string"},"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"pubkey":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"value":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgCreateValidator defines a SDK message for creating a new validator."},"cosmos.staking.v1beta1.MsgDelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgDelegate defines a SDK message for performing a delegation of coins\\nfrom a delegator to a validator."},"cosmos.staking.v1beta1.MsgUndelegate":{"type":"object","properties":{"delegator_address":{"type":"string"},"validator_address":{"type":"string"},"amount":{"type":"object","properties":{"denom":{"type":"string"},"amount":{"type":"string"}},"description":"Coin defines a token with a denomination and an amount.\\n\\nNOTE: The amount field is an Int which implements the custom method\\nsignatures required by gogoproto."}},"description":"MsgUndelegate defines a SDK message for performing an undelegation from a\\ndelegate and a validator."},"tendermint.types.BlockID":{"type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}},"title":"BlockID"},"tendermint.types.Header":{"type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"tendermint.types.PartSetHeader":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"},"tendermint.version.Consensus":{"type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"babylon.checkpointing.v1.CheckpointStateUpdate":{"type":"object","properties":{"state":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.","title":"state defines the event of a state transition towards this state"},"block_height":{"type":"string","format":"uint64","title":"block_height is the height of the Babylon block that triggers the state update"},"block_time":{"type":"string","format":"date-time","title":"block_time is the timestamp in the Babylon block that triggers the state update"}}},"babylon.checkpointing.v1.CheckpointStatus":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC."},"babylon.checkpointing.v1.Params":{"type":"object","description":"Params defines the parameters for the module."},"babylon.checkpointing.v1.QueryBlsPublicKeyListResponse":{"type":"object","properties":{"validator_with_bls_keys":{"type":"array","items":{"type":"object","properties":{"validator_address":{"type":"string"},"bls_pub_key":{"type":"string","format":"byte"},"voting_power":{"type":"string","format":"uint64"}},"title":"ValidatorWithBlsKey couples validator address, voting power, and its bls public key"}},"pagination":{"description":"pagination defines the pagination in the response.","type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}}}},"description":"QueryBlsPublicKeyListResponse is the response type for the Query/BlsPublicKeys\\nRPC method."},"babylon.checkpointing.v1.QueryEpochStatusResponse":{"type":"object","properties":{"status":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC."}},"description":"QueryEpochStatusResponse is the response type for the Query/EpochStatus\\nRPC method."},"babylon.checkpointing.v1.QueryLastCheckpointWithStatusResponse":{"type":"object","properties":{"raw_checkpoint":{"type":"object","properties":{"epoch_num":{"type":"string","format":"uint64","title":"epoch_num defines the epoch number the raw checkpoint is for"},"last_commit_hash":{"type":"string","format":"byte","title":"last_commit_hash defines the \'LastCommitHash\' that individual BLS sigs are signed on"},"bitmap":{"type":"string","format":"byte","title":"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},"bls_multi_sig":{"type":"string","format":"byte","title":"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}},"title":"RawCheckpoint wraps the BLS multi sig with meta data"}}},"babylon.checkpointing.v1.QueryParamsResponse":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object"}},"description":"QueryParamsResponse is response type for the Query/Params RPC method."},"babylon.checkpointing.v1.QueryRawCheckpointListResponse":{"type":"object","properties":{"raw_checkpoints":{"type":"array","items":{"type":"object","properties":{"ckpt":{"type":"object","properties":{"epoch_num":{"type":"string","format":"uint64","title":"epoch_num defines the epoch number the raw checkpoint is for"},"last_commit_hash":{"type":"string","format":"byte","title":"last_commit_hash defines the \'LastCommitHash\' that individual BLS sigs are signed on"},"bitmap":{"type":"string","format":"byte","title":"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},"bls_multi_sig":{"type":"string","format":"byte","title":"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}},"title":"RawCheckpoint wraps the BLS multi sig with meta data"},"status":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.","title":"status defines the status of the checkpoint"},"bls_aggr_pk":{"type":"string","format":"byte","title":"bls_aggr_pk defines the aggregated BLS public key"},"power_sum":{"type":"string","format":"uint64","title":"power_sum defines the accumulated voting power for the checkpoint"},"lifecycle":{"type":"array","items":{"type":"object","properties":{"state":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.","title":"state defines the event of a state transition towards this state"},"block_height":{"type":"string","format":"uint64","title":"block_height is the height of the Babylon block that triggers the state update"},"block_time":{"type":"string","format":"date-time","title":"block_time is the timestamp in the Babylon block that triggers the state update"}}},"description":"lifecycle defines the lifecycle of this checkpoint, i.e., each state transition and\\nthe time (in both timestamp and block height) of this transition."}},"description":"RawCheckpointWithMeta wraps the raw checkpoint with meta data."},"title":"the order is going from the newest to oldest based on the epoch number"},"pagination":{"description":"pagination defines the pagination in the response.","type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}}}},"description":"QueryRawCheckpointListResponse is the response type for the Query/RawCheckpoints\\nRPC method."},"babylon.checkpointing.v1.QueryRawCheckpointResponse":{"type":"object","properties":{"raw_checkpoint":{"type":"object","properties":{"ckpt":{"type":"object","properties":{"epoch_num":{"type":"string","format":"uint64","title":"epoch_num defines the epoch number the raw checkpoint is for"},"last_commit_hash":{"type":"string","format":"byte","title":"last_commit_hash defines the \'LastCommitHash\' that individual BLS sigs are signed on"},"bitmap":{"type":"string","format":"byte","title":"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},"bls_multi_sig":{"type":"string","format":"byte","title":"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}},"title":"RawCheckpoint wraps the BLS multi sig with meta data"},"status":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.","title":"status defines the status of the checkpoint"},"bls_aggr_pk":{"type":"string","format":"byte","title":"bls_aggr_pk defines the aggregated BLS public key"},"power_sum":{"type":"string","format":"uint64","title":"power_sum defines the accumulated voting power for the checkpoint"},"lifecycle":{"type":"array","items":{"type":"object","properties":{"state":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.","title":"state defines the event of a state transition towards this state"},"block_height":{"type":"string","format":"uint64","title":"block_height is the height of the Babylon block that triggers the state update"},"block_time":{"type":"string","format":"date-time","title":"block_time is the timestamp in the Babylon block that triggers the state update"}}},"description":"lifecycle defines the lifecycle of this checkpoint, i.e., each state transition and\\nthe time (in both timestamp and block height) of this transition."}},"description":"RawCheckpointWithMeta wraps the raw checkpoint with meta data."}},"description":"QueryRawCheckpointResponse is the response type for the Query/RawCheckpoint\\nRPC method."},"babylon.checkpointing.v1.QueryRecentEpochStatusCountResponse":{"type":"object","properties":{"tip_epoch":{"type":"string","format":"uint64"},"epoch_count":{"type":"string","format":"uint64"},"status_count":{"type":"object","additionalProperties":{"type":"string","format":"uint64"}}},"description":"QueryRecentEpochStatusCountResponse is the response type for the Query/EpochStatusCount\\nRPC method."},"babylon.checkpointing.v1.RawCheckpoint":{"type":"object","properties":{"epoch_num":{"type":"string","format":"uint64","title":"epoch_num defines the epoch number the raw checkpoint is for"},"last_commit_hash":{"type":"string","format":"byte","title":"last_commit_hash defines the \'LastCommitHash\' that individual BLS sigs are signed on"},"bitmap":{"type":"string","format":"byte","title":"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},"bls_multi_sig":{"type":"string","format":"byte","title":"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}},"title":"RawCheckpoint wraps the BLS multi sig with meta data"},"babylon.checkpointing.v1.RawCheckpointWithMeta":{"type":"object","properties":{"ckpt":{"type":"object","properties":{"epoch_num":{"type":"string","format":"uint64","title":"epoch_num defines the epoch number the raw checkpoint is for"},"last_commit_hash":{"type":"string","format":"byte","title":"last_commit_hash defines the \'LastCommitHash\' that individual BLS sigs are signed on"},"bitmap":{"type":"string","format":"byte","title":"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},"bls_multi_sig":{"type":"string","format":"byte","title":"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}},"title":"RawCheckpoint wraps the BLS multi sig with meta data"},"status":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.","title":"status defines the status of the checkpoint"},"bls_aggr_pk":{"type":"string","format":"byte","title":"bls_aggr_pk defines the aggregated BLS public key"},"power_sum":{"type":"string","format":"uint64","title":"power_sum defines the accumulated voting power for the checkpoint"},"lifecycle":{"type":"array","items":{"type":"object","properties":{"state":{"type":"string","enum":["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],"default":"CKPT_STATUS_ACCUMULATING","description":"CkptStatus is the status of a checkpoint.\\n\\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.","title":"state defines the event of a state transition towards this state"},"block_height":{"type":"string","format":"uint64","title":"block_height is the height of the Babylon block that triggers the state update"},"block_time":{"type":"string","format":"date-time","title":"block_time is the timestamp in the Babylon block that triggers the state update"}}},"description":"lifecycle defines the lifecycle of this checkpoint, i.e., each state transition and\\nthe time (in both timestamp and block height) of this transition."}},"description":"RawCheckpointWithMeta wraps the raw checkpoint with meta data."},"babylon.checkpointing.v1.ValidatorWithBlsKey":{"type":"object","properties":{"validator_address":{"type":"string"},"bls_pub_key":{"type":"string","format":"byte"},"voting_power":{"type":"string","format":"uint64"}},"title":"ValidatorWithBlsKey couples validator address, voting power, and its bls public key"},"babylon.btccheckpoint.v1.TransactionInfo":{"type":"object","properties":{"key":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block","description":"key is the position (txIdx, blockHash) of this tx on BTC blockchain\\nAlthough it is already a part of SubmissionKey, we store it here again\\nto make TransactionInfo self-contained.\\nFor example, storing the key allows TransactionInfo to not relay on \\nthe fact that TransactionInfo will be ordered in the same order as \\nTransactionKeys in SubmissionKey."},"transaction":{"type":"string","format":"byte","title":"transaction is the full transaction in bytes"},"proof":{"type":"string","format":"byte","title":"proof is the Merkle proof that this tx is included in the position in `key`\\nTODO: maybe it could use here better format as we already processed and \\nvalideated the proof?"}},"title":"TransactionInfo is the info of a tx that contains Babylon checkpoint, including\\n- the position of the tx on BTC blockchain\\n- the full tx content\\n- the Merkle proof that this tx is on the above position"},"babylon.zoneconcierge.v1.ChainInfo":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the ID of the chain"},"latest_header":{"title":"latest_header is the latest header in CZ\'s canonical chain","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}}},"latest_forks":{"title":"latest_forks is the latest forks, formed as a series of IndexedHeader (from low to high)","type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"blocks is the list of non-canonical indexed headers at the same height"}},"description":"Forks is a list of non-canonical `IndexedHeader`s at the same height.\\nFor example, assuming the following blockchain\\n```\\nA <- B <- C <- D <- E\\n           \\\\ -- D1\\n           \\\\ -- D2\\n```\\nThen the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.\\n\\nNote that each `IndexedHeader` in the fork should have a valid quorum certificate. \\nSuch forks exist since Babylon considers CZs might have dishonest majority.\\nAlso note that the IBC-Go implementation will only consider the first header in a fork valid, since\\nthe subsequent headers cannot be verified without knowing the validator set in the previous header."},"timestamped_headers_count":{"type":"string","format":"uint64","title":"timestamped_headers_count is the number of timestamped headers in CZ\'s canonical chain"}},"title":"ChainInfo is the information of a CZ"},"babylon.zoneconcierge.v1.Forks":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"blocks is the list of non-canonical indexed headers at the same height"}},"description":"Forks is a list of non-canonical `IndexedHeader`s at the same height.\\nFor example, assuming the following blockchain\\n```\\nA <- B <- C <- D <- E\\n           \\\\ -- D1\\n           \\\\ -- D2\\n```\\nThen the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.\\n\\nNote that each `IndexedHeader` in the fork should have a valid quorum certificate. \\nSuch forks exist since Babylon considers CZs might have dishonest majority.\\nAlso note that the IBC-Go implementation will only consider the first header in a fork valid, since\\nthe subsequent headers cannot be verified without knowing the validator set in the previous header."},"babylon.zoneconcierge.v1.IndexedHeader":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"babylon.zoneconcierge.v1.Params":{"type":"object","description":"Params defines the parameters for the module."},"babylon.zoneconcierge.v1.ProofEpochSealed":{"type":"object","properties":{"validator_set":{"type":"array","items":{"type":"object","properties":{"validator_address":{"type":"string"},"bls_pub_key":{"type":"string","format":"byte"},"voting_power":{"type":"string","format":"uint64"}},"title":"ValidatorWithBlsKey couples validator address, voting power, and its bls public key"},"title":"validator_set is the validator set of the sealed epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header"},"proof_epoch_info":{"title":"proof_epoch_info is the Merkle proof that the epoch\'s metadata is committed to `app_hash` of the sealer header","type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}}},"proof_epoch_val_set":{"title":"proof_epoch_info is the Merkle proof that the epoch\'s validator set is committed to `app_hash` of the sealer header","type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}}}},"title":"ProofEpochSealed is the proof that an epoch is sealed by the sealer header, i.e., the 2nd header of the next epoch\\nWith the access of metadata\\n- Metadata of this epoch, which includes the sealer header\\n- Raw checkpoint of this epoch\\nThe verifier can perform the following verification rules:\\n- The raw checkpoint\'s `last_commit_hash` is same as in the sealer header\\n- More than 1/3 (in voting power) validators in the validator set of this epoch have signed `last_commit_hash` of the sealer header\\n- The epoch medatata is committed to the `app_hash` of the sealer header\\n- The validator set is committed to the `app_hash` of the sealer header"},"babylon.zoneconcierge.v1.ProofFinalizedChainInfo":{"type":"object","properties":{"proof_tx_in_block":{"title":"proof_tx_in_block is the proof that tx that carries the header is included in a certain Babylon block","type":"object","properties":{"root_hash":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"},"proof":{"type":"object","properties":{"total":{"type":"string","format":"int64"},"index":{"type":"string","format":"int64"},"leaf_hash":{"type":"string","format":"byte"},"aunts":{"type":"array","items":{"type":"string","format":"byte"}}}}},"description":"TxProof represents a Merkle proof of the presence of a transaction in the Merkle tree."},"proof_header_in_epoch":{"type":"object","properties":{"total":{"type":"string","format":"int64"},"index":{"type":"string","format":"int64"},"leaf_hash":{"type":"string","format":"byte"},"aunts":{"type":"array","items":{"type":"string","format":"byte"}}},"title":"proof_header_in_epoch is the proof that the Babylon header is in a certain epoch"},"proof_epoch_sealed":{"title":"proof_epoch_sealed is the proof that the epoch is sealed","type":"object","properties":{"validator_set":{"type":"array","items":{"type":"object","properties":{"validator_address":{"type":"string"},"bls_pub_key":{"type":"string","format":"byte"},"voting_power":{"type":"string","format":"uint64"}},"title":"ValidatorWithBlsKey couples validator address, voting power, and its bls public key"},"title":"validator_set is the validator set of the sealed epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header"},"proof_epoch_info":{"title":"proof_epoch_info is the Merkle proof that the epoch\'s metadata is committed to `app_hash` of the sealer header","type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}}},"proof_epoch_val_set":{"title":"proof_epoch_info is the Merkle proof that the epoch\'s validator set is committed to `app_hash` of the sealer header","type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}}}}},"proof_epoch_submitted":{"type":"array","items":{"type":"object","properties":{"key":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block","description":"key is the position (txIdx, blockHash) of this tx on BTC blockchain\\nAlthough it is already a part of SubmissionKey, we store it here again\\nto make TransactionInfo self-contained.\\nFor example, storing the key allows TransactionInfo to not relay on \\nthe fact that TransactionInfo will be ordered in the same order as \\nTransactionKeys in SubmissionKey."},"transaction":{"type":"string","format":"byte","title":"transaction is the full transaction in bytes"},"proof":{"type":"string","format":"byte","title":"proof is the Merkle proof that this tx is included in the position in `key`\\nTODO: maybe it could use here better format as we already processed and \\nvalideated the proof?"}},"title":"TransactionInfo is the info of a tx that contains Babylon checkpoint, including\\n- the position of the tx on BTC blockchain\\n- the full tx content\\n- the Merkle proof that this tx is on the above position"},"title":"proof_epoch_submitted is the proof that the epoch\'s checkpoint is included in BTC ledger\\nIt is the two TransactionInfo in the best (i.e., earliest) checkpoint submission"}},"title":"ProofFinalizedChainInfo is a set of proofs that attest a chain info is BTC-finalised"},"babylon.zoneconcierge.v1.QueryChainInfoResponse":{"type":"object","properties":{"chain_info":{"title":"chain_info is the info of the CZ","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the ID of the chain"},"latest_header":{"title":"latest_header is the latest header in CZ\'s canonical chain","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}}},"latest_forks":{"title":"latest_forks is the latest forks, formed as a series of IndexedHeader (from low to high)","type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"blocks is the list of non-canonical indexed headers at the same height"}},"description":"Forks is a list of non-canonical `IndexedHeader`s at the same height.\\nFor example, assuming the following blockchain\\n```\\nA <- B <- C <- D <- E\\n           \\\\ -- D1\\n           \\\\ -- D2\\n```\\nThen the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.\\n\\nNote that each `IndexedHeader` in the fork should have a valid quorum certificate. \\nSuch forks exist since Babylon considers CZs might have dishonest majority.\\nAlso note that the IBC-Go implementation will only consider the first header in a fork valid, since\\nthe subsequent headers cannot be verified without knowing the validator set in the previous header."},"timestamped_headers_count":{"type":"string","format":"uint64","title":"timestamped_headers_count is the number of timestamped headers in CZ\'s canonical chain"}}}},"description":"QueryChainInfoResponse is response type for the Query/ChainInfo RPC method."},"babylon.zoneconcierge.v1.QueryChainListResponse":{"type":"object","properties":{"chain_ids":{"type":"array","items":{"type":"string"}}},"title":"QueryChainListResponse is response type for the Query/ChainList RPC method"},"babylon.zoneconcierge.v1.QueryEpochChainInfoResponse":{"type":"object","properties":{"chain_info":{"title":"chain_info is the info of the CZ","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the ID of the chain"},"latest_header":{"title":"latest_header is the latest header in CZ\'s canonical chain","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}}},"latest_forks":{"title":"latest_forks is the latest forks, formed as a series of IndexedHeader (from low to high)","type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"blocks is the list of non-canonical indexed headers at the same height"}},"description":"Forks is a list of non-canonical `IndexedHeader`s at the same height.\\nFor example, assuming the following blockchain\\n```\\nA <- B <- C <- D <- E\\n           \\\\ -- D1\\n           \\\\ -- D2\\n```\\nThen the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.\\n\\nNote that each `IndexedHeader` in the fork should have a valid quorum certificate. \\nSuch forks exist since Babylon considers CZs might have dishonest majority.\\nAlso note that the IBC-Go implementation will only consider the first header in a fork valid, since\\nthe subsequent headers cannot be verified without knowing the validator set in the previous header."},"timestamped_headers_count":{"type":"string","format":"uint64","title":"timestamped_headers_count is the number of timestamped headers in CZ\'s canonical chain"}}}},"description":"QueryEpochChainInfoResponse is response type for the Query/EpochChainInfo RPC method."},"babylon.zoneconcierge.v1.QueryFinalizedChainInfoResponse":{"type":"object","properties":{"finalized_chain_info":{"title":"finalized_chain_info is the info of the CZ","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the ID of the chain"},"latest_header":{"title":"latest_header is the latest header in CZ\'s canonical chain","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}}},"latest_forks":{"title":"latest_forks is the latest forks, formed as a series of IndexedHeader (from low to high)","type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"blocks is the list of non-canonical indexed headers at the same height"}},"description":"Forks is a list of non-canonical `IndexedHeader`s at the same height.\\nFor example, assuming the following blockchain\\n```\\nA <- B <- C <- D <- E\\n           \\\\ -- D1\\n           \\\\ -- D2\\n```\\nThen the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.\\n\\nNote that each `IndexedHeader` in the fork should have a valid quorum certificate. \\nSuch forks exist since Babylon considers CZs might have dishonest majority.\\nAlso note that the IBC-Go implementation will only consider the first header in a fork valid, since\\nthe subsequent headers cannot be verified without knowing the validator set in the previous header."},"timestamped_headers_count":{"type":"string","format":"uint64","title":"timestamped_headers_count is the number of timestamped headers in CZ\'s canonical chain"}}},"epoch_info":{"title":"epoch_info is the metadata of the last BTC-finalised epoch","type":"object","properties":{"epoch_number":{"type":"string","format":"uint64"},"current_epoch_interval":{"type":"string","format":"uint64"},"first_block_height":{"type":"string","format":"uint64"},"last_block_header":{"description":"last_block_header is the header of the last block in this epoch.\\nBabylon needs to remember the last header of each epoch to complete unbonding validators/delegations when a previous epoch\'s checkpoint is finalised.\\nThe last_block_header field is nil in the epoch\'s beginning, and is set upon the end of this epoch.","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}}},"app_hash_root":{"type":"string","format":"byte","title":"app_hash_root is the Merkle root of all AppHashs in this epoch\\nIt will be used for proving a block is in an epoch"},"sealer_header":{"title":"sealer_header is the 2nd header of the next epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."}}},"raw_checkpoint":{"title":"raw_checkpoint is the raw checkpoint of this epoch","type":"object","properties":{"epoch_num":{"type":"string","format":"uint64","title":"epoch_num defines the epoch number the raw checkpoint is for"},"last_commit_hash":{"type":"string","format":"byte","title":"last_commit_hash defines the \'LastCommitHash\' that individual BLS sigs are signed on"},"bitmap":{"type":"string","format":"byte","title":"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},"bls_multi_sig":{"type":"string","format":"byte","title":"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}}},"btc_submission_key":{"title":"btc_submission_key is position of two BTC txs that include the raw checkpoint of this epoch","type":"object","properties":{"key":{"type":"array","items":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block"}}}},"proof":{"title":"proof is the proof that the chain info is finalized","type":"object","properties":{"proof_tx_in_block":{"title":"proof_tx_in_block is the proof that tx that carries the header is included in a certain Babylon block","type":"object","properties":{"root_hash":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"},"proof":{"type":"object","properties":{"total":{"type":"string","format":"int64"},"index":{"type":"string","format":"int64"},"leaf_hash":{"type":"string","format":"byte"},"aunts":{"type":"array","items":{"type":"string","format":"byte"}}}}},"description":"TxProof represents a Merkle proof of the presence of a transaction in the Merkle tree."},"proof_header_in_epoch":{"type":"object","properties":{"total":{"type":"string","format":"int64"},"index":{"type":"string","format":"int64"},"leaf_hash":{"type":"string","format":"byte"},"aunts":{"type":"array","items":{"type":"string","format":"byte"}}},"title":"proof_header_in_epoch is the proof that the Babylon header is in a certain epoch"},"proof_epoch_sealed":{"title":"proof_epoch_sealed is the proof that the epoch is sealed","type":"object","properties":{"validator_set":{"type":"array","items":{"type":"object","properties":{"validator_address":{"type":"string"},"bls_pub_key":{"type":"string","format":"byte"},"voting_power":{"type":"string","format":"uint64"}},"title":"ValidatorWithBlsKey couples validator address, voting power, and its bls public key"},"title":"validator_set is the validator set of the sealed epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header"},"proof_epoch_info":{"title":"proof_epoch_info is the Merkle proof that the epoch\'s metadata is committed to `app_hash` of the sealer header","type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}}},"proof_epoch_val_set":{"title":"proof_epoch_info is the Merkle proof that the epoch\'s validator set is committed to `app_hash` of the sealer header","type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}}}}},"proof_epoch_submitted":{"type":"array","items":{"type":"object","properties":{"key":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block","description":"key is the position (txIdx, blockHash) of this tx on BTC blockchain\\nAlthough it is already a part of SubmissionKey, we store it here again\\nto make TransactionInfo self-contained.\\nFor example, storing the key allows TransactionInfo to not relay on \\nthe fact that TransactionInfo will be ordered in the same order as \\nTransactionKeys in SubmissionKey."},"transaction":{"type":"string","format":"byte","title":"transaction is the full transaction in bytes"},"proof":{"type":"string","format":"byte","title":"proof is the Merkle proof that this tx is included in the position in `key`\\nTODO: maybe it could use here better format as we already processed and \\nvalideated the proof?"}},"title":"TransactionInfo is the info of a tx that contains Babylon checkpoint, including\\n- the position of the tx on BTC blockchain\\n- the full tx content\\n- the Merkle proof that this tx is on the above position"},"title":"proof_epoch_submitted is the proof that the epoch\'s checkpoint is included in BTC ledger\\nIt is the two TransactionInfo in the best (i.e., earliest) checkpoint submission"}}}},"description":"QueryFinalizedChainInfoResponse is response type for the Query/FinalizedChainInfo RPC method."},"babylon.zoneconcierge.v1.QueryFinalizedChainInfoUntilHeightResponse":{"type":"object","properties":{"finalized_chain_info":{"title":"finalized_chain_info is the info of the CZ","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the ID of the chain"},"latest_header":{"title":"latest_header is the latest header in CZ\'s canonical chain","type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}}},"latest_forks":{"title":"latest_forks is the latest forks, formed as a series of IndexedHeader (from low to high)","type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"blocks is the list of non-canonical indexed headers at the same height"}},"description":"Forks is a list of non-canonical `IndexedHeader`s at the same height.\\nFor example, assuming the following blockchain\\n```\\nA <- B <- C <- D <- E\\n           \\\\ -- D1\\n           \\\\ -- D2\\n```\\nThen the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.\\n\\nNote that each `IndexedHeader` in the fork should have a valid quorum certificate. \\nSuch forks exist since Babylon considers CZs might have dishonest majority.\\nAlso note that the IBC-Go implementation will only consider the first header in a fork valid, since\\nthe subsequent headers cannot be verified without knowing the validator set in the previous header."},"timestamped_headers_count":{"type":"string","format":"uint64","title":"timestamped_headers_count is the number of timestamped headers in CZ\'s canonical chain"}}},"epoch_info":{"title":"epoch_info is the metadata of the last BTC-finalised epoch","type":"object","properties":{"epoch_number":{"type":"string","format":"uint64"},"current_epoch_interval":{"type":"string","format":"uint64"},"first_block_height":{"type":"string","format":"uint64"},"last_block_header":{"description":"last_block_header is the header of the last block in this epoch.\\nBabylon needs to remember the last header of each epoch to complete unbonding validators/delegations when a previous epoch\'s checkpoint is finalised.\\nThe last_block_header field is nil in the epoch\'s beginning, and is set upon the end of this epoch.","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}}},"app_hash_root":{"type":"string","format":"byte","title":"app_hash_root is the Merkle root of all AppHashs in this epoch\\nIt will be used for proving a block is in an epoch"},"sealer_header":{"title":"sealer_header is the 2nd header of the next epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."}}},"raw_checkpoint":{"title":"raw_checkpoint is the raw checkpoint of this epoch","type":"object","properties":{"epoch_num":{"type":"string","format":"uint64","title":"epoch_num defines the epoch number the raw checkpoint is for"},"last_commit_hash":{"type":"string","format":"byte","title":"last_commit_hash defines the \'LastCommitHash\' that individual BLS sigs are signed on"},"bitmap":{"type":"string","format":"byte","title":"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},"bls_multi_sig":{"type":"string","format":"byte","title":"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}}},"btc_submission_key":{"title":"btc_submission_key is position of two BTC txs that include the raw checkpoint of this epoch","type":"object","properties":{"key":{"type":"array","items":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block"}}}},"proof":{"title":"proof is the proof that the chain info is finalized","type":"object","properties":{"proof_tx_in_block":{"title":"proof_tx_in_block is the proof that tx that carries the header is included in a certain Babylon block","type":"object","properties":{"root_hash":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"},"proof":{"type":"object","properties":{"total":{"type":"string","format":"int64"},"index":{"type":"string","format":"int64"},"leaf_hash":{"type":"string","format":"byte"},"aunts":{"type":"array","items":{"type":"string","format":"byte"}}}}},"description":"TxProof represents a Merkle proof of the presence of a transaction in the Merkle tree."},"proof_header_in_epoch":{"type":"object","properties":{"total":{"type":"string","format":"int64"},"index":{"type":"string","format":"int64"},"leaf_hash":{"type":"string","format":"byte"},"aunts":{"type":"array","items":{"type":"string","format":"byte"}}},"title":"proof_header_in_epoch is the proof that the Babylon header is in a certain epoch"},"proof_epoch_sealed":{"title":"proof_epoch_sealed is the proof that the epoch is sealed","type":"object","properties":{"validator_set":{"type":"array","items":{"type":"object","properties":{"validator_address":{"type":"string"},"bls_pub_key":{"type":"string","format":"byte"},"voting_power":{"type":"string","format":"uint64"}},"title":"ValidatorWithBlsKey couples validator address, voting power, and its bls public key"},"title":"validator_set is the validator set of the sealed epoch\\nThis validator set has generated a BLS multisig on `last_commit_hash` of the sealer header"},"proof_epoch_info":{"title":"proof_epoch_info is the Merkle proof that the epoch\'s metadata is committed to `app_hash` of the sealer header","type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}}},"proof_epoch_val_set":{"title":"proof_epoch_info is the Merkle proof that the epoch\'s validator set is committed to `app_hash` of the sealer header","type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}}}}},"proof_epoch_submitted":{"type":"array","items":{"type":"object","properties":{"key":{"type":"object","properties":{"index":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"Each provided OP_RETURN transaction can be idendtified by hash of block in\\nwhich transaction was included and transaction index in the block","description":"key is the position (txIdx, blockHash) of this tx on BTC blockchain\\nAlthough it is already a part of SubmissionKey, we store it here again\\nto make TransactionInfo self-contained.\\nFor example, storing the key allows TransactionInfo to not relay on \\nthe fact that TransactionInfo will be ordered in the same order as \\nTransactionKeys in SubmissionKey."},"transaction":{"type":"string","format":"byte","title":"transaction is the full transaction in bytes"},"proof":{"type":"string","format":"byte","title":"proof is the Merkle proof that this tx is included in the position in `key`\\nTODO: maybe it could use here better format as we already processed and \\nvalideated the proof?"}},"title":"TransactionInfo is the info of a tx that contains Babylon checkpoint, including\\n- the position of the tx on BTC blockchain\\n- the full tx content\\n- the Merkle proof that this tx is on the above position"},"title":"proof_epoch_submitted is the proof that the epoch\'s checkpoint is included in BTC ledger\\nIt is the two TransactionInfo in the best (i.e., earliest) checkpoint submission"}}}},"description":"QueryFinalizedChainInfoUntilHeightResponse is response type for the Query/FinalizedChainInfoUntilHeight RPC method."},"babylon.zoneconcierge.v1.QueryHeaderResponse":{"type":"object","properties":{"header":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"fork_headers":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"blocks is the list of non-canonical indexed headers at the same height"}},"description":"Forks is a list of non-canonical `IndexedHeader`s at the same height.\\nFor example, assuming the following blockchain\\n```\\nA <- B <- C <- D <- E\\n           \\\\ -- D1\\n           \\\\ -- D2\\n```\\nThen the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.\\n\\nNote that each `IndexedHeader` in the fork should have a valid quorum certificate. \\nSuch forks exist since Babylon considers CZs might have dishonest majority.\\nAlso note that the IBC-Go implementation will only consider the first header in a fork valid, since\\nthe subsequent headers cannot be verified without knowing the validator set in the previous header."}},"description":"QueryParamsResponse is response type for the Query/Header RPC method."},"babylon.zoneconcierge.v1.QueryListEpochHeadersResponse":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"headers is the list of headers"}},"description":"QueryListEpochHeadersResponse is response type for the Query/ListEpochHeaders RPC method."},"babylon.zoneconcierge.v1.QueryListHeadersResponse":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"chain_id":{"type":"string","title":"chain_id is the unique ID of the chain"},"hash":{"type":"string","format":"byte","title":"hash is the hash of this header"},"height":{"type":"string","format":"uint64","title":"height is the height of this header on CZ ledger\\n(hash, height) jointly provides the position of the header on CZ ledger"},"babylon_header":{"title":"babylon_header is the header of the babylon block that includes this CZ header","type":"object","properties":{"version":{"title":"basic block info","type":"object","properties":{"block":{"type":"string","format":"uint64"},"app":{"type":"string","format":"uint64"}},"description":"Consensus captures the consensus rules for processing a block in the blockchain,\\nincluding all blockchain data structures and the rules of the application\'s\\nstate transition machine."},"chain_id":{"type":"string"},"height":{"type":"string","format":"int64"},"time":{"type":"string","format":"date-time"},"last_block_id":{"title":"prev block info","type":"object","properties":{"hash":{"type":"string","format":"byte"},"part_set_header":{"type":"object","properties":{"total":{"type":"integer","format":"int64"},"hash":{"type":"string","format":"byte"}},"title":"PartsetHeader"}}},"last_commit_hash":{"type":"string","format":"byte","title":"hashes of block data"},"data_hash":{"type":"string","format":"byte"},"validators_hash":{"type":"string","format":"byte","title":"hashes from the app output from the prev block"},"next_validators_hash":{"type":"string","format":"byte"},"consensus_hash":{"type":"string","format":"byte"},"app_hash":{"type":"string","format":"byte"},"last_results_hash":{"type":"string","format":"byte"},"evidence_hash":{"type":"string","format":"byte","title":"consensus info"},"proposer_address":{"type":"string","format":"byte"}},"description":"Header defines the structure of a Tendermint block header."},"babylon_epoch":{"type":"string","format":"uint64","title":"epoch is the epoch number of this header on Babylon ledger"},"babylon_tx_hash":{"type":"string","format":"byte","title":"babylon_tx_hash is the hash of the tx that includes this header\\n(babylon_block_height, babylon_tx_hash) jointly provides the position of the header on Babylon ledger"}},"title":"IndexedHeader is the metadata of a CZ header"},"title":"headers is the list of headers"},"pagination":{"title":"pagination defines the pagination in the response","type":"object","properties":{"next_key":{"type":"string","format":"byte","description":"next_key is the key to be passed to PageRequest.key to\\nquery the next page most efficiently. It will be empty if\\nthere are no more results."},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\\nwas set, its value is undefined otherwise"}},"description":"PageResponse is to be embedded in gRPC response messages where the\\ncorresponding request message has used PageRequest.\\n\\n message SomeResponse {\\n         repeated Bar results = 1;\\n         PageResponse page = 2;\\n }"}},"description":"QueryListHeadersResponse is response type for the Query/ListHeaders RPC method."},"babylon.zoneconcierge.v1.QueryParamsResponse":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object"}},"description":"QueryParamsResponse is response type for the Query/Params RPC method."},"tendermint.crypto.Proof":{"type":"object","properties":{"total":{"type":"string","format":"int64"},"index":{"type":"string","format":"int64"},"leaf_hash":{"type":"string","format":"byte"},"aunts":{"type":"array","items":{"type":"string","format":"byte"}}}},"tendermint.crypto.ProofOp":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"},"tendermint.crypto.ProofOps":{"type":"object","properties":{"ops":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"}},"title":"ProofOp defines an operation used for calculating Merkle root\\nThe data could be arbitrary format, providing nessecary data\\nfor example neighbouring node hash"}}},"title":"ProofOps is Merkle proof defined by the list of ProofOps"},"tendermint.types.TxProof":{"type":"object","properties":{"root_hash":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"},"proof":{"type":"object","properties":{"total":{"type":"string","format":"int64"},"index":{"type":"string","format":"int64"},"leaf_hash":{"type":"string","format":"byte"},"aunts":{"type":"array","items":{"type":"string","format":"byte"}}}}},"description":"TxProof represents a Merkle proof of the presence of a transaction in the Merkle tree."}}}}}},"docusaurus-theme-redoc":{"theme-redoc":{"lightTheme":{"typography":{"fontFamily":"var(--ifm-font-family-base)","fontSize":"var(--ifm-font-size-base)","lineHeight":"var(--ifm-line-height-base)","fontWeightLight":"var(--ifm-font-weight-light)","fontWeightRegular":"var(--ifm-font-weight-base)","fontWeightBold":"var(--ifm-font-weight-bold)","headings":{"fontFamily":"var(--ifm-heading-font-family)","fontWeight":"var(--ifm-heading-font-weight)","lineHeight":"var(--ifm-heading-line-height)"},"code":{"fontFamily":"var(--ifm-font-family-monospace)","lineHeight":"var(--ifm-pre-line-height)"}},"sidebar":{"width":"300px","backgroundColor":"#ffffff"},"rightPanel":{"backgroundColor":"#303846"},"colors":{"primary":{"main":"#1890ff"}},"theme":{"prism":{"additionalLanguages":["scala"]}}},"darkTheme":{"typography":{"fontFamily":"var(--ifm-font-family-base)","fontSize":"var(--ifm-font-size-base)","lineHeight":"var(--ifm-line-height-base)","fontWeightLight":"var(--ifm-font-weight-light)","fontWeightRegular":"var(--ifm-font-weight-base)","fontWeightBold":"var(--ifm-font-weight-bold)","headings":{"fontFamily":"var(--ifm-heading-font-family)","fontWeight":"var(--ifm-heading-font-weight)","lineHeight":"var(--ifm-heading-line-height)"},"code":{"fontFamily":"var(--ifm-font-family-monospace)","lineHeight":"var(--ifm-pre-line-height)"}},"sidebar":{"width":"300px","backgroundColor":"rgb(24, 25, 26)","textColor":"#f5f6f7","arrow":{"color":"#f5f6f7"}},"colors":{"text":{"primary":"#f5f6f7","secondary":"rgba(255, 255, 255, 1)"},"gray":{"50":"#FAFAFA","100":"#F5F5F5"},"border":{"dark":"#ffffff","light":"rgba(0,0,0, 0.1)"},"primary":{"main":"#1890ff"}},"schema":{"nestedBackground":"rgb(24, 25, 26)","typeNameColor":"rgba(255, 255, 255, 1)","typeTitleColor":"rgba(255, 255, 255, 1)"},"theme":{"prism":{"additionalLanguages":["scala"]}}},"options":{"scrollYOffset":"nav.navbar","expandSingleSchemaField":true,"menuToggle":true,"suppressWarnings":true}}},"docusaurus-plugin-content-docs":{"default":{"path":"/apidoc/docs","versions":[{"name":"current","label":"Next","isLast":true,"path":"/apidoc/docs","mainDocId":"intro","docs":[{"id":"api/grpcrestapi/babylon-grpc-gateway-docs","path":"/apidoc/docs/api/grpcrestapi/babylon-grpc-gateway-docs","sidebar":"docs"},{"id":"api/grpcrestapi/base-header","path":"/apidoc/docs/api/grpcrestapi/base-header"},{"id":"api/grpcrestapi/bls-public-key-list","path":"/apidoc/docs/api/grpcrestapi/bls-public-key-list"},{"id":"api/grpcrestapi/btc-checkpoint-height","path":"/apidoc/docs/api/grpcrestapi/btc-checkpoint-height"},{"id":"api/grpcrestapi/btc-checkpoint-params","path":"/apidoc/docs/api/grpcrestapi/btc-checkpoint-params"},{"id":"api/grpcrestapi/btc-light-client-params","path":"/apidoc/docs/api/grpcrestapi/btc-light-client-params"},{"id":"api/grpcrestapi/chain-info","path":"/apidoc/docs/api/grpcrestapi/chain-info"},{"id":"api/grpcrestapi/chain-list","path":"/apidoc/docs/api/grpcrestapi/chain-list"},{"id":"api/grpcrestapi/checkpointing-params","path":"/apidoc/docs/api/grpcrestapi/checkpointing-params"},{"id":"api/grpcrestapi/contains","path":"/apidoc/docs/api/grpcrestapi/contains"},{"id":"api/grpcrestapi/contains-bytes","path":"/apidoc/docs/api/grpcrestapi/contains-bytes"},{"id":"api/grpcrestapi/current-epoch","path":"/apidoc/docs/api/grpcrestapi/current-epoch"},{"id":"api/grpcrestapi/delegation-lifecycle","path":"/apidoc/docs/api/grpcrestapi/delegation-lifecycle"},{"id":"api/grpcrestapi/epoch-chain-info","path":"/apidoc/docs/api/grpcrestapi/epoch-chain-info"},{"id":"api/grpcrestapi/epoch-info","path":"/apidoc/docs/api/grpcrestapi/epoch-info"},{"id":"api/grpcrestapi/epoch-msgs","path":"/apidoc/docs/api/grpcrestapi/epoch-msgs"},{"id":"api/grpcrestapi/epoch-status","path":"/apidoc/docs/api/grpcrestapi/epoch-status"},{"id":"api/grpcrestapi/epoch-submissions","path":"/apidoc/docs/api/grpcrestapi/epoch-submissions"},{"id":"api/grpcrestapi/epoch-val-set","path":"/apidoc/docs/api/grpcrestapi/epoch-val-set"},{"id":"api/grpcrestapi/epoching-params","path":"/apidoc/docs/api/grpcrestapi/epoching-params"},{"id":"api/grpcrestapi/finalized-chain-info","path":"/apidoc/docs/api/grpcrestapi/finalized-chain-info"},{"id":"api/grpcrestapi/finalized-chain-info-until-height","path":"/apidoc/docs/api/grpcrestapi/finalized-chain-info-until-height"},{"id":"api/grpcrestapi/hashes","path":"/apidoc/docs/api/grpcrestapi/hashes"},{"id":"api/grpcrestapi/header","path":"/apidoc/docs/api/grpcrestapi/header"},{"id":"api/grpcrestapi/latest-epoch-msgs","path":"/apidoc/docs/api/grpcrestapi/latest-epoch-msgs"},{"id":"api/grpcrestapi/list-epoch-headers","path":"/apidoc/docs/api/grpcrestapi/list-epoch-headers"},{"id":"api/grpcrestapi/list-headers","path":"/apidoc/docs/api/grpcrestapi/list-headers"},{"id":"api/grpcrestapi/main-chain","path":"/apidoc/docs/api/grpcrestapi/main-chain"},{"id":"api/grpcrestapi/raw-checkpoint","path":"/apidoc/docs/api/grpcrestapi/raw-checkpoint"},{"id":"api/grpcrestapi/raw-checkpoint-list","path":"/apidoc/docs/api/grpcrestapi/raw-checkpoint-list"},{"id":"api/grpcrestapi/recent-epoch-status-count","path":"/apidoc/docs/api/grpcrestapi/recent-epoch-status-count"},{"id":"api/grpcrestapi/tip","path":"/apidoc/docs/api/grpcrestapi/tip"},{"id":"api/grpcrestapi/validator-lifecycle","path":"/apidoc/docs/api/grpcrestapi/validator-lifecycle"},{"id":"api/grpcrestapi/zone-concierge-params","path":"/apidoc/docs/api/grpcrestapi/zone-concierge-params","sidebar":"docs"},{"id":"cli/babylond/babylond","path":"/apidoc/docs/cli/babylond/","sidebar":"docs"},{"id":"cli/babylond/babylond_query","path":"/apidoc/docs/cli/babylond/babylond_query","sidebar":"docs"},{"id":"cli/babylond/babylond_rollback","path":"/apidoc/docs/cli/babylond/babylond_rollback","sidebar":"docs"},{"id":"cli/babylond/babylond_rosetta","path":"/apidoc/docs/cli/babylond/babylond_rosetta","sidebar":"docs"},{"id":"cli/babylond/babylond_start","path":"/apidoc/docs/cli/babylond/babylond_start","sidebar":"docs"},{"id":"cli/babylond/babylond_status","path":"/apidoc/docs/cli/babylond/babylond_status","sidebar":"docs"},{"id":"cli/babylond/babylond_tendermint","path":"/apidoc/docs/cli/babylond/babylond_tendermint","sidebar":"docs"},{"id":"cli/babylond/Babylond_tendermint/babylond_tendermint_reset-state","path":"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_reset-state","sidebar":"docs"},{"id":"cli/babylond/Babylond_tendermint/babylond_tendermint_show-address","path":"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-address","sidebar":"docs"},{"id":"cli/babylond/Babylond_tendermint/babylond_tendermint_show-node-id","path":"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-node-id","sidebar":"docs"},{"id":"cli/babylond/Babylond_tendermint/babylond_tendermint_show-validator","path":"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-validator","sidebar":"docs"},{"id":"cli/babylond/Babylond_tendermint/babylond_tendermint_unsafe-reset-all","path":"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_unsafe-reset-all","sidebar":"docs"},{"id":"cli/babylond/Babylond_tendermint/babylond_tendermint_version","path":"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_version","sidebar":"docs"},{"id":"cli/babylond/babylond_testnet","path":"/apidoc/docs/cli/babylond/babylond_testnet","sidebar":"docs"},{"id":"cli/babylond/babylond_tx","path":"/apidoc/docs/cli/babylond/babylond_tx","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_authz","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_authz","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_exec","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_exec","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_grant","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_grant","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_revoke","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_revoke","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_bank","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_bank","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_multi-send","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_multi-send","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_send","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_send","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_broadcast","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_broadcast","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_btccheckpoint","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_btccheckpoint","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_btclightclient","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_btclightclient","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_btclightclient/babylond_tx_btclightclient_insert-header","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_btclightclient/babylond_tx_btclightclient_insert-header","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_checkpointing","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_checkpointing","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_create-validator","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_create-validator","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_submit","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_submit","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_crisis","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_crisis","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_crisis/babylond_tx_crisis_invariant-broken","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_crisis/babylond_tx_crisis_invariant-broken","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_decode","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_decode","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_distribution","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_distribution","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_fund-community-pool","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_fund-community-pool","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_set-withdraw-addr","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_set-withdraw-addr","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-all-rewards","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-all-rewards","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-rewards","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-rewards","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_encode","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_encode","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_epoching","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_epoching","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_delegate","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_delegate","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_redelegate","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_redelegate","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_unbond","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_unbond","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_evidence","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_evidence","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_feegrant","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_feegrant","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_grant","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_grant","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_revoke","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_revoke","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_gov","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_gov","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_deposit","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_deposit","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_draft-proposal","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_draft-proposal","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-legacy-proposal","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-legacy-proposal","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-proposal","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-proposal","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_vote","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_vote","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_weighted-vote","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_weighted-vote","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_cancel","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_cancel","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_community","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_community","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_param","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_param","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_software","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_software","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_ibc","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_ibc","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_ibc-transfer","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_ibc-transfer","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_ibc-transfer/babylond_tx_ibc-transfer_transfer","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc-transfer/babylond_tx_ibc-transfer_transfer","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_channel","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_channel","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_client","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_client","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_create","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_create","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_misbehaviour","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_misbehaviour","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_update","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_update","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_upgrade","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_upgrade","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_multi-sign","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_multi-sign","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_multi-sign/babylond_tx_multi-sign-batch","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_multi-sign/babylond_tx_multi-sign-batch","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_sign","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_sign","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_sign/babylond_tx_sign-batch","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_sign/babylond_tx_sign-batch","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_slashing","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_slashing","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_slashing/babylond_tx_slashing_unjail","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_slashing/babylond_tx_slashing_unjail","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_staking","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_staking","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_cancel-unbond","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_cancel-unbond","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_create-validator","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_create-validator","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_delegate","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_delegate","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_edit-validator","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_edit-validator","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_redelegate","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_redelegate","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_unbond","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_unbond","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_validate-signatures","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_validate-signatures","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_vesting","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_vesting","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-periodic-vesting-account","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-periodic-vesting-account","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-permanent-locked-account","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-permanent-locked-account","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-vesting-account","path":"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-vesting-account","sidebar":"docs"},{"id":"cli/babylond/Babylond_tx/babylond_tx_zoneconcierge","path":"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_zoneconcierge","sidebar":"docs"},{"id":"cli/babylond/babylond_validate-genesis","path":"/apidoc/docs/cli/babylond/babylond_validate-genesis","sidebar":"docs"},{"id":"cli/babylond/babylond_version","path":"/apidoc/docs/cli/babylond/babylond_version","sidebar":"docs"},{"id":"cli/babylond/babylondaddgenesisaccount","path":"/apidoc/docs/cli/babylond/babylondaddgenesisaccount","sidebar":"docs"},{"id":"cli/babylond/babylondaddgenesisbls","path":"/apidoc/docs/cli/babylond/babylondaddgenesisbls","sidebar":"docs"},{"id":"cli/babylond/babylondcollectgentxs","path":"/apidoc/docs/cli/babylond/babylondcollectgentxs","sidebar":"docs"},{"id":"cli/babylond/babylondconfig","path":"/apidoc/docs/cli/babylond/babylondconfig","sidebar":"docs"},{"id":"cli/babylond/babylondcreatebls","path":"/apidoc/docs/cli/babylond/babylondcreatebls","sidebar":"docs"},{"id":"cli/babylond/babylondcreategenesiskey","path":"/apidoc/docs/cli/babylond/babylondcreategenesiskey","sidebar":"docs"},{"id":"cli/babylond/babylondexport","path":"/apidoc/docs/cli/babylond/babylondexport","sidebar":"docs"},{"id":"cli/babylond/babylondgentx","path":"/apidoc/docs/cli/babylond/babylondgentx","sidebar":"docs"},{"id":"cli/babylond/babylondhelp","path":"/apidoc/docs/cli/babylond/babylondhelp","sidebar":"docs"},{"id":"cli/babylond/babylondinit","path":"/apidoc/docs/cli/babylond/babylondinit","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_account","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_account","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_auth","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_auth","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_account","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_account","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_accounts","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_accounts","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_address_by_acc_num","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_address_by_acc_num","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_account","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_account","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_accounts","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_accounts","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_authz","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_authz","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_authz/babylond_query_authz_grants","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_authz/babylond_query_authz_grants","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_grantee","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_grantee","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_granter","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_granter","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_bank","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_bank","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_balances","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_balances","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_denom_metadata","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_denom_metadata","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_block","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_block","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_btccheckpoint","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_btccheckpoint","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_btc-height","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_btc-height","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_epoch_submissions","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_epoch_submissions","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_btclightclient","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_btclightclient","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_base-header","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_base-header","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_contains","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_contains","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_main-chain","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_main-chain","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_checkpointing","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_checkpointing","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_raw_checkpoint","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_raw_checkpoint","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_checkpointing/Babylond_query_checkpointing_raw-checkpoint/babylond_query_checkpointing_raw-checkpoint_list","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/Babylond_query_checkpointing_raw-checkpoint/babylond_query_checkpointing_raw-checkpoint_list","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_distribution","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_distribution","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_commission","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_commission","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_community-pool","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_community-pool","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_rewards","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_rewards","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_validator-outstanding-rewards","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_validator-outstanding-rewards","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_epoching","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_epoching","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_epoching/babylond_query_epoching_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_epoching/babylond_query_epoching_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_evidence","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_evidence","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_freegrant","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_freegrant","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grant","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grant","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-grantee","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-grantee","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-granter","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-granter","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_gov","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_gov","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposit","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposit","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposits","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposits","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_param","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_param","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposal","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposal","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposals","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposals"},{"id":"cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposer","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposer","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_tally","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_tally","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_vote","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_vote","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_votes","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_votes","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_channels","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_channels","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_client-state","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_client-state","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_connections","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_connections","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_end","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_end","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_next-sequence-receive","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_next-sequence-receive","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-ack","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-ack","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitment","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitment","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitments","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitments","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-receipt","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-receipt","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-acks","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-acks","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-packets","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-packets","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-states","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-states","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_header","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_header","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_self-consensus-state","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_self-consensus-state","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_state","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_state","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_states","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_states","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_status","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_status","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_end","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_end","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_path","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_path","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-hash","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-hash","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-trace","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-trace","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_escrow-address","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_escrow-address","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_mint","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_mint","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_annual-provisions","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_annual-provisions","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_inflation","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_inflation","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_params/babylond_query_params_subspace","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_params/babylond_query_params_subspace","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_slashing","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_slashing","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-info","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-info","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-infos","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-infos","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_staking","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_staking","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegation","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegation","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations-to","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations-to","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_historical-info","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_historical-info","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_params","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_pool","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_pool","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation-from","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation-from","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegations","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegations","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegation","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegation","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations-from","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations-from","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validator","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validator","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validators","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validators","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_tendermint-validator-set","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_tendermint-validator-set","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_tx","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_tx","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_txs","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_txs","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_upgrade","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_upgrade","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_applied","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_applied","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_module_versions","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_module_versions","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_plan","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_plan","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/babylond_query_zoneconcierge","path":"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_zoneconcierge","sidebar":"docs"},{"id":"cli/babylond/BabylondQuery/Babylond_query_zoneconcierge/babylond_query_zoneconcierge_params","path":"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_zoneconcierge/babylond_query_zoneconcierge_params","sidebar":"docs"},{"id":"cli/babylond/cli","path":"/apidoc/docs/cli/babylond/cli","sidebar":"docs"},{"id":"cli/babylond/debug/babylonddebug","path":"/apidoc/docs/cli/babylond/debug/babylonddebug","sidebar":"docs"},{"id":"cli/babylond/debug/babylonddebugaddr","path":"/apidoc/docs/cli/babylond/debug/babylonddebugaddr","sidebar":"docs"},{"id":"cli/babylond/debug/babylonddebugpubkey","path":"/apidoc/docs/cli/babylond/debug/babylonddebugpubkey","sidebar":"docs"},{"id":"cli/babylond/debug/babylonddebugpubkeyraw","path":"/apidoc/docs/cli/babylond/debug/babylonddebugpubkeyraw","sidebar":"docs"},{"id":"cli/babylond/debug/babylonddebugrawbytes","path":"/apidoc/docs/cli/babylond/debug/babylonddebugrawbytes","sidebar":"docs"},{"id":"cli/babylond/keys/babylondkeys","path":"/apidoc/docs/cli/babylond/keys/babylondkeys","sidebar":"docs"},{"id":"cli/babylond/keys/babylondkeysdd","path":"/apidoc/docs/cli/babylond/keys/babylondkeysdd","sidebar":"docs"},{"id":"cli/babylond/keys/babylondkeysdelete","path":"/apidoc/docs/cli/babylond/keys/babylondkeysdelete","sidebar":"docs"},{"id":"cli/babylond/keys/babylondkeysexport","path":"/apidoc/docs/cli/babylond/keys/babylondkeysexport","sidebar":"docs"},{"id":"cli/babylond/keys/babylondkeysimport","path":"/apidoc/docs/cli/babylond/keys/babylondkeysimport","sidebar":"docs"},{"id":"cli/babylond/keys/babylondkeyslist","path":"/apidoc/docs/cli/babylond/keys/babylondkeyslist","sidebar":"docs"},{"id":"cli/babylond/keys/babylondkeysmigrate","path":"/apidoc/docs/cli/babylond/keys/babylondkeysmigrate","sidebar":"docs"},{"id":"cli/babylond/keys/babylondkeysmnemonic","path":"/apidoc/docs/cli/babylond/keys/babylondkeysmnemonic","sidebar":"docs"},{"id":"cli/babylond/keys/babylondkeysparse","path":"/apidoc/docs/cli/babylond/keys/babylondkeysparse","sidebar":"docs"},{"id":"cli/babylond/keys/babylondkeysrename","path":"/apidoc/docs/cli/babylond/keys/babylondkeysrename","sidebar":"docs"},{"id":"cli/babylond/keys/babylondkeysshow","path":"/apidoc/docs/cli/babylond/keys/babylondkeysshow","sidebar":"docs"},{"id":"cli/babylond/migrate","path":"/apidoc/docs/cli/babylond/migrate","sidebar":"docs"},{"id":"cli/babylond/preparegenesis","path":"/apidoc/docs/cli/babylond/preparegenesis","sidebar":"docs"},{"id":"error","path":"/apidoc/docs/error"},{"id":"grpc/btccheckpointgrpc","path":"/apidoc/docs/grpc/btccheckpointgrpc","sidebar":"docs"},{"id":"grpc/btclightclient/lightclient1","path":"/apidoc/docs/grpc/btclightclient/lightclient1","sidebar":"docs"},{"id":"grpc/btclightclient/lightcontains","path":"/apidoc/docs/grpc/btclightclient/lightcontains","sidebar":"docs"},{"id":"grpc/btclightclient/lightcontainsbytes","path":"/apidoc/docs/grpc/btclightclient/lightcontainsbytes","sidebar":"docs"},{"id":"grpc/btclightclient/lighthashes","path":"/apidoc/docs/grpc/btclightclient/lighthashes","sidebar":"docs"},{"id":"grpc/btclightclient/lightheader","path":"/apidoc/docs/grpc/btclightclient/lightheader","sidebar":"docs"},{"id":"grpc/btclightclient/lightmainchain","path":"/apidoc/docs/grpc/btclightclient/lightmainchain","sidebar":"docs"},{"id":"grpc/btclightclient/lightparams","path":"/apidoc/docs/grpc/btclightclient/lightparams","sidebar":"docs"},{"id":"grpc/btclightclient/lighttip","path":"/apidoc/docs/grpc/btclightclient/lighttip","sidebar":"docs"},{"id":"grpc/checkpointing/checkpointmod","path":"/apidoc/docs/grpc/checkpointing/checkpointmod","sidebar":"docs"},{"id":"grpc/checkpointing/rawcheckpoint","path":"/apidoc/docs/grpc/checkpointing/rawcheckpoint","sidebar":"docs"},{"id":"grpc/checkpointing/rawcheckpointlistepochnum","path":"/apidoc/docs/grpc/checkpointing/rawcheckpointlistepochnum","sidebar":"docs"},{"id":"grpc/checkpointing/rawcheckpointliststatus","path":"/apidoc/docs/grpc/checkpointing/rawcheckpointliststatus","sidebar":"docs"},{"id":"grpc/concierge/conciergeparams","path":"/apidoc/docs/grpc/concierge/conciergeparams","sidebar":"docs"},{"id":"grpc/concierge/zoneconcierge","path":"/apidoc/docs/grpc/concierge/zoneconcierge","sidebar":"docs"},{"id":"grpc/epoching/currentepoch","path":"/apidoc/docs/grpc/epoching/currentepoch","sidebar":"docs"},{"id":"grpc/epoching/delegationlifecycle","path":"/apidoc/docs/grpc/epoching/delegationlifecycle","sidebar":"docs"},{"id":"grpc/epoching/epoch","path":"/apidoc/docs/grpc/epoching/epoch","sidebar":"docs"},{"id":"grpc/epoching/epochinfomod","path":"/apidoc/docs/grpc/epoching/epochinfomod"},{"id":"grpc/epoching/epochmsgs","path":"/apidoc/docs/grpc/epoching/epochmsgs"},{"id":"grpc/epoching/latepochmsgs","path":"/apidoc/docs/grpc/epoching/latepochmsgs","sidebar":"docs"},{"id":"grpc/epoching/paramsmod","path":"/apidoc/docs/grpc/epoching/paramsmod","sidebar":"docs"},{"id":"grpc/epoching/validatorlifecycle","path":"/apidoc/docs/grpc/epoching/validatorlifecycle","sidebar":"docs"},{"id":"grpc/epochnum","path":"/apidoc/docs/grpc/epochnum","sidebar":"docs"},{"id":"grpc/grpcgateway","path":"/apidoc/docs/grpc/grpcgateway","sidebar":"docs"},{"id":"grpc/grpcparams","path":"/apidoc/docs/grpc/grpcparams","sidebar":"docs"},{"id":"grpc/submissions","path":"/apidoc/docs/grpc/submissions","sidebar":"docs"},{"id":"installation","path":"/apidoc/docs/installation","sidebar":"docs"},{"id":"intro","path":"/apidoc/docs/intro","sidebar":"docs"},{"id":"introduction/keycomponent","path":"/apidoc/docs/introduction/keycomponent","sidebar":"docs"},{"id":"introduction/overview","path":"/apidoc/docs/introduction/overview","sidebar":"docs"},{"id":"introduction/usecase","path":"/apidoc/docs/introduction/usecase","sidebar":"docs"},{"id":"module/btccheckpoint/btccheckpoint","path":"/apidoc/docs/module/btccheckpoint/","sidebar":"docs"},{"id":"module/btccheckpoint/checkpointheight","path":"/apidoc/docs/module/btccheckpoint/checkpointheight"},{"id":"module/btccheckpoint/checkpointparams","path":"/apidoc/docs/module/btccheckpoint/checkpointparams"},{"id":"module/btccheckpoint/epochsubmissions","path":"/apidoc/docs/module/btccheckpoint/epochsubmissions"},{"id":"module/btclightclient/lightbaseheader","path":"/apidoc/docs/module/btclightclient/lightbaseheader"},{"id":"module/btclightclient/lightclient","path":"/apidoc/docs/module/btclightclient/lightclient","sidebar":"docs"},{"id":"module/btclightclient/lightcontains","path":"/apidoc/docs/module/btclightclient/lightcontains"},{"id":"module/btclightclient/lightcontainsbytes","path":"/apidoc/docs/module/btclightclient/lightcontainsbytes"},{"id":"module/btclightclient/lighthashes","path":"/apidoc/docs/module/btclightclient/lighthashes"},{"id":"module/btclightclient/lightmainchain","path":"/apidoc/docs/module/btclightclient/lightmainchain"},{"id":"module/btclightclient/lightparams","path":"/apidoc/docs/module/btclightclient/lightparams"},{"id":"module/btclightclient/lighttip","path":"/apidoc/docs/module/btclightclient/lighttip"},{"id":"module/checkpointing/blspublickey","path":"/apidoc/docs/module/checkpointing/blspublickey"},{"id":"module/checkpointing/checkpointingmod","path":"/apidoc/docs/module/checkpointing/checkpointingmod","sidebar":"docs"},{"id":"module/checkpointing/checkpointparams","path":"/apidoc/docs/module/checkpointing/checkpointparams"},{"id":"module/checkpointing/epochstatus","path":"/apidoc/docs/module/checkpointing/epochstatus"},{"id":"module/checkpointing/latestcheckpoint","path":"/apidoc/docs/module/checkpointing/latestcheckpoint"},{"id":"module/checkpointing/rawcheckpoint","path":"/apidoc/docs/module/checkpointing/rawcheckpoint"},{"id":"module/checkpointing/rawcheckpointinglist","path":"/apidoc/docs/module/checkpointing/rawcheckpointinglist"},{"id":"module/checkpointing/recentepochcount","path":"/apidoc/docs/module/checkpointing/recentepochcount"},{"id":"module/checkpointing/recentrawcheckpointinglist","path":"/apidoc/docs/module/checkpointing/recentrawcheckpointinglist"},{"id":"module/czconcierge/chaininfo","path":"/apidoc/docs/module/czconcierge/chaininfo"},{"id":"module/czconcierge/chainlist","path":"/apidoc/docs/module/czconcierge/chainlist"},{"id":"module/czconcierge/conciergeparams","path":"/apidoc/docs/module/czconcierge/conciergeparams"},{"id":"module/czconcierge/czconcierge","path":"/apidoc/docs/module/czconcierge/","sidebar":"docs"},{"id":"module/czconcierge/finalizedchaininfo","path":"/apidoc/docs/module/czconcierge/finalizedchaininfo"},{"id":"module/epoch/currentepoch","path":"/apidoc/docs/module/epoch/currentepoch"},{"id":"module/epoch/delegationlifecycle","path":"/apidoc/docs/module/epoch/delegationlifecycle"},{"id":"module/epoch/epochinfomod","path":"/apidoc/docs/module/epoch/epochinfomod"},{"id":"module/epoch/epochingmod","path":"/apidoc/docs/module/epoch/epochingmod","sidebar":"docs"},{"id":"module/epoch/epochmsgs","path":"/apidoc/docs/module/epoch/epochmsgs"},{"id":"module/epoch/latepochmsgs","path":"/apidoc/docs/module/epoch/latepochmsgs"},{"id":"module/epoch/paramsmod","path":"/apidoc/docs/module/epoch/paramsmod"},{"id":"module/epoch/validatorlifecycle","path":"/apidoc/docs/module/epoch/validatorlifecycle"},{"id":"modules","path":"/apidoc/docs/modules","sidebar":"docs"},{"id":"node/nodeconfig","path":"/apidoc/docs/node/nodeconfig","sidebar":"docs"},{"id":"node/nodemanage","path":"/apidoc/docs/node/nodemanage"},{"id":"node/nodeoperator","path":"/apidoc/docs/node/nodeoperator","sidebar":"docs"},{"id":"resources/mainnet","path":"/apidoc/docs/resources/mainnet"},{"id":"resources/resources","path":"/apidoc/docs/resources/","sidebar":"docs"},{"id":"resources/testnet","path":"/apidoc/docs/resources/testnet","sidebar":"docs"},{"id":"setnode","path":"/apidoc/docs/setnode","sidebar":"docs"},{"id":"support","path":"/apidoc/docs/support","sidebar":"docs"},{"id":"videoguides","path":"/apidoc/docs/videoguides","sidebar":"docs"}],"draftIds":[],"sidebars":{"docs":{"link":{"path":"/apidoc/docs/intro","label":"Introduction"}}}}],"breadcrumbs":true}}}'),r=JSON.parse('{"defaultLocale":"en","locales":["en"],"path":"i18n","currentLocale":"en","localeConfigs":{"en":{"label":"English","direction":"ltr","htmlLang":"en","calendar":"gregory","path":"en"}}}');var s=n(57529);const l=JSON.parse('{"docusaurusVersion":"2.2.0","siteVersion":"0.0.0","pluginVersions":{"docusaurus-plugin-content-docs":{"type":"package","name":"@docusaurus/plugin-content-docs","version":"2.2.0"},"docusaurus-plugin-content-blog":{"type":"package","name":"@docusaurus/plugin-content-blog","version":"2.2.0"},"docusaurus-plugin-content-pages":{"type":"package","name":"@docusaurus/plugin-content-pages","version":"2.2.0"},"docusaurus-plugin-sitemap":{"type":"package","name":"@docusaurus/plugin-sitemap","version":"2.2.0"},"docusaurus-plugin-redoc":{"type":"package","name":"docusaurus-plugin-redoc","version":"1.4.0"},"docusaurus-theme-classic":{"type":"package","name":"@docusaurus/theme-classic","version":"2.2.0"},"docusaurus-theme-redoc":{"type":"package","name":"docusaurus-theme-redoc","version":"1.4.0"},"docusaurus-plugin-openapi-docs":{"type":"package","name":"docusaurus-plugin-openapi-docs","version":"1.5.1"},"docusaurus-theme-openapi":{"type":"package","name":"docusaurus-theme-openapi-docs","version":"1.5.1"}}}'),c={siteConfig:a.default,siteMetadata:l,globalData:i,i18n:r,codeTranslations:s},d=o.createContext(c);function p(e){let{children:t}=e;return o.createElement(d.Provider,{value:c},t)}},44763:(e,t,n)=>{"use strict";n.d(t,{Z:()=>d});var o=n(67294),a=n(10412),i=n(35742),r=n(40025);function s(e){let{error:t,tryAgain:n}=e;return o.createElement("div",{style:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",height:"50vh",width:"100%",fontSize:"20px"}},o.createElement("h1",null,"This page crashed."),o.createElement("p",null,t.message),o.createElement("button",{type:"button",onClick:n},"Try again"))}function l(e){let{error:t,tryAgain:n}=e;return o.createElement(d,{fallback:()=>o.createElement(s,{error:t,tryAgain:n})},o.createElement(i.Z,null,o.createElement("title",null,"Page Error")),o.createElement(r.Z,null,o.createElement(s,{error:t,tryAgain:n})))}const c=e=>o.createElement(l,e);class d extends o.Component{constructor(e){super(e),this.state={error:null}}componentDidCatch(e){a.default.canUseDOM&&this.setState({error:e})}render(){const{children:e}=this.props,{error:t}=this.state;if(t){const e={error:t,tryAgain:()=>this.setState({error:null})};return(this.props.fallback??c)(e)}return e??null}}},10412:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a});const o="undefined"!=typeof window&&"document"in window&&"createElement"in window.document,a={canUseDOM:o,canUseEventListeners:o&&("addEventListener"in window||"attachEvent"in window),canUseIntersectionObserver:o&&"IntersectionObserver"in window,canUseViewport:o&&"screen"in window}},35742:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var o=n(67294),a=n(70405);function i(e){return o.createElement(a.ql,e)}},39960:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var o=n(87462),a=n(67294),i=n(73727),r=n(18780),s=n(52263),l=n(13919),c=n(10412);const d=a.createContext({collectLink:()=>{}});var p=n(44996);function b(e,t){var n;let{isNavLink:b,to:u,href:y,activeClassName:h,isActive:f,"data-noBrokenLinkCheck":m,autoAddBaseUrl:g=!0,..._}=e;const{siteConfig:{trailingSlash:k,baseUrl:v}}=(0,s.Z)(),{withBaseUrl:B}=(0,p.C)(),x=(0,a.useContext)(d),w=(0,a.useRef)(null);(0,a.useImperativeHandle)(t,(()=>w.current));const q=u||y;const T=(0,l.Z)(q),E=null==q?void 0:q.replace("pathname://","");let S=void 0!==E?(C=E,g&&(e=>e.startsWith("/"))(C)?B(C):C):void 0;var C;S&&T&&(S=(0,r.applyTrailingSlash)(S,{trailingSlash:k,baseUrl:v}));const A=(0,a.useRef)(!1),P=b?i.OL:i.rU,R=c.default.canUseIntersectionObserver,I=(0,a.useRef)(),L=()=>{A.current||null==S||(window.docusaurus.preload(S),A.current=!0)};(0,a.useEffect)((()=>(!R&&T&&null!=S&&window.docusaurus.prefetch(S),()=>{R&&I.current&&I.current.disconnect()})),[I,S,R,T]);const N=(null==(n=S)?void 0:n.startsWith("#"))??!1,D=!S||!T||N;return D||m||x.collectLink(S),D?a.createElement("a",(0,o.Z)({ref:w,href:S},q&&!T&&{target:"_blank",rel:"noopener noreferrer"},_)):a.createElement(P,(0,o.Z)({},_,{onMouseEnter:L,onTouchStart:L,innerRef:e=>{w.current=e,R&&e&&T&&(I.current=new window.IntersectionObserver((t=>{t.forEach((t=>{e===t.target&&(t.isIntersecting||t.intersectionRatio>0)&&(I.current.unobserve(e),I.current.disconnect(),null!=S&&window.docusaurus.prefetch(S))}))})),I.current.observe(e))},to:S},b&&{isActive:f,activeClassName:h}))}const u=a.forwardRef(b)},11875:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});const o=()=>null},95999:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l,I:()=>s});var o=n(67294);function a(e,t){const n=e.split(/(\{\w+\})/).map(((e,n)=>{if(n%2==1){const n=null==t?void 0:t[e.slice(1,-1)];if(void 0!==n)return n}return e}));return n.some((e=>(0,o.isValidElement)(e)))?n.map(((e,t)=>(0,o.isValidElement)(e)?o.cloneElement(e,{key:t}):e)).filter((e=>""!==e)):n.join("")}var i=n(57529);function r(e){let{id:t,message:n}=e;if(void 0===t&&void 0===n)throw new Error("Docusaurus translation declarations must have at least a translation id or a default translation message");return i[t??n]??n??t}function s(e,t){let{message:n,id:o}=e;return a(r({message:n,id:o}),t)}function l(e){let{children:t,id:n,values:i}=e;if(t&&"string"!=typeof t)throw console.warn("Illegal <Translate> children",t),new Error("The Docusaurus <Translate> component only accept simple string values");const s=r({message:t,id:n});return o.createElement(o.Fragment,null,a(s,i))}},29935:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});const o="default"},13919:(e,t,n)=>{"use strict";function o(e){return/^(?:\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!o(e)}n.d(t,{Z:()=>a,b:()=>o})},44996:(e,t,n)=>{"use strict";n.d(t,{C:()=>i,Z:()=>r});var o=n(52263),a=n(13919);function i(){const{siteConfig:{baseUrl:e,url:t}}=(0,o.Z)();return{withBaseUrl:(n,o)=>function(e,t,n,o){let{forcePrependBaseUrl:i=!1,absolute:r=!1}=void 0===o?{}:o;if(!n||n.startsWith("#")||(0,a.b)(n))return n;if(i)return t+n.replace(/^\//,"");if(n===t.replace(/\/$/,""))return t;const s=n.startsWith(t)?n:t+n.replace(/^\//,"");return r?e+s:s}(t,e,n,o)}}function r(e,t){void 0===t&&(t={});const{withBaseUrl:n}=i();return n(e,t)}},52263:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var o=n(67294),a=n(58940);function i(){return(0,o.useContext)(a._)}},28084:(e,t,n)=>{"use strict";n.d(t,{OD:()=>i,eZ:()=>r});var o=n(52263),a=n(29935);function i(e,t){void 0===t&&(t={});const n=function(){const{globalData:e}=(0,o.Z)();return e}()[e];if(!n&&t.failfast)throw new Error(`Docusaurus plugin global data not found for "${e}" plugin.`);return n}function r(e,t,n){void 0===t&&(t=a.m),void 0===n&&(n={});const o=i(e),r=null==o?void 0:o[t];if(!r&&n.failfast)throw new Error(`Docusaurus plugin global data not found for "${e}" plugin with id "${t}".`);return r}},72389:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var o=n(67294),a=n(98934);function i(){return(0,o.useContext)(a._)}},99670:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});function o(e){const t={};return function e(n,o){Object.entries(n).forEach((n=>{let[a,i]=n;const r=o?`${o}.${a}`:a;var s;"object"==typeof(s=i)&&s&&Object.keys(s).length>0?e(i,r):t[r]=i}))}(e),t}},30226:(e,t,n)=>{"use strict";n.d(t,{_:()=>a,z:()=>i});var o=n(67294);const a=o.createContext(null);function i(e){let{children:t,value:n}=e;const i=o.useContext(a),r=(0,o.useMemo)((()=>function(e){let{parent:t,value:n}=e;if(!t){if(!n)throw new Error("Unexpected: no Docusaurus route context found");if(!("plugin"in n))throw new Error("Unexpected: Docusaurus topmost route context has no `plugin` attribute");return n}const o={...t.data,...null==n?void 0:n.data};return{plugin:t.plugin,data:o}}({parent:i,value:n})),[i,n]);return o.createElement(a.Provider,{value:r},t)}},94104:(e,t,n)=>{"use strict";n.d(t,{Iw:()=>h,gA:()=>p,WS:()=>b,_r:()=>c,Jo:()=>f,zh:()=>d,yW:()=>y,gB:()=>u});var o=n(16550),a=n(28084);const i=e=>e.versions.find((e=>e.isLast));function r(e,t){const n=i(e);return[...e.versions.filter((e=>e!==n)),n].find((e=>!!(0,o.LX)(t,{path:e.path,exact:!1,strict:!1})))}function s(e,t){const n=r(e,t),a=null==n?void 0:n.docs.find((e=>!!(0,o.LX)(t,{path:e.path,exact:!0,strict:!1})));return{activeVersion:n,activeDoc:a,alternateDocVersions:a?function(t){const n={};return e.versions.forEach((e=>{e.docs.forEach((o=>{o.id===t&&(n[e.name]=o)}))})),n}(a.id):{}}}const l={},c=()=>(0,a.OD)("docusaurus-plugin-content-docs")??l,d=e=>(0,a.eZ)("docusaurus-plugin-content-docs",e,{failfast:!0});function p(e){void 0===e&&(e={});const t=c(),{pathname:n}=(0,o.TH)();return function(e,t,n){void 0===n&&(n={});const a=Object.entries(e).sort(((e,t)=>t[1].path.localeCompare(e[1].path))).find((e=>{let[,n]=e;return!!(0,o.LX)(t,{path:n.path,exact:!1,strict:!1})})),i=a?{pluginId:a[0],pluginData:a[1]}:void 0;if(!i&&n.failfast)throw new Error(`Can't find active docs plugin for "${t}" pathname, while it was expected to be found. Maybe you tried to use a docs feature that can only be used on a docs-related page? Existing docs plugin paths are: ${Object.values(e).map((e=>e.path)).join(", ")}`);return i}(t,n,e)}function b(e){void 0===e&&(e={});const t=p(e),{pathname:n}=(0,o.TH)();if(!t)return;return{activePlugin:t,activeVersion:r(t.pluginData,n)}}function u(e){return d(e).versions}function y(e){const t=d(e);return i(t)}function h(e){const t=d(e),{pathname:n}=(0,o.TH)();return s(t,n)}function f(e){const t=d(e),{pathname:n}=(0,o.TH)();return function(e,t){const n=i(e);return{latestDocSuggestion:s(e,t).alternateDocVersions[n.name],latestVersionSuggestion:n}}(t,n)}},18320:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>i});var o=n(74865),a=n.n(o);a().configure({showSpinner:!1});const i={onRouteUpdate(e){let{location:t,previousLocation:n}=e;if(n&&t.pathname!==n.pathname){const e=window.setTimeout((()=>{a().start()}),200);return()=>window.clearTimeout(e)}},onRouteDidUpdate(){a().done()}}},3310:(e,t,n)=>{"use strict";n.r(t);var o=n(87410),a=n(36809);!function(e){const{themeConfig:{prism:t}}=a.default,{additionalLanguages:o}=t;globalThis.Prism=e,o.forEach((e=>{n(6726)(`./prism-${e}`)})),delete globalThis.Prism}(o.Z)},39471:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var o=n(67294);const a="iconExternalLink_nPIU";function i(e){let{width:t=13.5,height:n=13.5}=e;return o.createElement("svg",{width:t,height:n,"aria-hidden":"true",viewBox:"0 0 24 24",className:a},o.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"}))}},40025:(e,t,n)=>{"use strict";n.d(t,{Z:()=>it});var o=n(67294),a=n(86010),i=n(44763),r=n(10833),s=n(55225),l=n(35281),c=n(19727);const d="skipToContent_fXgn";function p(){return o.createElement(s.l,{className:d})}var b=n(86668),u=n(59689),y=n(87462),h=n(95999);function f(e){let{width:t=21,height:n=21,color:a="currentColor",strokeWidth:i=1.2,className:r,...s}=e;return o.createElement("svg",(0,y.Z)({viewBox:"0 0 15 15",width:t,height:n},s),o.createElement("g",{stroke:a,strokeWidth:i},o.createElement("path",{d:"M.75.75l13.5 13.5M14.25.75L.75 14.25"})))}const m="closeButton_CVFx";function g(e){return o.createElement("button",(0,y.Z)({type:"button","aria-label":(0,h.I)({id:"theme.AnnouncementBar.closeButtonAriaLabel",message:"Close",description:"The ARIA label for close button of announcement bar"})},e,{className:(0,a.Z)("clean-btn close",m,e.className)}),o.createElement(f,{width:14,height:14,strokeWidth:3.1}))}const _="content_knG7";function k(e){const{announcementBar:t}=(0,b.L)(),{content:n}=t;return o.createElement("div",(0,y.Z)({},e,{className:(0,a.Z)(_,e.className),dangerouslySetInnerHTML:{__html:n}}))}const v="announcementBar_mb4j",B="announcementBarPlaceholder_vyr4",x="announcementBarClose_gvF7",w="announcementBarContent_xLdY";function q(){const{announcementBar:e}=(0,b.L)(),{isActive:t,close:n}=(0,u.nT)();if(!t)return null;const{backgroundColor:a,textColor:i,isCloseable:r}=e;return o.createElement("div",{className:v,style:{backgroundColor:a,color:i},role:"banner"},r&&o.createElement("div",{className:B}),o.createElement(k,{className:w}),r&&o.createElement(g,{onClick:n,className:x}))}var T=n(93163),E=n(99445),S=n(69800),C=n(76857);function A(e){let{header:t,primaryMenu:n,secondaryMenu:i}=e;const{shown:r}=(0,C.Y)();return o.createElement("div",{className:"navbar-sidebar"},t,o.createElement("div",{className:(0,a.Z)("navbar-sidebar__items",{"navbar-sidebar__items--show-secondary":r})},o.createElement("div",{className:"navbar-sidebar__item menu"},n),o.createElement("div",{className:"navbar-sidebar__item menu"},i)))}var P=n(92949),R=n(72389);function I(e){return o.createElement("svg",(0,y.Z)({viewBox:"0 0 24 24",width:24,height:24},e),o.createElement("path",{fill:"currentColor",d:"M12,9c1.65,0,3,1.35,3,3s-1.35,3-3,3s-3-1.35-3-3S10.35,9,12,9 M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5 S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1 s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0 c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95 c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41 L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41 s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06 c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z"}))}function L(e){return o.createElement("svg",(0,y.Z)({viewBox:"0 0 24 24",width:24,height:24},e),o.createElement("path",{fill:"currentColor",d:"M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z"}))}const N={toggle:"toggle_vylO",toggleButton:"toggleButton_gllP",darkToggleIcon:"darkToggleIcon_wfgR",lightToggleIcon:"lightToggleIcon_pyhR",toggleButtonDisabled:"toggleButtonDisabled_aARS"};function D(e){let{className:t,value:n,onChange:i}=e;const r=(0,R.Z)(),s=(0,h.I)({message:"Switch between dark and light mode (currently {mode})",id:"theme.colorToggle.ariaLabel",description:"The ARIA label for the navbar color mode toggle"},{mode:"dark"===n?(0,h.I)({message:"dark mode",id:"theme.colorToggle.ariaLabel.mode.dark",description:"The name for the dark color mode"}):(0,h.I)({message:"light mode",id:"theme.colorToggle.ariaLabel.mode.light",description:"The name for the light color mode"})});return o.createElement("div",{className:(0,a.Z)(N.toggle,t)},o.createElement("button",{className:(0,a.Z)("clean-btn",N.toggleButton,!r&&N.toggleButtonDisabled),type:"button",onClick:()=>i("dark"===n?"light":"dark"),disabled:!r,title:s,"aria-label":s,"aria-live":"polite"},o.createElement(I,{className:(0,a.Z)(N.toggleIcon,N.lightToggleIcon)}),o.createElement(L,{className:(0,a.Z)(N.toggleIcon,N.darkToggleIcon)})))}const j=o.memo(D);function U(e){let{className:t}=e;const n=(0,b.L)().colorMode.disableSwitch,{colorMode:a,setColorMode:i}=(0,P.I)();return n?null:o.createElement(j,{className:t,value:a,onChange:i})}var Q=n(21327);function O(){return o.createElement(Q.Z,{className:"navbar__brand",imageClassName:"navbar__logo",titleClassName:"navbar__title text--truncate"})}function M(){const e=(0,T.e)();return o.createElement("button",{type:"button","aria-label":(0,h.I)({id:"theme.docs.sidebar.closeSidebarButtonAriaLabel",message:"Close navigation bar",description:"The ARIA label for close button of mobile sidebar"}),className:"clean-btn navbar-sidebar__close",onClick:()=>e.toggle()},o.createElement(f,{color:"var(--ifm-color-emphasis-600)"}))}function F(){return o.createElement("div",{className:"navbar-sidebar__brand"},o.createElement(O,null),o.createElement(U,{className:"margin-right--md"}),o.createElement(M,null))}var z=n(39960),H=n(44996),Z=n(13919),G=n(98022),$=n(39471);function K(e){let{activeBasePath:t,activeBaseRegex:n,to:a,href:i,label:r,html:s,isDropdownLink:l,prependBaseUrlToHref:c,...d}=e;const p=(0,H.Z)(a),b=(0,H.Z)(t),u=(0,H.Z)(i,{forcePrependBaseUrl:!0}),h=r&&i&&!(0,Z.Z)(i),f=s?{dangerouslySetInnerHTML:{__html:s}}:{children:o.createElement(o.Fragment,null,r,h&&o.createElement($.Z,l&&{width:12,height:12}))};return i?o.createElement(z.Z,(0,y.Z)({href:c?u:i},d,f)):o.createElement(z.Z,(0,y.Z)({to:p,isNavLink:!0},(t||n)&&{isActive:(e,t)=>n?(0,G.F)(n,t.pathname):t.pathname.startsWith(b)},d,f))}function V(e){let{className:t,isDropdownItem:n=!1,...i}=e;const r=o.createElement(K,(0,y.Z)({className:(0,a.Z)(n?"dropdown__link":"navbar__item navbar__link",t),isDropdownLink:n},i));return n?o.createElement("li",null,r):r}function W(e){let{className:t,isDropdownItem:n,...i}=e;return o.createElement("li",{className:"menu__list-item"},o.createElement(K,(0,y.Z)({className:(0,a.Z)("menu__link",t)},i)))}function J(e){let{mobile:t=!1,position:n,...a}=e;const i=t?W:V;return o.createElement(i,(0,y.Z)({},a,{activeClassName:a.activeClassName??(t?"menu__link--active":"navbar__link--active")}))}var Y=n(86043),X=n(48596),ee=n(51753);function te(e,t){return e.some((e=>function(e,t){return!!(0,X.Mg)(e.to,t)||!!(0,G.F)(e.activeBaseRegex,t)||!(!e.activeBasePath||!t.startsWith(e.activeBasePath))}(e,t)))}function ne(e){let{items:t,position:n,className:i,onClick:r,...s}=e;const l=(0,o.useRef)(null),[c,d]=(0,o.useState)(!1);return(0,o.useEffect)((()=>{const e=e=>{l.current&&!l.current.contains(e.target)&&d(!1)};return document.addEventListener("mousedown",e),document.addEventListener("touchstart",e),()=>{document.removeEventListener("mousedown",e),document.removeEventListener("touchstart",e)}}),[l]),o.createElement("div",{ref:l,className:(0,a.Z)("navbar__item","dropdown","dropdown--hoverable",{"dropdown--right":"right"===n,"dropdown--show":c})},o.createElement(K,(0,y.Z)({"aria-haspopup":"true","aria-expanded":c,role:"button",href:s.to?void 0:"#",className:(0,a.Z)("navbar__link",i)},s,{onClick:s.to?void 0:e=>e.preventDefault(),onKeyDown:e=>{"Enter"===e.key&&(e.preventDefault(),d(!c))}}),s.children??s.label),o.createElement("ul",{className:"dropdown__menu"},t.map(((e,n)=>o.createElement(ge,(0,y.Z)({isDropdownItem:!0,onKeyDown:e=>{if(n===t.length-1&&"Tab"===e.key){e.preventDefault(),d(!1);const t=l.current.nextElementSibling;if(t){(t instanceof HTMLAnchorElement?t:t.querySelector("a")).focus()}}},activeClassName:"dropdown__link--active"},e,{key:n}))))))}function oe(e){let{items:t,className:n,position:i,onClick:r,...s}=e;const l=(0,ee.b)(),c=te(t,l),{collapsed:d,toggleCollapsed:p,setCollapsed:b}=(0,Y.u)({initialState:()=>!c});return(0,o.useEffect)((()=>{c&&b(!c)}),[l,c,b]),o.createElement("li",{className:(0,a.Z)("menu__list-item",{"menu__list-item--collapsed":d})},o.createElement(K,(0,y.Z)({role:"button",className:(0,a.Z)("menu__link menu__link--sublist menu__link--sublist-caret",n)},s,{onClick:e=>{e.preventDefault(),p()}}),s.children??s.label),o.createElement(Y.z,{lazy:!0,as:"ul",className:"menu__list",collapsed:d},t.map(((e,t)=>o.createElement(ge,(0,y.Z)({mobile:!0,isDropdownItem:!0,onClick:r,activeClassName:"menu__link--active"},e,{key:t}))))))}function ae(e){let{mobile:t=!1,...n}=e;const a=t?oe:ne;return o.createElement(a,n)}var ie=n(52263),re=n(94711),se=n(16550);function le(e){let{width:t=20,height:n=20,...a}=e;return o.createElement("svg",(0,y.Z)({viewBox:"0 0 24 24",width:t,height:n,"aria-hidden":!0},a),o.createElement("path",{fill:"currentColor",d:"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z"}))}const ce="iconLanguage_nlXk";var de=n(11875);const pe="searchBox_ZlJk";function be(e){let{children:t,className:n}=e;return o.createElement("div",{className:(0,a.Z)(n,pe)},t)}var ue=n(94104),ye=n(53438);var he=n(60373);const fe=e=>e.docs.find((t=>t.id===e.mainDocId));const me={default:J,localeDropdown:function(e){let{mobile:t,dropdownItemsBefore:n,dropdownItemsAfter:a,...i}=e;const{i18n:{currentLocale:r,locales:s,localeConfigs:l}}=(0,ie.Z)(),c=(0,re.l)(),{search:d,hash:p}=(0,se.TH)(),b=[...n,...s.map((e=>{const n=`${`pathname://${c.createUrl({locale:e,fullyQualified:!1})}`}${d}${p}`;return{label:l[e].label,lang:l[e].htmlLang,to:n,target:"_self",autoAddBaseUrl:!1,className:e===r?t?"menu__link--active":"dropdown__link--active":""}})),...a],u=t?(0,h.I)({message:"Languages",id:"theme.navbar.mobileLanguageDropdown.label",description:"The label for the mobile language switcher dropdown"}):l[r].label;return o.createElement(ae,(0,y.Z)({},i,{mobile:t,label:o.createElement(o.Fragment,null,o.createElement(le,{className:ce}),u),items:b}))},search:function(e){let{mobile:t,className:n}=e;return t?null:o.createElement(be,{className:n},o.createElement(de.Z,null))},dropdown:ae,html:function(e){let{value:t,className:n,mobile:i=!1,isDropdownItem:r=!1}=e;const s=r?"li":"div";return o.createElement(s,{className:(0,a.Z)({navbar__item:!i&&!r,"menu__list-item":i},n),dangerouslySetInnerHTML:{__html:t}})},doc:function(e){let{docId:t,label:n,docsPluginId:a,...i}=e;const{activeDoc:r}=(0,ue.Iw)(a),s=(0,ye.vY)(t,a);return null===s?null:o.createElement(J,(0,y.Z)({exact:!0},i,{isActive:()=>(null==r?void 0:r.path)===s.path||!(null==r||!r.sidebar)&&r.sidebar===s.sidebar,label:n??s.id,to:s.path}))},docSidebar:function(e){let{sidebarId:t,label:n,docsPluginId:a,...i}=e;const{activeDoc:r}=(0,ue.Iw)(a),s=(0,ye.oz)(t,a).link;if(!s)throw new Error(`DocSidebarNavbarItem: Sidebar with ID "${t}" doesn't have anything to be linked to.`);return o.createElement(J,(0,y.Z)({exact:!0},i,{isActive:()=>(null==r?void 0:r.sidebar)===t,label:n??s.label,to:s.path}))},docsVersion:function(e){let{label:t,to:n,docsPluginId:a,...i}=e;const r=(0,ye.lO)(a)[0],s=t??r.label,l=n??(e=>e.docs.find((t=>t.id===e.mainDocId)))(r).path;return o.createElement(J,(0,y.Z)({},i,{label:s,to:l}))},docsVersionDropdown:function(e){let{mobile:t,docsPluginId:n,dropdownActiveClassDisabled:a,dropdownItemsBefore:i,dropdownItemsAfter:r,...s}=e;const{search:l,hash:c}=(0,se.TH)(),d=(0,ue.Iw)(n),p=(0,ue.gB)(n),{savePreferredVersionName:b}=(0,he.J)(n),u=[...i,...p.map((e=>{const t=d.alternateDocVersions[e.name]??fe(e);return{label:e.label,to:`${t.path}${l}${c}`,isActive:()=>e===d.activeVersion,onClick:()=>b(e.name)}})),...r],f=(0,ye.lO)(n)[0],m=t&&u.length>1?(0,h.I)({id:"theme.navbar.mobileVersionsDropdown.label",message:"Versions",description:"The label for the navbar versions dropdown on mobile view"}):f.label,g=t&&u.length>1?void 0:fe(f).path;return u.length<=1?o.createElement(J,(0,y.Z)({},s,{mobile:t,label:m,to:g,isActive:a?()=>!1:void 0})):o.createElement(ae,(0,y.Z)({},s,{mobile:t,label:m,to:g,items:u,isActive:a?()=>!1:void 0}))}};function ge(e){let{type:t,...n}=e;const a=function(e,t){return e&&"default"!==e?e:"items"in t?"dropdown":"default"}(t,n),i=me[a];if(!i)throw new Error(`No NavbarItem component found for type "${t}".`);return o.createElement(i,n)}function _e(){const e=(0,T.e)(),t=(0,b.L)().navbar.items;return o.createElement("ul",{className:"menu__list"},t.map(((t,n)=>o.createElement(ge,(0,y.Z)({mobile:!0},t,{onClick:()=>e.toggle(),key:n})))))}function ke(e){return o.createElement("button",(0,y.Z)({},e,{type:"button",className:"clean-btn navbar-sidebar__back"}),o.createElement(h.Z,{id:"theme.navbar.mobileSidebarSecondaryMenu.backButtonLabel",description:"The label of the back button to return to main menu, inside the mobile navbar sidebar secondary menu (notably used to display the docs sidebar)"},"\u2190 Back to main menu"))}function ve(){const e=0===(0,b.L)().navbar.items.length,t=(0,C.Y)();return o.createElement(o.Fragment,null,!e&&o.createElement(ke,{onClick:()=>t.hide()}),t.content)}function Be(){const e=(0,T.e)();return(0,S.N)(e.shown),e.shouldRender?o.createElement(A,{header:o.createElement(F,null),primaryMenu:o.createElement(_e,null),secondaryMenu:o.createElement(ve,null)}):null}const xe="navbarHideable_m1mJ",we="navbarHidden_jGov";function qe(e){return o.createElement("div",(0,y.Z)({role:"presentation"},e,{className:(0,a.Z)("navbar-sidebar__backdrop",e.className)}))}function Te(e){let{children:t}=e;const{navbar:{hideOnScroll:n,style:i}}=(0,b.L)(),r=(0,T.e)(),{navbarRef:s,isNavbarVisible:l}=(0,E.c)(n);return o.createElement("nav",{ref:s,className:(0,a.Z)("navbar","navbar--fixed-top",n&&[xe,!l&&we],{"navbar--dark":"dark"===i,"navbar--primary":"primary"===i,"navbar-sidebar--show":r.shown})},t,o.createElement(qe,{onClick:r.toggle}),o.createElement(Be,null))}var Ee=n(58978);function Se(e){let{width:t=30,height:n=30,className:a,...i}=e;return o.createElement("svg",(0,y.Z)({className:a,width:t,height:n,viewBox:"0 0 30 30","aria-hidden":"true"},i),o.createElement("path",{stroke:"currentColor",strokeLinecap:"round",strokeMiterlimit:"10",strokeWidth:"2",d:"M4 7h22M4 15h22M4 23h22"}))}function Ce(){const{toggle:e,shown:t}=(0,T.e)();return o.createElement("button",{onClick:e,"aria-label":(0,h.I)({id:"theme.docs.sidebar.toggleSidebarButtonAriaLabel",message:"Toggle navigation bar",description:"The ARIA label for hamburger menu button of mobile navigation"}),"aria-expanded":t,className:"navbar__toggle clean-btn",type:"button"},o.createElement(Se,null))}const Ae="colorModeToggle_DEke";function Pe(e){let{items:t}=e;return o.createElement(o.Fragment,null,t.map(((e,t)=>o.createElement(ge,(0,y.Z)({},e,{key:t})))))}function Re(e){let{left:t,right:n}=e;return o.createElement("div",{className:"navbar__inner"},o.createElement("div",{className:"navbar__items"},t),o.createElement("div",{className:"navbar__items navbar__items--right"},n))}function Ie(){const e=(0,T.e)(),t=(0,b.L)().navbar.items,[n,a]=(0,Ee.A)(t),i=t.find((e=>"search"===e.type));return o.createElement(Re,{left:o.createElement(o.Fragment,null,!e.disabled&&o.createElement(Ce,null),o.createElement(O,null),o.createElement(Pe,{items:n})),right:o.createElement(o.Fragment,null,o.createElement(Pe,{items:a}),o.createElement(U,{className:Ae}),!i&&o.createElement(be,null,o.createElement(de.Z,null)))})}function Le(){return o.createElement(Te,null,o.createElement(Ie,null))}var Ne=n(42489);function De(e){let{item:t}=e;const{to:n,href:a,label:i,prependBaseUrlToHref:r,...s}=t,l=(0,H.Z)(n),c=(0,H.Z)(a,{forcePrependBaseUrl:!0});return o.createElement(z.Z,(0,y.Z)({className:"footer__link-item"},a?{href:r?c:a}:{to:l},s),i,a&&!(0,Z.Z)(a)&&o.createElement($.Z,null))}function je(e){let{item:t}=e;return t.html?o.createElement("li",{className:"footer__item",dangerouslySetInnerHTML:{__html:t.html}}):o.createElement("li",{key:t.href??t.to,className:"footer__item"},o.createElement(De,{item:t}))}function Ue(e){let{column:t}=e;return o.createElement("div",{className:"col footer__col"},o.createElement("div",{className:"footer__title"},t.title),o.createElement("ul",{className:"footer__items clean-list"},t.items.map(((e,t)=>o.createElement(je,{key:t,item:e})))))}function Qe(e){let{columns:t}=e;return o.createElement("div",{className:"row footer__links"},t.map(((e,t)=>o.createElement(Ue,{key:t,column:e}))))}function Oe(){return o.createElement("span",{className:"footer__link-separator"},"\xb7")}function Me(e){let{item:t}=e;return t.html?o.createElement("span",{className:"footer__link-item",dangerouslySetInnerHTML:{__html:t.html}}):o.createElement(De,{item:t})}function Fe(e){let{links:t}=e;return o.createElement("div",{className:"footer__links text--center"},o.createElement("div",{className:"footer__links"},t.map(((e,n)=>o.createElement(o.Fragment,{key:n},o.createElement(Me,{item:e}),t.length!==n+1&&o.createElement(Oe,null))))))}function ze(e){let{links:t}=e;return(0,Ne.a)(t)?o.createElement(Qe,{columns:t}):o.createElement(Fe,{links:t})}var He=n(50941);const Ze="footerLogoLink_BH7S";function Ge(e){let{logo:t}=e;const{withBaseUrl:n}=(0,H.C)(),i={light:n(t.src),dark:n(t.srcDark??t.src)};return o.createElement(He.Z,{className:(0,a.Z)("footer__logo",t.className),alt:t.alt,sources:i,width:t.width,height:t.height,style:t.style})}function $e(e){let{logo:t}=e;return t.href?o.createElement(z.Z,{href:t.href,className:Ze,target:t.target},o.createElement(Ge,{logo:t})):o.createElement(Ge,{logo:t})}function Ke(e){let{copyright:t}=e;return o.createElement("div",{className:"footer__copyright",dangerouslySetInnerHTML:{__html:t}})}function Ve(e){let{style:t,links:n,logo:i,copyright:r}=e;return o.createElement("footer",{className:(0,a.Z)("footer",{"footer--dark":"dark"===t})},o.createElement("div",{className:"container container-fluid"},n,(i||r)&&o.createElement("div",{className:"footer__bottom text--center"},i&&o.createElement("div",{className:"margin-bottom--sm"},i),r)))}function We(){const{footer:e}=(0,b.L)();if(!e)return null;const{copyright:t,links:n,logo:a,style:i}=e;return o.createElement(Ve,{style:i,links:n&&n.length>0&&o.createElement(ze,{links:n}),logo:a&&o.createElement($e,{logo:a}),copyright:t&&o.createElement(Ke,{copyright:t})})}const Je=o.memo(We);var Ye=n(902),Xe=n(7094),et=n(12466);const tt=(0,Ye.Qc)([P.S,u.pl,Xe.z,et.OC,he.L5,r.VC,Ee.V]);function nt(e){let{children:t}=e;return o.createElement(tt,null,t)}function ot(e){let{error:t,tryAgain:n}=e;return o.createElement("main",{className:"container margin-vert--xl"},o.createElement("div",{className:"row"},o.createElement("div",{className:"col col--6 col--offset-3"},o.createElement("h1",{className:"hero__title"},o.createElement(h.Z,{id:"theme.ErrorPageContent.title",description:"The title of the fallback page when the page crashed"},"This page crashed.")),o.createElement("p",null,t.message),o.createElement("div",null,o.createElement("button",{type:"button",onClick:n},o.createElement(h.Z,{id:"theme.ErrorPageContent.tryAgain",description:"The label of the button to try again when the page crashed"},"Try again"))))))}const at="mainWrapper_z2l0";function it(e){const{children:t,noFooter:n,wrapperClassName:d,title:b,description:u}=e;return(0,c.t)(),o.createElement(nt,null,o.createElement(r.d,{title:b,description:u}),o.createElement(p,null),o.createElement(q,null),o.createElement(Le,null),o.createElement("div",{id:s.u,className:(0,a.Z)(l.k.wrapper.main,at,d)},o.createElement(i.Z,{fallback:e=>o.createElement(ot,e)},t)),!n&&o.createElement(Je,null))}},21327:(e,t,n)=>{"use strict";n.d(t,{Z:()=>p});var o=n(87462),a=n(67294),i=n(39960),r=n(44996),s=n(52263),l=n(86668),c=n(50941);function d(e){let{logo:t,alt:n,imageClassName:o}=e;const i={light:(0,r.Z)(t.src),dark:(0,r.Z)(t.srcDark||t.src)},s=a.createElement(c.Z,{className:t.className,sources:i,height:t.height,width:t.width,alt:n,style:t.style});return o?a.createElement("div",{className:o},s):s}function p(e){const{siteConfig:{title:t}}=(0,s.Z)(),{navbar:{title:n,logo:c}}=(0,l.L)(),{imageClassName:p,titleClassName:b,...u}=e,y=(0,r.Z)((null==c?void 0:c.href)||"/"),h=n?"":t,f=(null==c?void 0:c.alt)??h;return a.createElement(i.Z,(0,o.Z)({to:y},u,(null==c?void 0:c.target)&&{target:c.target}),c&&a.createElement(d,{logo:c,alt:f,imageClassName:p}),null!=n&&a.createElement("b",{className:b},n))}},90197:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var o=n(67294),a=n(35742);function i(e){let{locale:t,version:n,tag:i}=e;const r=t;return o.createElement(a.Z,null,t&&o.createElement("meta",{name:"docusaurus_locale",content:t}),n&&o.createElement("meta",{name:"docusaurus_version",content:n}),i&&o.createElement("meta",{name:"docusaurus_tag",content:i}),r&&o.createElement("meta",{name:"docsearch:language",content:r}),n&&o.createElement("meta",{name:"docsearch:version",content:n}),i&&o.createElement("meta",{name:"docsearch:docusaurus_tag",content:i}))}},50941:(e,t,n)=>{"use strict";n.d(t,{Z:()=>c});var o=n(87462),a=n(67294),i=n(86010),r=n(72389),s=n(92949);const l={themedImage:"themedImage_ToTc","themedImage--light":"themedImage--light_HNdA","themedImage--dark":"themedImage--dark_i4oU"};function c(e){const t=(0,r.Z)(),{colorMode:n}=(0,s.I)(),{sources:c,className:d,alt:p,...b}=e,u=t?"dark"===n?["dark"]:["light"]:["light","dark"];return a.createElement(a.Fragment,null,u.map((e=>a.createElement("img",(0,o.Z)({key:e,src:c[e],alt:p,className:(0,i.Z)(l.themedImage,l[`themedImage--${e}`],d)},b)))))}},86043:(e,t,n)=>{"use strict";n.d(t,{u:()=>r,z:()=>y});var o=n(87462),a=n(67294),i=n(10412);function r(e){let{initialState:t}=e;const[n,o]=(0,a.useState)(t??!1),i=(0,a.useCallback)((()=>{o((e=>!e))}),[]);return{collapsed:n,setCollapsed:o,toggleCollapsed:i}}const s={display:"none",overflow:"hidden",height:"0px"},l={display:"block",overflow:"visible",height:"auto"};function c(e,t){const n=t?s:l;e.style.display=n.display,e.style.overflow=n.overflow,e.style.height=n.height}function d(e){let{collapsibleRef:t,collapsed:n,animation:o}=e;const i=(0,a.useRef)(!1);(0,a.useEffect)((()=>{const e=t.current;function a(){const t=e.scrollHeight,n=(null==o?void 0:o.duration)??function(e){const t=e/36;return Math.round(10*(4+15*t**.25+t/5))}(t);return{transition:`height ${n}ms ${(null==o?void 0:o.easing)??"ease-in-out"}`,height:`${t}px`}}function r(){const t=a();e.style.transition=t.transition,e.style.height=t.height}if(!i.current)return c(e,n),void(i.current=!0);return e.style.willChange="height",function(){const t=requestAnimationFrame((()=>{n?(r(),requestAnimationFrame((()=>{e.style.height=s.height,e.style.overflow=s.overflow}))):(e.style.display="block",requestAnimationFrame((()=>{r()})))}));return()=>cancelAnimationFrame(t)}()}),[t,n,o])}function p(e){if(!i.default.canUseDOM)return e?s:l}function b(e){let{as:t="div",collapsed:n,children:o,animation:i,onCollapseTransitionEnd:r,className:s,disableSSRStyle:l}=e;const b=(0,a.useRef)(null);return d({collapsibleRef:b,collapsed:n,animation:i}),a.createElement(t,{ref:b,style:l?void 0:p(n),onTransitionEnd:e=>{"height"===e.propertyName&&(c(b.current,n),null==r||r(n))},className:s},o)}function u(e){let{collapsed:t,...n}=e;const[i,r]=(0,a.useState)(!t),[s,l]=(0,a.useState)(t);return(0,a.useLayoutEffect)((()=>{t||r(!0)}),[t]),(0,a.useLayoutEffect)((()=>{i&&l(t)}),[i,t]),i?a.createElement(b,(0,o.Z)({},n,{collapsed:s})):null}function y(e){let{lazy:t,...n}=e;const o=t?u:b;return a.createElement(o,n)}},59689:(e,t,n)=>{"use strict";n.d(t,{nT:()=>y,pl:()=>u});var o=n(67294),a=n(72389),i=n(50012),r=n(902),s=n(86668);const l=(0,i.W)("docusaurus.announcement.dismiss"),c=(0,i.W)("docusaurus.announcement.id"),d=()=>"true"===l.get(),p=e=>l.set(String(e)),b=o.createContext(null);function u(e){let{children:t}=e;const n=function(){const{announcementBar:e}=(0,s.L)(),t=(0,a.Z)(),[n,i]=(0,o.useState)((()=>!!t&&d()));(0,o.useEffect)((()=>{i(d())}),[]);const r=(0,o.useCallback)((()=>{p(!0),i(!0)}),[]);return(0,o.useEffect)((()=>{if(!e)return;const{id:t}=e;let n=c.get();"annoucement-bar"===n&&(n="announcement-bar");const o=t!==n;c.set(t),o&&p(!1),!o&&d()||i(!1)}),[e]),(0,o.useMemo)((()=>({isActive:!!e&&!n,close:r})),[e,n,r])}();return o.createElement(b.Provider,{value:n},t)}function y(){const e=(0,o.useContext)(b);if(!e)throw new r.i6("AnnouncementBarProvider");return e}},92949:(e,t,n)=>{"use strict";n.d(t,{I:()=>f,S:()=>h});var o=n(67294),a=n(10412),i=n(902),r=n(50012),s=n(86668);const l=o.createContext(void 0),c="theme",d=(0,r.W)(c),p="light",b="dark",u=e=>e===b?b:p;function y(){const{colorMode:{defaultMode:e,disableSwitch:t,respectPrefersColorScheme:n}}=(0,s.L)(),[i,r]=(0,o.useState)((e=>a.default.canUseDOM?u(document.documentElement.getAttribute("data-theme")):u(e))(e));(0,o.useEffect)((()=>{t&&d.del()}),[t]);const l=(0,o.useCallback)((function(t,o){void 0===o&&(o={});const{persist:a=!0}=o;t?(r(t),a&&(e=>{d.set(u(e))})(t)):(r(n?window.matchMedia("(prefers-color-scheme: dark)").matches?b:p:e),d.del())}),[n,e]);(0,o.useEffect)((()=>{document.documentElement.setAttribute("data-theme",u(i))}),[i]),(0,o.useEffect)((()=>{if(t)return;const e=e=>{if(e.key!==c)return;const t=d.get();null!==t&&l(u(t))};return window.addEventListener("storage",e),()=>window.removeEventListener("storage",e)}),[t,l]);const y=(0,o.useRef)(!1);return(0,o.useEffect)((()=>{if(t&&!n)return;const e=window.matchMedia("(prefers-color-scheme: dark)"),o=()=>{window.matchMedia("print").matches||y.current?y.current=window.matchMedia("print").matches:l(null)};return e.addListener(o),()=>e.removeListener(o)}),[l,t,n]),(0,o.useMemo)((()=>({colorMode:i,setColorMode:l,get isDarkTheme(){return i===b},setLightTheme(){l(p)},setDarkTheme(){l(b)}})),[i,l])}function h(e){let{children:t}=e;const n=y();return o.createElement(l.Provider,{value:n},t)}function f(){const e=(0,o.useContext)(l);if(null==e)throw new i.i6("ColorModeProvider","Please see https://docusaurus.io/docs/api/themes/configuration#use-color-mode.");return e}},60373:(e,t,n)=>{"use strict";n.d(t,{J:()=>_,L5:()=>m,Oh:()=>k});var o=n(67294),a=n(94104),i=n(29935),r=n(86668),s=n(53438),l=n(902),c=n(50012);const d=e=>`docs-preferred-version-${e}`,p=(e,t,n)=>{(0,c.W)(d(e),{persistence:t}).set(n)},b=(e,t)=>(0,c.W)(d(e),{persistence:t}).get(),u=(e,t)=>{(0,c.W)(d(e),{persistence:t}).del()};const y=o.createContext(null);function h(){const e=(0,a._r)(),t=(0,r.L)().docs.versionPersistence,n=(0,o.useMemo)((()=>Object.keys(e)),[e]),[i,s]=(0,o.useState)((()=>(e=>Object.fromEntries(e.map((e=>[e,{preferredVersionName:null}]))))(n)));(0,o.useEffect)((()=>{s(function(e){let{pluginIds:t,versionPersistence:n,allDocsData:o}=e;function a(e){const t=b(e,n);return o[e].versions.some((e=>e.name===t))?{preferredVersionName:t}:(u(e,n),{preferredVersionName:null})}return Object.fromEntries(t.map((e=>[e,a(e)])))}({allDocsData:e,versionPersistence:t,pluginIds:n}))}),[e,t,n]);return[i,(0,o.useMemo)((()=>({savePreferredVersion:function(e,n){p(e,t,n),s((t=>({...t,[e]:{preferredVersionName:n}})))}})),[t])]}function f(e){let{children:t}=e;const n=h();return o.createElement(y.Provider,{value:n},t)}function m(e){let{children:t}=e;return s.cE?o.createElement(f,null,t):o.createElement(o.Fragment,null,t)}function g(){const e=(0,o.useContext)(y);if(!e)throw new l.i6("DocsPreferredVersionContextProvider");return e}function _(e){void 0===e&&(e=i.m);const t=(0,a.zh)(e),[n,r]=g(),{preferredVersionName:s}=n[e];return{preferredVersion:t.versions.find((e=>e.name===s))??null,savePreferredVersionName:(0,o.useCallback)((t=>{r.savePreferredVersion(e,t)}),[r,e])}}function k(){const e=(0,a._r)(),[t]=g();function n(n){const o=e[n],{preferredVersionName:a}=t[n];return o.versions.find((e=>e.name===a))??null}const o=Object.keys(e);return Object.fromEntries(o.map((e=>[e,n(e)])))}},1116:(e,t,n)=>{"use strict";n.d(t,{V:()=>l,b:()=>s});var o=n(67294),a=n(902);const i=Symbol("EmptyContext"),r=o.createContext(i);function s(e){let{children:t,name:n,items:a}=e;const i=(0,o.useMemo)((()=>n&&a?{name:n,items:a}:null),[n,a]);return o.createElement(r.Provider,{value:i},t)}function l(){const e=(0,o.useContext)(r);if(e===i)throw new a.i6("DocsSidebarProvider");return e}},74477:(e,t,n)=>{"use strict";n.d(t,{E:()=>s,q:()=>r});var o=n(67294),a=n(902);const i=o.createContext(null);function r(e){let{children:t,version:n}=e;return o.createElement(i.Provider,{value:n},t)}function s(){const e=(0,o.useContext)(i);if(null===e)throw new a.i6("DocsVersionProvider");return e}},93163:(e,t,n)=>{"use strict";n.d(t,{M:()=>p,e:()=>b});var o=n(67294),a=n(13102),i=n(87524),r=n(91980),s=n(86668),l=n(902);const c=o.createContext(void 0);function d(){const e=function(){const e=(0,a.HY)(),{items:t}=(0,s.L)().navbar;return 0===t.length&&!e.component}(),t=(0,i.i)(),n=!e&&"mobile"===t,[l,c]=(0,o.useState)(!1);(0,r.R)((()=>{if(l)return c(!1),!1}));const d=(0,o.useCallback)((()=>{c((e=>!e))}),[]);return(0,o.useEffect)((()=>{"desktop"===t&&c(!1)}),[t]),(0,o.useMemo)((()=>({disabled:e,shouldRender:n,toggle:d,shown:l})),[e,n,d,l])}function p(e){let{children:t}=e;const n=d();return o.createElement(c.Provider,{value:n},t)}function b(){const e=o.useContext(c);if(void 0===e)throw new l.i6("NavbarMobileSidebarProvider");return e}},13102:(e,t,n)=>{"use strict";n.d(t,{HY:()=>s,Zo:()=>l,n2:()=>r});var o=n(67294),a=n(902);const i=o.createContext(null);function r(e){let{children:t}=e;const n=(0,o.useState)({component:null,props:null});return o.createElement(i.Provider,{value:n},t)}function s(){const e=(0,o.useContext)(i);if(!e)throw new a.i6("NavbarSecondaryMenuContentProvider");return e[0]}function l(e){let{component:t,props:n}=e;const r=(0,o.useContext)(i);if(!r)throw new a.i6("NavbarSecondaryMenuContentProvider");const[,s]=r,l=(0,a.Ql)(n);return(0,o.useEffect)((()=>{s({component:t,props:l})}),[s,t,l]),(0,o.useEffect)((()=>()=>s({component:null,props:null})),[s]),null}},76857:(e,t,n)=>{"use strict";n.d(t,{P:()=>l,Y:()=>d});var o=n(67294),a=n(902),i=n(93163),r=n(13102);const s=o.createContext(null);function l(e){let{children:t}=e;const n=function(){const e=(0,i.e)(),t=(0,r.HY)(),[n,s]=(0,o.useState)(!1),l=null!==t.component,c=(0,a.D9)(l);return(0,o.useEffect)((()=>{l&&!c&&s(!0)}),[l,c]),(0,o.useEffect)((()=>{l?e.shown||s(!0):s(!1)}),[e.shown,l]),(0,o.useMemo)((()=>[n,s]),[n])}();return o.createElement(s.Provider,{value:n},t)}function c(e){if(e.component){const t=e.component;return o.createElement(t,e.props)}}function d(){const e=(0,o.useContext)(s);if(!e)throw new a.i6("NavbarSecondaryMenuDisplayProvider");const[t,n]=e,i=(0,o.useCallback)((()=>n(!1)),[n]),l=(0,r.HY)();return(0,o.useMemo)((()=>({shown:t,hide:i,content:c(l)})),[i,l,t])}},7094:(e,t,n)=>{"use strict";n.d(t,{U:()=>c,z:()=>l});var o=n(67294),a=n(50012),i=n(902);const r="docusaurus.tab.",s=o.createContext(void 0);function l(e){let{children:t}=e;const n=function(){const[e,t]=(0,o.useState)({}),n=(0,o.useCallback)(((e,t)=>{(0,a.W)(`docusaurus.tab.${e}`).set(t)}),[]);(0,o.useEffect)((()=>{try{const e={};(0,a._)().forEach((t=>{if(t.startsWith(r)){const n=t.substring(r.length);e[n]=(0,a.W)(t).get()}})),t(e)}catch(e){console.error(e)}}),[]);const i=(0,o.useCallback)(((e,o)=>{t((t=>({...t,[e]:o}))),n(e,o)}),[n]);return(0,o.useMemo)((()=>({tabGroupChoices:e,setTabGroupChoices:i})),[e,i])}();return o.createElement(s.Provider,{value:n},t)}function c(){const e=(0,o.useContext)(s);if(null==e)throw new i.i6("TabGroupChoiceProvider");return e}},99445:(e,t,n)=>{"use strict";n.d(t,{c:()=>r});var o=n(67294),a=n(85936),i=n(12466);function r(e){const[t,n]=(0,o.useState)(e),r=(0,o.useRef)(!1),s=(0,o.useRef)(0),l=(0,o.useCallback)((e=>{null!==e&&(s.current=e.getBoundingClientRect().height)}),[]);return(0,i.RF)(((t,o)=>{let{scrollY:a}=t;if(!e)return;if(a<s.current)return void n(!0);if(r.current)return void(r.current=!1);const i=null==o?void 0:o.scrollY,l=document.documentElement.scrollHeight-s.current,c=window.innerHeight;i&&a>=i?n(!1):a+c<l&&n(!0)})),(0,a.S)((t=>{if(!e)return;const o=t.location.hash;if(o?document.getElementById(o.substring(1)):void 0)return r.current=!0,void n(!1);n(!0)})),{navbarRef:l,isNavbarVisible:t}}},19727:(e,t,n)=>{"use strict";n.d(t,{h:()=>a,t:()=>i});var o=n(67294);const a="navigation-with-keyboard";function i(){(0,o.useEffect)((()=>{function e(e){"keydown"===e.type&&"Tab"===e.key&&document.body.classList.add(a),"mousedown"===e.type&&document.body.classList.remove(a)}return document.addEventListener("keydown",e),document.addEventListener("mousedown",e),()=>{document.body.classList.remove(a),document.removeEventListener("keydown",e),document.removeEventListener("mousedown",e)}}),[])}},69800:(e,t,n)=>{"use strict";n.d(t,{N:()=>a});var o=n(67294);function a(e){void 0===e&&(e=!0),(0,o.useEffect)((()=>(document.body.style.overflow=e?"hidden":"visible",()=>{document.body.style.overflow="visible"})),[e])}},87524:(e,t,n)=>{"use strict";n.d(t,{i:()=>c});var o=n(67294),a=n(10412);const i="desktop",r="mobile",s="ssr";function l(){return a.default.canUseDOM?window.innerWidth>996?i:r:s}function c(){const[e,t]=(0,o.useState)((()=>l()));return(0,o.useEffect)((()=>{function e(){t(l())}return window.addEventListener("resize",e),()=>{window.removeEventListener("resize",e),clearTimeout(undefined)}}),[]),e}},35281:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});const o={page:{blogListPage:"blog-list-page",blogPostPage:"blog-post-page",blogTagsListPage:"blog-tags-list-page",blogTagPostListPage:"blog-tags-post-list-page",docsDocPage:"docs-doc-page",docsTagsListPage:"docs-tags-list-page",docsTagDocListPage:"docs-tags-doc-list-page",mdxPage:"mdx-page"},wrapper:{main:"main-wrapper",blogPages:"blog-wrapper",docsPages:"docs-wrapper",mdxPages:"mdx-wrapper"},common:{editThisPage:"theme-edit-this-page",lastUpdated:"theme-last-updated",backToTopButton:"theme-back-to-top-button",codeBlock:"theme-code-block",admonition:"theme-admonition",admonitionType:e=>`theme-admonition-${e}`},layout:{},docs:{docVersionBanner:"theme-doc-version-banner",docVersionBadge:"theme-doc-version-badge",docBreadcrumbs:"theme-doc-breadcrumbs",docMarkdown:"theme-doc-markdown",docTocMobile:"theme-doc-toc-mobile",docTocDesktop:"theme-doc-toc-desktop",docFooter:"theme-doc-footer",docFooterTagsRow:"theme-doc-footer-tags-row",docFooterEditMetaRow:"theme-doc-footer-edit-meta-row",docSidebarContainer:"theme-doc-sidebar-container",docSidebarMenu:"theme-doc-sidebar-menu",docSidebarItemCategory:"theme-doc-sidebar-item-category",docSidebarItemLink:"theme-doc-sidebar-item-link",docSidebarItemCategoryLevel:e=>`theme-doc-sidebar-item-category-level-${e}`,docSidebarItemLinkLevel:e=>`theme-doc-sidebar-item-link-level-${e}`},blog:{}}},53438:(e,t,n)=>{"use strict";n.d(t,{MN:()=>q,Wl:()=>h,_F:()=>g,cE:()=>b,em:()=>y,hI:()=>w,jA:()=>f,lO:()=>v,oz:()=>B,s1:()=>k,vY:()=>x,xz:()=>u});var o=n(67294),a=n(16550),i=n(18790),r=n(94104),s=n(60373),l=n(74477),c=n(1116),d=n(67392),p=n(48596);const b=!!r._r;function u(e){const t=(0,l.E)();if(!e)return;const n=t.docs[e];if(!n)throw new Error(`no version doc found by id=${e}`);return n}function y(e,t){for(const n of e)if("category"===n.type){if(t(n))return n;const e=y(n.items,t);if(e)return e}}function h(e){if(e.href)return e.href;for(const t of e.items){if("link"===t.type)return t.href;if("category"===t.type){const e=h(t);if(e)return e}}}function f(){const{pathname:e}=(0,a.TH)(),t=(0,c.V)();if(!t)throw new Error("Unexpected: cant find current sidebar in context");const n=_({sidebarItems:t.items,pathname:e,onlyCategories:!0}).slice(-1)[0];if(!n)throw new Error(`${e} is not associated with a category. useCurrentSidebarCategory() should only be used on category index pages.`);return n}const m=(e,t)=>void 0!==e&&(0,p.Mg)(e,t);function g(e,t){return"link"===e.type?m(e.href,t):"category"===e.type&&(m(e.href,t)||((e,t)=>e.some((e=>g(e,t))))(e.items,t))}function _(e){let{sidebarItems:t,pathname:n,onlyCategories:o=!1}=e;const a=[];return function e(t){for(const i of t)if("category"===i.type&&((0,p.Mg)(i.href,n)||e(i.items))||"link"===i.type&&(0,p.Mg)(i.href,n)){return o&&"category"!==i.type||a.unshift(i),!0}return!1}(t),a}function k(){var e;const t=(0,c.V)(),{pathname:n}=(0,a.TH)();return!1!==(null==(e=(0,r.gA)())?void 0:e.pluginData.breadcrumbs)&&t?_({sidebarItems:t.items,pathname:n}):null}function v(e){const{activeVersion:t}=(0,r.Iw)(e),{preferredVersion:n}=(0,s.J)(e),a=(0,r.yW)(e);return(0,o.useMemo)((()=>(0,d.j)([t,n,a].filter(Boolean))),[t,n,a])}function B(e,t){const n=v(t);return(0,o.useMemo)((()=>{const t=n.flatMap((e=>e.sidebars?Object.entries(e.sidebars):[])),o=t.find((t=>t[0]===e));if(!o)throw new Error(`Can't find any sidebar with id "${e}" in version${n.length>1?"s":""} ${n.map((e=>e.name)).join(", ")}".\n  Available sidebar ids are:\n  - ${Object.keys(t).join("\n- ")}`);return o[1]}),[e,n])}function x(e,t){const n=v(t);return(0,o.useMemo)((()=>{const t=n.flatMap((e=>e.docs)),o=t.find((t=>t.id===e));if(!o){if(n.flatMap((e=>e.draftIds)).includes(e))return null;throw new Error(`DocNavbarItem: couldn't find any doc with id "${e}" in version${n.length>1?"s":""} ${n.map((e=>e.name)).join(", ")}".\nAvailable doc ids are:\n- ${(0,d.j)(t.map((e=>e.id))).join("\n- ")}`)}return o}),[e,n])}function w(e){let{route:t,versionMetadata:n}=e;const o=(0,a.TH)(),r=t.routes,s=r.find((e=>(0,a.LX)(o.pathname,e)));if(!s)return null;const l=s.sidebar,c=l?n.docsSidebars[l]:void 0;return{docElement:(0,i.H)(r),sidebarName:l,sidebarItems:c}}function q(e){return e.filter((e=>"category"!==e.type||!!h(e)))}},42489:(e,t,n)=>{"use strict";function o(e){return"title"in e[0]}n.d(t,{a:()=>o})},82128:(e,t,n)=>{"use strict";n.d(t,{p:()=>a});var o=n(52263);function a(e){const{siteConfig:t}=(0,o.Z)(),{title:n,titleDelimiter:a}=t;return null!=e&&e.trim().length?`${e.trim()} ${a} ${n}`:n}},91980:(e,t,n)=>{"use strict";n.d(t,{R:()=>r});var o=n(67294),a=n(16550),i=n(902);function r(e){!function(e){const t=(0,a.k6)(),n=(0,i.zX)(e);(0,o.useEffect)((()=>t.block(((e,t)=>n(e,t)))),[t,n])}(((t,n)=>{if("POP"===n)return e(t,n)}))}},67392:(e,t,n)=>{"use strict";function o(e,t){return void 0===t&&(t=(e,t)=>e===t),e.filter(((n,o)=>e.findIndex((e=>t(e,n)))!==o))}function a(e){return Array.from(new Set(e))}n.d(t,{j:()=>a,l:()=>o})},10833:(e,t,n)=>{"use strict";n.d(t,{FG:()=>b,d:()=>d,VC:()=>u});var o=n(67294),a=n(86010),i=n(35742),r=n(30226);function s(){const e=o.useContext(r._);if(!e)throw new Error("Unexpected: no Docusaurus route context found");return e}var l=n(44996),c=n(82128);function d(e){let{title:t,description:n,keywords:a,image:r,children:s}=e;const d=(0,c.p)(t),{withBaseUrl:p}=(0,l.C)(),b=r?p(r,{absolute:!0}):void 0;return o.createElement(i.Z,null,t&&o.createElement("title",null,d),t&&o.createElement("meta",{property:"og:title",content:d}),n&&o.createElement("meta",{name:"description",content:n}),n&&o.createElement("meta",{property:"og:description",content:n}),a&&o.createElement("meta",{name:"keywords",content:Array.isArray(a)?a.join(","):a}),b&&o.createElement("meta",{property:"og:image",content:b}),b&&o.createElement("meta",{name:"twitter:image",content:b}),s)}const p=o.createContext(void 0);function b(e){let{className:t,children:n}=e;const r=o.useContext(p),s=(0,a.Z)(r,t);return o.createElement(p.Provider,{value:s},o.createElement(i.Z,null,o.createElement("html",{className:s})),n)}function u(e){let{children:t}=e;const n=s(),i=`plugin-${n.plugin.name.replace(/docusaurus-(?:plugin|theme)-(?:content-)?/gi,"")}`;const r=`plugin-id-${n.plugin.id}`;return o.createElement(b,{className:(0,a.Z)(i,r)},t)}},58978:(e,t,n)=>{"use strict";n.d(t,{A:()=>s,V:()=>l});var o=n(67294),a=n(93163),i=n(13102),r=n(76857);function s(e){function t(e){return"left"===(e.position??"right")}return[e.filter(t),e.filter((e=>!t(e)))]}function l(e){let{children:t}=e;return o.createElement(i.n2,null,o.createElement(a.M,null,o.createElement(r.P,null,t)))}},902:(e,t,n)=>{"use strict";n.d(t,{D9:()=>r,LI:()=>a,Qc:()=>c,Ql:()=>l,i6:()=>s,zX:()=>i});var o=n(67294);const a=n(10412).default.canUseDOM?o.useLayoutEffect:o.useEffect;function i(e){const t=(0,o.useRef)(e);return a((()=>{t.current=e}),[e]),(0,o.useCallback)((function(){return t.current(...arguments)}),[])}function r(e){const t=(0,o.useRef)();return a((()=>{t.current=e})),t.current}class s extends Error{constructor(e,t){var n,o,a;super(),this.name="ReactContextError",this.message=`Hook ${(null==(n=this.stack)||null==(o=n.split("\n")[1])||null==(a=o.match(/at (?:\w+\.)?(?<name>\w+)/))?void 0:a.groups.name)??""} is called outside the <${e}>. ${t??""}`}}function l(e){const t=Object.entries(e);return t.sort(((e,t)=>e[0].localeCompare(t[0]))),(0,o.useMemo)((()=>e),t.flat())}function c(e){return t=>{let{children:n}=t;return o.createElement(o.Fragment,null,e.reduceRight(((e,t)=>o.createElement(t,null,e)),n))}}},98022:(e,t,n)=>{"use strict";function o(e,t){return void 0!==e&&void 0!==t&&new RegExp(e,"gi").test(t)}n.d(t,{F:()=>o})},48596:(e,t,n)=>{"use strict";n.d(t,{Mg:()=>r,Ns:()=>s});var o=n(67294),a=n(723),i=n(52263);function r(e,t){const n=e=>{var t;return null==(t=!e||e.endsWith("/")?e:`${e}/`)?void 0:t.toLowerCase()};return n(e)===n(t)}function s(){const{baseUrl:e}=(0,i.Z)().siteConfig;return(0,o.useMemo)((()=>function(e){let{baseUrl:t,routes:n}=e;function o(e){return e.path===t&&!0===e.exact}function a(e){return e.path===t&&!e.exact}return function e(t){if(0===t.length)return;return t.find(o)||e(t.filter(a).flatMap((e=>e.routes??[])))}(n)}({routes:a.Z,baseUrl:e})),[e])}},12466:(e,t,n)=>{"use strict";n.d(t,{Ct:()=>u,OC:()=>l,RF:()=>p,o5:()=>b,sG:()=>c});var o=n(67294),a=n(10412),i=n(72389),r=n(902);const s=o.createContext(void 0);function l(e){let{children:t}=e;const n=function(){const e=(0,o.useRef)(!0);return(0,o.useMemo)((()=>({scrollEventsEnabledRef:e,enableScrollEvents:()=>{e.current=!0},disableScrollEvents:()=>{e.current=!1}})),[])}();return o.createElement(s.Provider,{value:n},t)}function c(){const e=(0,o.useContext)(s);if(null==e)throw new r.i6("ScrollControllerProvider");return e}const d=()=>a.default.canUseDOM?{scrollX:window.pageXOffset,scrollY:window.pageYOffset}:null;function p(e,t){void 0===t&&(t=[]);const{scrollEventsEnabledRef:n}=c(),a=(0,o.useRef)(d()),i=(0,r.zX)(e);(0,o.useEffect)((()=>{const e=()=>{if(!n.current)return;const e=d();i(e,a.current),a.current=e},t={passive:!0};return e(),window.addEventListener("scroll",e,t),()=>window.removeEventListener("scroll",e,t)}),[i,n,...t])}function b(){const e=c(),t=function(){const e=(0,o.useRef)({elem:null,top:0}),t=(0,o.useCallback)((t=>{e.current={elem:t,top:t.getBoundingClientRect().top}}),[]),n=(0,o.useCallback)((()=>{const{current:{elem:t,top:n}}=e;if(!t)return{restored:!1};const o=t.getBoundingClientRect().top-n;return o&&window.scrollBy({left:0,top:o}),e.current={elem:null,top:0},{restored:0!==o}}),[]);return(0,o.useMemo)((()=>({save:t,restore:n})),[n,t])}(),n=(0,o.useRef)(void 0),a=(0,o.useCallback)((o=>{t.save(o),e.disableScrollEvents(),n.current=()=>{const{restored:o}=t.restore();if(n.current=void 0,o){const t=()=>{e.enableScrollEvents(),window.removeEventListener("scroll",t)};window.addEventListener("scroll",t)}else e.enableScrollEvents()}}),[e,t]);return(0,o.useLayoutEffect)((()=>{null==n.current||n.current()})),{blockElementScrollPositionUntilNextRender:a}}function u(){const e=(0,o.useRef)(null),t=(0,i.Z)()&&"smooth"===getComputedStyle(document.documentElement).scrollBehavior;return{startScroll:n=>{e.current=t?function(e){return window.scrollTo({top:e,behavior:"smooth"}),()=>{}}(n):function(e){let t=null;const n=document.documentElement.scrollTop>e;return function o(){const a=document.documentElement.scrollTop;(n&&a>e||!n&&a<e)&&(t=requestAnimationFrame(o),window.scrollTo(0,Math.floor(.85*(a-e))+e))}(),()=>t&&cancelAnimationFrame(t)}(n)},cancelScroll:()=>null==e.current?void 0:e.current()}}},43320:(e,t,n)=>{"use strict";n.d(t,{HX:()=>r,_q:()=>l,os:()=>s});var o=n(94104),a=n(52263),i=n(60373);const r="default";function s(e,t){return`docs-${e}-${t}`}function l(){const{i18n:e}=(0,a.Z)(),t=(0,o._r)(),n=(0,o.WS)(),l=(0,i.Oh)();const c=[r,...Object.keys(t).map((function(e){const o=(null==n?void 0:n.activePlugin.pluginId)===e?n.activeVersion:void 0,a=l[e],i=t[e].versions.find((e=>e.isLast));return s(e,(o??a??i).name)}))];return{locale:e.currentLocale,tags:c}}},55225:(e,t,n)=>{"use strict";n.d(t,{l:()=>b,u:()=>l});var o=n(87462),a=n(67294),i=n(16550),r=n(95999),s=n(85936);const l="docusaurus_skipToContent_fallback";function c(e){e.setAttribute("tabindex","-1"),e.focus(),e.removeAttribute("tabindex")}function d(){const e=(0,a.useRef)(null),{action:t}=(0,i.k6)(),n=(0,a.useCallback)((e=>{e.preventDefault();const t=document.querySelector("main:first-of-type")??document.getElementById(l);t&&c(t)}),[]);return(0,s.S)((n=>{let{location:o}=n;e.current&&!o.hash&&"PUSH"===t&&c(e.current)})),{containerRef:e,onClick:n}}const p=(0,r.I)({id:"theme.common.skipToMainContent",description:"The skip to content label used for accessibility, allowing to rapidly navigate to main content with keyboard tab/enter navigation",message:"Skip to main content"});function b(e){const t=e.children??p,{containerRef:n,onClick:i}=d();return a.createElement("div",{ref:n,role:"region","aria-label":p},a.createElement("a",(0,o.Z)({},e,{href:`#${l}`,onClick:i}),t))}},50012:(e,t,n)=>{"use strict";n.d(t,{W:()=>s,_:()=>l});const o="localStorage";function a(e){if(void 0===e&&(e=o),"undefined"==typeof window)throw new Error("Browser storage is not available on Node.js/Docusaurus SSR process.");if("none"===e)return null;try{return window[e]}catch(n){return t=n,i||(console.warn("Docusaurus browser storage is not available.\nPossible reasons: running Docusaurus in an iframe, in an incognito browser session, or using too strict browser privacy settings.",t),i=!0),null}var t}let i=!1;const r={get:()=>null,set:()=>{},del:()=>{}};function s(e,t){if("undefined"==typeof window)return function(e){function t(){throw new Error(`Illegal storage API usage for storage key "${e}".\nDocusaurus storage APIs are not supposed to be called on the server-rendering process.\nPlease only call storage APIs in effects and event handlers.`)}return{get:t,set:t,del:t}}(e);const n=a(null==t?void 0:t.persistence);return null===n?r:{get:()=>{try{return n.getItem(e)}catch(t){return console.error(`Docusaurus storage error, can't get key=${e}`,t),null}},set:t=>{try{n.setItem(e,t)}catch(o){console.error(`Docusaurus storage error, can't set ${e}=${t}`,o)}},del:()=>{try{n.removeItem(e)}catch(t){console.error(`Docusaurus storage error, can't delete key=${e}`,t)}}}}function l(e){void 0===e&&(e=o);const t=a(e);if(!t)return[];const n=[];for(let o=0;o<t.length;o+=1){const e=t.key(o);null!==e&&n.push(e)}return n}},94711:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var o=n(52263),a=n(16550);function i(){const{siteConfig:{baseUrl:e,url:t},i18n:{defaultLocale:n,currentLocale:i}}=(0,o.Z)(),{pathname:r}=(0,a.TH)(),s=i===n?e:e.replace(`/${i}/`,"/"),l=r.replace(e,"");return{createUrl:function(e){let{locale:o,fullyQualified:a}=e;return`${a?t:""}${function(e){return e===n?`${s}`:`${s}${e}/`}(o)}${l}`}}}},51753:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var o=n(16550),a=n(52263);function i(){const{siteConfig:{baseUrl:e}}=(0,a.Z)(),{pathname:t}=(0,o.TH)();return t.replace(e,"/")}},85936:(e,t,n)=>{"use strict";n.d(t,{S:()=>r});var o=n(67294),a=n(16550),i=n(902);function r(e){const t=(0,a.TH)(),n=(0,i.D9)(t),r=(0,i.zX)(e);(0,o.useEffect)((()=>{n&&t!==n&&r({location:t,previousLocation:n})}),[r,t,n])}},86668:(e,t,n)=>{"use strict";n.d(t,{L:()=>a});var o=n(52263);function a(){return(0,o.Z)().siteConfig.themeConfig}},8802:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){const{trailingSlash:n,baseUrl:o}=t;if(e.startsWith("#"))return e;if(void 0===n)return e;const[a]=e.split(/[#?]/),i="/"===a||a===o?a:(r=a,n?function(e){return e.endsWith("/")?e:`${e}/`}(r):function(e){return e.endsWith("/")?e.slice(0,-1):e}(r));var r;return e.replace(a,i)}},18780:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.applyTrailingSlash=t.blogPostContainerID=void 0,t.blogPostContainerID="post-content";var a=n(8802);Object.defineProperty(t,"applyTrailingSlash",{enumerable:!0,get:function(){return o(a).default}})},4750:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});o(n(10412)).default.canUseDOM&&(window.Prism=window.Prism||{},window.Prism.manual=!0)},86010:(e,t,n)=>{"use strict";function o(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=o(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}n.d(t,{Z:()=>a});const a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=o(e))&&(a&&(a+=" "),a+=t);return a}},99318:(e,t,n)=>{"use strict";n.d(t,{lX:()=>k,q_:()=>T,ob:()=>u,PP:()=>S,Ep:()=>b});var o=n(87462);function a(e){return"/"===e.charAt(0)}function i(e,t){for(var n=t,o=n+1,a=e.length;o<a;n+=1,o+=1)e[n]=e[o];e.pop()}const r=function(e,t){void 0===t&&(t="");var n,o=e&&e.split("/")||[],r=t&&t.split("/")||[],s=e&&a(e),l=t&&a(t),c=s||l;if(e&&a(e)?r=o:o.length&&(r.pop(),r=r.concat(o)),!r.length)return"/";if(r.length){var d=r[r.length-1];n="."===d||".."===d||""===d}else n=!1;for(var p=0,b=r.length;b>=0;b--){var u=r[b];"."===u?i(r,b):".."===u?(i(r,b),p++):p&&(i(r,b),p--)}if(!c)for(;p--;p)r.unshift("..");!c||""===r[0]||r[0]&&a(r[0])||r.unshift("");var y=r.join("/");return n&&"/"!==y.substr(-1)&&(y+="/"),y};var s=n(38776);function l(e){return"/"===e.charAt(0)?e:"/"+e}function c(e){return"/"===e.charAt(0)?e.substr(1):e}function d(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function p(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function b(e){var t=e.pathname,n=e.search,o=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),o&&"#"!==o&&(a+="#"===o.charAt(0)?o:"#"+o),a}function u(e,t,n,a){var i;"string"==typeof e?(i=function(e){var t=e||"/",n="",o="",a=t.indexOf("#");-1!==a&&(o=t.substr(a),t=t.substr(0,a));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===o?"":o}}(e),i.state=t):(void 0===(i=(0,o.Z)({},e)).pathname&&(i.pathname=""),i.search?"?"!==i.search.charAt(0)&&(i.search="?"+i.search):i.search="",i.hash?"#"!==i.hash.charAt(0)&&(i.hash="#"+i.hash):i.hash="",void 0!==t&&void 0===i.state&&(i.state=t));try{i.pathname=decodeURI(i.pathname)}catch(s){throw s instanceof URIError?new URIError('Pathname "'+i.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):s}return n&&(i.key=n),a?i.pathname?"/"!==i.pathname.charAt(0)&&(i.pathname=r(i.pathname,a.pathname)):i.pathname=a.pathname:i.pathname||(i.pathname="/"),i}function y(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,o,a){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof o?o(i,a):a(!0):a(!1!==i)}else a(!0)},appendListener:function(e){var n=!0;function o(){n&&e.apply(void 0,arguments)}return t.push(o),function(){n=!1,t=t.filter((function(e){return e!==o}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),o=0;o<e;o++)n[o]=arguments[o];t.forEach((function(e){return e.apply(void 0,n)}))}}}var h=!("undefined"==typeof window||!window.document||!window.document.createElement);function f(e,t){t(window.confirm(e))}var m="popstate",g="hashchange";function _(){try{return window.history.state||{}}catch(e){return{}}}function k(e){void 0===e&&(e={}),h||(0,s.Z)(!1);var t,n=window.history,a=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,i=!(-1===window.navigator.userAgent.indexOf("Trident")),r=e,c=r.forceRefresh,k=void 0!==c&&c,v=r.getUserConfirmation,B=void 0===v?f:v,x=r.keyLength,w=void 0===x?6:x,q=e.basename?p(l(e.basename)):"";function T(e){var t=e||{},n=t.key,o=t.state,a=window.location,i=a.pathname+a.search+a.hash;return q&&(i=d(i,q)),u(i,o,n)}function E(){return Math.random().toString(36).substr(2,w)}var S=y();function C(e){(0,o.Z)(M,e),M.length=n.length,S.notifyListeners(M.location,M.action)}function A(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||I(T(e.state))}function P(){I(T(_()))}var R=!1;function I(e){if(R)R=!1,C();else{S.confirmTransitionTo(e,"POP",B,(function(t){t?C({action:"POP",location:e}):function(e){var t=M.location,n=N.indexOf(t.key);-1===n&&(n=0);var o=N.indexOf(e.key);-1===o&&(o=0);var a=n-o;a&&(R=!0,j(a))}(e)}))}}var L=T(_()),N=[L.key];function D(e){return q+b(e)}function j(e){n.go(e)}var U=0;function Q(e){1===(U+=e)&&1===e?(window.addEventListener(m,A),i&&window.addEventListener(g,P)):0===U&&(window.removeEventListener(m,A),i&&window.removeEventListener(g,P))}var O=!1;var M={length:n.length,action:"POP",location:L,createHref:D,push:function(e,t){var o="PUSH",i=u(e,t,E(),M.location);S.confirmTransitionTo(i,o,B,(function(e){if(e){var t=D(i),r=i.key,s=i.state;if(a)if(n.pushState({key:r,state:s},null,t),k)window.location.href=t;else{var l=N.indexOf(M.location.key),c=N.slice(0,l+1);c.push(i.key),N=c,C({action:o,location:i})}else window.location.href=t}}))},replace:function(e,t){var o="REPLACE",i=u(e,t,E(),M.location);S.confirmTransitionTo(i,o,B,(function(e){if(e){var t=D(i),r=i.key,s=i.state;if(a)if(n.replaceState({key:r,state:s},null,t),k)window.location.replace(t);else{var l=N.indexOf(M.location.key);-1!==l&&(N[l]=i.key),C({action:o,location:i})}else window.location.replace(t)}}))},go:j,goBack:function(){j(-1)},goForward:function(){j(1)},block:function(e){void 0===e&&(e=!1);var t=S.setPrompt(e);return O||(Q(1),O=!0),function(){return O&&(O=!1,Q(-1)),t()}},listen:function(e){var t=S.appendListener(e);return Q(1),function(){Q(-1),t()}}};return M}var v="hashchange",B={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+c(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:c,decodePath:l},slash:{encodePath:l,decodePath:l}};function x(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function w(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function q(e){window.location.replace(x(window.location.href)+"#"+e)}function T(e){void 0===e&&(e={}),h||(0,s.Z)(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),a=n.getUserConfirmation,i=void 0===a?f:a,r=n.hashType,c=void 0===r?"slash":r,m=e.basename?p(l(e.basename)):"",g=B[c],_=g.encodePath,k=g.decodePath;function T(){var e=k(w());return m&&(e=d(e,m)),u(e)}var E=y();function S(e){(0,o.Z)(O,e),O.length=t.length,E.notifyListeners(O.location,O.action)}var C=!1,A=null;function P(){var e,t,n=w(),o=_(n);if(n!==o)q(o);else{var a=T(),r=O.location;if(!C&&(t=a,(e=r).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(A===b(a))return;A=null,function(e){if(C)C=!1,S();else{var t="POP";E.confirmTransitionTo(e,t,i,(function(n){n?S({action:t,location:e}):function(e){var t=O.location,n=N.lastIndexOf(b(t));-1===n&&(n=0);var o=N.lastIndexOf(b(e));-1===o&&(o=0);var a=n-o;a&&(C=!0,D(a))}(e)}))}}(a)}}var R=w(),I=_(R);R!==I&&q(I);var L=T(),N=[b(L)];function D(e){t.go(e)}var j=0;function U(e){1===(j+=e)&&1===e?window.addEventListener(v,P):0===j&&window.removeEventListener(v,P)}var Q=!1;var O={length:t.length,action:"POP",location:L,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=x(window.location.href)),n+"#"+_(m+b(e))},push:function(e,t){var n="PUSH",o=u(e,void 0,void 0,O.location);E.confirmTransitionTo(o,n,i,(function(e){if(e){var t=b(o),a=_(m+t);if(w()!==a){A=t,function(e){window.location.hash=e}(a);var i=N.lastIndexOf(b(O.location)),r=N.slice(0,i+1);r.push(t),N=r,S({action:n,location:o})}else S()}}))},replace:function(e,t){var n="REPLACE",o=u(e,void 0,void 0,O.location);E.confirmTransitionTo(o,n,i,(function(e){if(e){var t=b(o),a=_(m+t);w()!==a&&(A=t,q(a));var i=N.indexOf(b(O.location));-1!==i&&(N[i]=t),S({action:n,location:o})}}))},go:D,goBack:function(){D(-1)},goForward:function(){D(1)},block:function(e){void 0===e&&(e=!1);var t=E.setPrompt(e);return Q||(U(1),Q=!0),function(){return Q&&(Q=!1,U(-1)),t()}},listen:function(e){var t=E.appendListener(e);return U(1),function(){U(-1),t()}}};return O}function E(e,t,n){return Math.min(Math.max(e,t),n)}function S(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,a=t.initialEntries,i=void 0===a?["/"]:a,r=t.initialIndex,s=void 0===r?0:r,l=t.keyLength,c=void 0===l?6:l,d=y();function p(e){(0,o.Z)(k,e),k.length=k.entries.length,d.notifyListeners(k.location,k.action)}function h(){return Math.random().toString(36).substr(2,c)}var f=E(s,0,i.length-1),m=i.map((function(e){return u(e,void 0,"string"==typeof e?h():e.key||h())})),g=b;function _(e){var t=E(k.index+e,0,k.entries.length-1),o=k.entries[t];d.confirmTransitionTo(o,"POP",n,(function(e){e?p({action:"POP",location:o,index:t}):p()}))}var k={length:m.length,action:"POP",location:m[f],index:f,entries:m,createHref:g,push:function(e,t){var o="PUSH",a=u(e,t,h(),k.location);d.confirmTransitionTo(a,o,n,(function(e){if(e){var t=k.index+1,n=k.entries.slice(0);n.length>t?n.splice(t,n.length-t,a):n.push(a),p({action:o,location:a,index:t,entries:n})}}))},replace:function(e,t){var o="REPLACE",a=u(e,t,h(),k.location);d.confirmTransitionTo(a,o,n,(function(e){e&&(k.entries[k.index]=a,p({action:o,location:a}))}))},go:_,goBack:function(){_(-1)},goForward:function(){_(1)},canGo:function(e){var t=k.index+e;return t>=0&&t<k.entries.length},block:function(e){return void 0===e&&(e=!1),d.setPrompt(e)},listen:function(e){return d.appendListener(e)}};return k}},8679:(e,t,n)=>{"use strict";var o=n(59864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},r={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},s={};function l(e){return o.isMemo(e)?r:s[e.$$typeof]||a}s[o.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},s[o.Memo]=r;var c=Object.defineProperty,d=Object.getOwnPropertyNames,p=Object.getOwnPropertySymbols,b=Object.getOwnPropertyDescriptor,u=Object.getPrototypeOf,y=Object.prototype;e.exports=function e(t,n,o){if("string"!=typeof n){if(y){var a=u(n);a&&a!==y&&e(t,a,o)}var r=d(n);p&&(r=r.concat(p(n)));for(var s=l(t),h=l(n),f=0;f<r.length;++f){var m=r[f];if(!(i[m]||o&&o[m]||h&&h[m]||s&&s[m])){var g=b(n,m);try{c(t,m,g)}catch(_){}}}}return t}},41143:e=>{"use strict";e.exports=function(e,t,n,o,a,i,r,s){if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,o,a,i,r,s],d=0;(l=new Error(t.replace(/%s/g,(function(){return c[d++]})))).name="Invariant Violation"}throw l.framesToPop=1,l}}},5826:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},56748:(e,t,n)=>{"use strict";n.r(t)},41304:(e,t,n)=>{"use strict";n.r(t)},32497:(e,t,n)=>{"use strict";n.r(t)},52295:(e,t,n)=>{"use strict";n.r(t)},74865:function(e,t,n){var o,a;o=function(){var e,t,n={version:"0.2.0"},o=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(e,t,n){return e<t?t:e>n?n:e}function i(e){return 100*(-1+e)}function r(e,t,n){var a;return(a="translate3d"===o.positionUsing?{transform:"translate3d("+i(e)+"%,0,0)"}:"translate"===o.positionUsing?{transform:"translate("+i(e)+"%,0)"}:{"margin-left":i(e)+"%"}).transition="all "+t+"ms "+n,a}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(o[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=a(e,o.minimum,1),n.status=1===e?null:e;var i=n.render(!t),c=i.querySelector(o.barSelector),d=o.speed,p=o.easing;return i.offsetWidth,s((function(t){""===o.positionUsing&&(o.positionUsing=n.getPositioningCSS()),l(c,r(e,d,p)),1===e?(l(i,{transition:"none",opacity:1}),i.offsetWidth,setTimeout((function(){l(i,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),d)}),d)):setTimeout(t,d)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),o.trickleSpeed)};return o.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*a(Math.random()*t,.1,.95)),t=a(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*o.trickleRate)},e=0,t=0,n.promise=function(o){return o&&"resolved"!==o.state()?(0===t&&n.start(),e++,t++,o.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");d(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=o.template;var a,r=t.querySelector(o.barSelector),s=e?"-100":i(n.status||0),c=document.querySelector(o.parent);return l(r,{transition:"all 0 linear",transform:"translate3d("+s+"%,0,0)"}),o.showSpinner||(a=t.querySelector(o.spinnerSelector))&&u(a),c!=document.body&&d(c,"nprogress-custom-parent"),c.appendChild(t),t},n.remove=function(){p(document.documentElement,"nprogress-busy"),p(document.querySelector(o.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&u(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var s=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),l=function(){var e=["Webkit","O","Moz","ms"],t={};function n(e){return e.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()}))}function o(t){var n=document.body.style;if(t in n)return t;for(var o,a=e.length,i=t.charAt(0).toUpperCase()+t.slice(1);a--;)if((o=e[a]+i)in n)return o;return t}function a(e){return e=n(e),t[e]||(t[e]=o(e))}function i(e,t,n){t=a(t),e.style[t]=n}return function(e,t){var n,o,a=arguments;if(2==a.length)for(n in t)void 0!==(o=t[n])&&t.hasOwnProperty(n)&&i(e,n,o);else i(e,a[1],a[2])}}();function c(e,t){return("string"==typeof e?e:b(e)).indexOf(" "+t+" ")>=0}function d(e,t){var n=b(e),o=n+t;c(n,t)||(e.className=o.substring(1))}function p(e,t){var n,o=b(e);c(e,t)&&(n=o.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function b(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function u(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n},void 0===(a="function"==typeof o?o.call(t,n,t,e):o)||(e.exports=a)},27418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var o={};return"abcdefghijklmnopqrst".split("").forEach((function(e){o[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},o)).join("")}catch(a){return!1}}()?Object.assign:function(e,i){for(var r,s,l=a(e),c=1;c<arguments.length;c++){for(var d in r=Object(arguments[c]))n.call(r,d)&&(l[d]=r[d]);if(t){s=t(r);for(var p=0;p<s.length;p++)o.call(r,s[p])&&(l[s[p]]=r[s[p]])}}return l}},14779:(e,t,n)=>{var o=n(5826);e.exports=u,e.exports.parse=i,e.exports.compile=function(e,t){return s(i(e,t),t)},e.exports.tokensToFunction=s,e.exports.tokensToRegExp=b;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,o=[],i=0,r=0,s="",d=t&&t.delimiter||"/";null!=(n=a.exec(e));){var p=n[0],b=n[1],u=n.index;if(s+=e.slice(r,u),r=u+p.length,b)s+=b[1];else{var y=e[r],h=n[2],f=n[3],m=n[4],g=n[5],_=n[6],k=n[7];s&&(o.push(s),s="");var v=null!=h&&null!=y&&y!==h,B="+"===_||"*"===_,x="?"===_||"*"===_,w=n[2]||d,q=m||g;o.push({name:f||i++,prefix:h||"",delimiter:w,optional:x,repeat:B,partial:v,asterisk:!!k,pattern:q?c(q):k?".*":"[^"+l(w)+"]+?"})}}return r<e.length&&(s+=e.substr(r)),s&&o.push(s),o}function r(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function s(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",p(t)));return function(t,a){for(var i="",s=t||{},l=(a||{}).pretty?r:encodeURIComponent,c=0;c<e.length;c++){var d=e[c];if("string"!=typeof d){var p,b=s[d.name];if(null==b){if(d.optional){d.partial&&(i+=d.prefix);continue}throw new TypeError('Expected "'+d.name+'" to be defined')}if(o(b)){if(!d.repeat)throw new TypeError('Expected "'+d.name+'" to not repeat, but received `'+JSON.stringify(b)+"`");if(0===b.length){if(d.optional)continue;throw new TypeError('Expected "'+d.name+'" to not be empty')}for(var u=0;u<b.length;u++){if(p=l(b[u]),!n[c].test(p))throw new TypeError('Expected all "'+d.name+'" to match "'+d.pattern+'", but received `'+JSON.stringify(p)+"`");i+=(0===u?d.prefix:d.delimiter)+p}}else{if(p=d.asterisk?encodeURI(b).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):l(b),!n[c].test(p))throw new TypeError('Expected "'+d.name+'" to match "'+d.pattern+'", but received "'+p+'"');i+=d.prefix+p}}else i+=d}return i}}function l(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function d(e,t){return e.keys=t,e}function p(e){return e&&e.sensitive?"":"i"}function b(e,t,n){o(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,i=!1!==n.end,r="",s=0;s<e.length;s++){var c=e[s];if("string"==typeof c)r+=l(c);else{var b=l(c.prefix),u="(?:"+c.pattern+")";t.push(c),c.repeat&&(u+="(?:"+b+u+")*"),r+=u=c.optional?c.partial?b+"("+u+")?":"(?:"+b+"("+u+"))?":b+"("+u+")"}}var y=l(n.delimiter||"/"),h=r.slice(-y.length)===y;return a||(r=(h?r.slice(0,-y.length):r)+"(?:"+y+"(?=$))?"),r+=i?"$":a&&h?"":"(?="+y+"|$)",d(new RegExp("^"+r,p(n)),t)}function u(e,t,n){return o(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var o=0;o<n.length;o++)t.push({name:o,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return d(e,t)}(e,t):o(e)?function(e,t,n){for(var o=[],a=0;a<e.length;a++)o.push(u(e[a],t,n).source);return d(new RegExp("(?:"+o.join("|")+")",p(n)),t)}(e,t,n):function(e,t,n){return b(i(e,n),t,n)}(e,t,n)}},87410:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var o=function(){var e=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,t=0,n={},o={util:{encode:function e(t){return t instanceof a?new a(t.type,e(t.content),t.alias):Array.isArray(t)?t.map(e):t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++t}),e.__id},clone:function e(t,n){var a,i;switch(n=n||{},o.util.type(t)){case"Object":if(i=o.util.objId(t),n[i])return n[i];for(var r in a={},n[i]=a,t)t.hasOwnProperty(r)&&(a[r]=e(t[r],n));return a;case"Array":return i=o.util.objId(t),n[i]?n[i]:(a=[],n[i]=a,t.forEach((function(t,o){a[o]=e(t,n)})),a);default:return t}},getLanguage:function(t){for(;t;){var n=e.exec(t.className);if(n)return n[1].toLowerCase();t=t.parentElement}return"none"},setLanguage:function(t,n){t.className=t.className.replace(RegExp(e,"gi"),""),t.classList.add("language-"+n)},isActive:function(e,t,n){for(var o="no-"+t;e;){var a=e.classList;if(a.contains(t))return!0;if(a.contains(o))return!1;e=e.parentElement}return!!n}},languages:{plain:n,plaintext:n,text:n,txt:n,extend:function(e,t){var n=o.util.clone(o.languages[e]);for(var a in t)n[a]=t[a];return n},insertBefore:function(e,t,n,a){var i=(a=a||o.languages)[e],r={};for(var s in i)if(i.hasOwnProperty(s)){if(s==t)for(var l in n)n.hasOwnProperty(l)&&(r[l]=n[l]);n.hasOwnProperty(s)||(r[s]=i[s])}var c=a[e];return a[e]=r,o.languages.DFS(o.languages,(function(t,n){n===c&&t!=e&&(this[t]=r)})),r},DFS:function e(t,n,a,i){i=i||{};var r=o.util.objId;for(var s in t)if(t.hasOwnProperty(s)){n.call(t,s,t[s],a||s);var l=t[s],c=o.util.type(l);"Object"!==c||i[r(l)]?"Array"!==c||i[r(l)]||(i[r(l)]=!0,e(l,n,s,i)):(i[r(l)]=!0,e(l,n,null,i))}}},plugins:{},highlight:function(e,t,n){var i={code:e,grammar:t,language:n};return o.hooks.run("before-tokenize",i),i.tokens=o.tokenize(i.code,i.grammar),o.hooks.run("after-tokenize",i),a.stringify(o.util.encode(i.tokens),i.language)},tokenize:function(e,t){var n=t.rest;if(n){for(var o in n)t[o]=n[o];delete t.rest}var a=new s;return l(a,a.head,e),r(e,a,t,a.head,0),function(e){var t=[],n=e.head.next;for(;n!==e.tail;)t.push(n.value),n=n.next;return t}(a)},hooks:{all:{},add:function(e,t){var n=o.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=o.hooks.all[e];if(n&&n.length)for(var a,i=0;a=n[i++];)a(t)}},Token:a};function a(e,t,n,o){this.type=e,this.content=t,this.alias=n,this.length=0|(o||"").length}function i(e,t,n,o){e.lastIndex=t;var a=e.exec(n);if(a&&o&&a[1]){var i=a[1].length;a.index+=i,a[0]=a[0].slice(i)}return a}function r(e,t,n,s,d,p){for(var b in n)if(n.hasOwnProperty(b)&&n[b]){var u=n[b];u=Array.isArray(u)?u:[u];for(var y=0;y<u.length;++y){if(p&&p.cause==b+","+y)return;var h=u[y],f=h.inside,m=!!h.lookbehind,g=!!h.greedy,_=h.alias;if(g&&!h.pattern.global){var k=h.pattern.toString().match(/[imsuy]*$/)[0];h.pattern=RegExp(h.pattern.source,k+"g")}for(var v=h.pattern||h,B=s.next,x=d;B!==t.tail&&!(p&&x>=p.reach);x+=B.value.length,B=B.next){var w=B.value;if(t.length>e.length)return;if(!(w instanceof a)){var q,T=1;if(g){if(!(q=i(v,x,e,m))||q.index>=e.length)break;var E=q.index,S=q.index+q[0].length,C=x;for(C+=B.value.length;E>=C;)C+=(B=B.next).value.length;if(x=C-=B.value.length,B.value instanceof a)continue;for(var A=B;A!==t.tail&&(C<S||"string"==typeof A.value);A=A.next)T++,C+=A.value.length;T--,w=e.slice(x,C),q.index-=x}else if(!(q=i(v,0,w,m)))continue;E=q.index;var P=q[0],R=w.slice(0,E),I=w.slice(E+P.length),L=x+w.length;p&&L>p.reach&&(p.reach=L);var N=B.prev;if(R&&(N=l(t,N,R),x+=R.length),c(t,N,T),B=l(t,N,new a(b,f?o.tokenize(P,f):P,_,P)),I&&l(t,B,I),T>1){var D={cause:b+","+y,reach:L};r(e,t,n,B.prev,x,D),p&&D.reach>p.reach&&(p.reach=D.reach)}}}}}}function s(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0}function l(e,t,n){var o=t.next,a={value:n,prev:t,next:o};return t.next=a,o.prev=a,e.length++,a}function c(e,t,n){for(var o=t.next,a=0;a<n&&o!==e.tail;a++)o=o.next;t.next=o,o.prev=t,e.length-=a}return a.stringify=function e(t,n){if("string"==typeof t)return t;if(Array.isArray(t)){var a="";return t.forEach((function(t){a+=e(t,n)})),a}var i={type:t.type,content:e(t.content,n),tag:"span",classes:["token",t.type],attributes:{},language:n},r=t.alias;r&&(Array.isArray(r)?Array.prototype.push.apply(i.classes,r):i.classes.push(r)),o.hooks.run("wrap",i);var s="";for(var l in i.attributes)s+=" "+l+'="'+(i.attributes[l]||"").replace(/"/g,"&quot;")+'"';return"<"+i.tag+' class="'+i.classes.join(" ")+'"'+s+">"+i.content+"</"+i.tag+">"},o}(),a=o;o.default=o,a.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},a.languages.markup.tag.inside["attr-value"].inside.entity=a.languages.markup.entity,a.languages.markup.doctype.inside["internal-subset"].inside=a.languages.markup,a.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(a.languages.markup.tag,"addInlined",{value:function(e,t){var n={};n["language-"+t]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:a.languages[t]},n.cdata=/^<!\[CDATA\[|\]\]>$/i;var o={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:n}};o["language-"+t]={pattern:/[\s\S]+/,inside:a.languages[t]};var i={};i[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:o},a.languages.insertBefore("markup","cdata",i)}}),Object.defineProperty(a.languages.markup.tag,"addAttribute",{value:function(e,t){a.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[t,"language-"+t],inside:a.languages[t]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),a.languages.html=a.languages.markup,a.languages.mathml=a.languages.markup,a.languages.svg=a.languages.markup,a.languages.xml=a.languages.extend("markup",{}),a.languages.ssml=a.languages.xml,a.languages.atom=a.languages.xml,a.languages.rss=a.languages.xml,function(e){var t="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",n={pattern:/(^(["']?)\w+\2)[ \t]+\S.*/,lookbehind:!0,alias:"punctuation",inside:null},o={bash:n,environment:{pattern:RegExp("\\$"+t),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+t),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/};e.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b[\w-]+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+t),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:o},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0,inside:{bash:n}},{pattern:/(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,lookbehind:!0,greedy:!0,inside:o},{pattern:/(^|[^$\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\$'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,inside:{entity:o.entity}}],environment:{pattern:RegExp("\\$?"+t),alias:"constant"},variable:o.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}},n.inside=e.languages.bash;for(var a=["comment","function-name","for-or-select","assign-left","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],i=o.variable[1].inside,r=0;r<a.length;r++)i[a[r]]=e.languages.bash[a[r]];e.languages.shell=e.languages.bash}(a),a.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},a.languages.c=a.languages.extend("clike",{comment:{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},"class-name":{pattern:/(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,lookbehind:!0},keyword:/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/}),a.languages.insertBefore("c","string",{char:{pattern:/'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,greedy:!0}}),a.languages.insertBefore("c","string",{macro:{pattern:/(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,greedy:!0,alias:"property",inside:{string:[{pattern:/^(#\s*include\s*)<[^>]+>/,lookbehind:!0},a.languages.c.string],char:a.languages.c.char,comment:a.languages.c.comment,"macro-name":[{pattern:/(^#\s*define\s+)\w+\b(?!\()/i,lookbehind:!0},{pattern:/(^#\s*define\s+)\w+\b(?=\()/i,lookbehind:!0,alias:"function"}],directive:{pattern:/^(#\s*)[a-z]+/,lookbehind:!0,alias:"keyword"},"directive-hash":/^#/,punctuation:/##|\\(?=[\r\n])/,expression:{pattern:/\S[\s\S]*/,inside:a.languages.c}}}}),a.languages.insertBefore("c","function",{constant:/\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/}),delete a.languages.c.boolean,function(e){var t=/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,n=/\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g,(function(){return t.source}));e.languages.cpp=e.languages.extend("c",{"class-name":[{pattern:RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g,(function(){return t.source}))),lookbehind:!0},/\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,/\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,/\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],keyword:t,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,greedy:!0},operator:/>>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:false|true)\b/}),e.languages.insertBefore("cpp","string",{module:{pattern:RegExp(/(\b(?:import|module)\s+)/.source+"(?:"+/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source+"|"+/<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g,(function(){return n}))+")"),lookbehind:!0,greedy:!0,inside:{string:/^[<"][\s\S]+/,operator:/:/,punctuation:/\./}},"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),e.languages.insertBefore("cpp","keyword",{"generic-function":{pattern:/\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,inside:{function:/^\w+/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:e.languages.cpp}}}}),e.languages.insertBefore("cpp","operator",{"double-colon":{pattern:/::/,alias:"punctuation"}}),e.languages.insertBefore("cpp","class-name",{"base-clause":{pattern:/(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,lookbehind:!0,greedy:!0,inside:e.languages.extend("cpp",{})}}),e.languages.insertBefore("inside","double-colon",{"class-name":/\b[a-z_]\w*\b(?!\s*::)/i},e.languages.cpp["base-clause"])}(a),function(e){var t=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+t.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+t.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+t.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:t,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var n=e.languages.markup;n&&(n.tag.addInlined("style","css"),n.tag.addAttribute("style","css"))}(a),function(e){var t,n=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;e.languages.css.selector={pattern:e.languages.css.selector.pattern,lookbehind:!0,inside:t={"pseudo-element":/:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,"pseudo-class":/:[-\w]+/,class:/\.[-\w]+/,id:/#[-\w]+/,attribute:{pattern:RegExp("\\[(?:[^[\\]\"']|"+n.source+")*\\]"),greedy:!0,inside:{punctuation:/^\[|\]$/,"case-sensitivity":{pattern:/(\s)[si]$/i,lookbehind:!0,alias:"keyword"},namespace:{pattern:/^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,lookbehind:!0,inside:{punctuation:/\|$/}},"attr-name":{pattern:/^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,lookbehind:!0},"attr-value":[n,{pattern:/(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},"n-th":[{pattern:/(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,lookbehind:!0,inside:{number:/[\dn]+/,operator:/[+-]/}},{pattern:/(\(\s*)(?:even|odd)(?=\s*\))/i,lookbehind:!0}],combinator:/>|\+|~|\|\|/,punctuation:/[(),]/}},e.languages.css.atrule.inside["selector-function-argument"].inside=t,e.languages.insertBefore("css","property",{variable:{pattern:/(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,lookbehind:!0}});var o={pattern:/(\b\d+)(?:%|[a-z]+(?![\w-]))/,lookbehind:!0},a={pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0};e.languages.insertBefore("css","function",{operator:{pattern:/(\s)[+\-*\/](?=\s)/,lookbehind:!0},hexcode:{pattern:/\B#[\da-f]{3,8}\b/i,alias:"color"},color:[{pattern:/(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,lookbehind:!0},{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:o,number:a,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:o,number:a})}(a),a.languages.javascript=a.languages.extend("clike",{"class-name":[a.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),a.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,a.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:a.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:a.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:a.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:a.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:a.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),a.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:a.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),a.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),a.languages.markup&&(a.languages.markup.tag.addInlined("script","javascript"),a.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),a.languages.js=a.languages.javascript,function(e){var t=/#(?!\{).+/,n={pattern:/#\{[^}]+\}/,alias:"variable"};e.languages.coffeescript=e.languages.extend("javascript",{comment:t,string:[{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,inside:{interpolation:n}}],keyword:/\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,"class-member":{pattern:/@(?!\d)\w+/,alias:"variable"}}),e.languages.insertBefore("coffeescript","comment",{"multiline-comment":{pattern:/###[\s\S]+?###/,alias:"comment"},"block-regex":{pattern:/\/{3}[\s\S]*?\/{3}/,alias:"regex",inside:{comment:t,interpolation:n}}}),e.languages.insertBefore("coffeescript","string",{"inline-javascript":{pattern:/`(?:\\[\s\S]|[^\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:"punctuation"},script:{pattern:/[\s\S]+/,alias:"language-javascript",inside:e.languages.javascript}}},"multiline-string":[{pattern:/'''[\s\S]*?'''/,greedy:!0,alias:"string"},{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string",inside:{interpolation:n}}]}),e.languages.insertBefore("coffeescript","keyword",{property:/(?!\d)\w+(?=\s*:(?!:))/}),delete e.languages.coffeescript["template-string"],e.languages.coffee=e.languages.coffeescript}(a),function(e){var t=/[*&][^\s[\]{},]+/,n=/!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/,o="(?:"+n.source+"(?:[ \t]+"+t.source+")?|"+t.source+"(?:[ \t]+"+n.source+")?)",a=/(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g,(function(){return/[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source})),i=/"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;function r(e,t){t=(t||"").replace(/m/g,"")+"m";var n=/([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g,(function(){return o})).replace(/<<value>>/g,(function(){return e}));return RegExp(n,t)}e.languages.yaml={scalar:{pattern:RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g,(function(){return o}))),lookbehind:!0,alias:"string"},comment:/#.*/,key:{pattern:RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g,(function(){return o})).replace(/<<key>>/g,(function(){return"(?:"+a+"|"+i+")"}))),lookbehind:!0,greedy:!0,alias:"atrule"},directive:{pattern:/(^[ \t]*)%.+/m,lookbehind:!0,alias:"important"},datetime:{pattern:r(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),lookbehind:!0,alias:"number"},boolean:{pattern:r(/false|true/.source,"i"),lookbehind:!0,alias:"important"},null:{pattern:r(/null|~/.source,"i"),lookbehind:!0,alias:"important"},string:{pattern:r(i),lookbehind:!0,greedy:!0},number:{pattern:r(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source,"i"),lookbehind:!0},tag:n,important:t,punctuation:/---|[:[\]{}\-,|>?]|\.\.\./},e.languages.yml=e.languages.yaml}(a),function(e){var t=/(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;function n(e){return e=e.replace(/<inner>/g,(function(){return t})),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+e+")")}var o=/(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,a=/\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g,(function(){return o})),i=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;e.languages.markdown=e.languages.extend("markup",{}),e.languages.insertBefore("markdown","prolog",{"front-matter-block":{pattern:/(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,"front-matter":{pattern:/\S+(?:\s+\S+)*/,alias:["yaml","language-yaml"],inside:e.languages.yaml}}},blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+a+i+"(?:"+a+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+a+i+")(?:"+a+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(o),inside:e.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+a+")"+i+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+a+"$"),inside:{"table-header":{pattern:RegExp(o),alias:"important",inside:e.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,lookbehind:!0,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:n(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:n(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:n(/(~~?)(?:(?!~)<inner>)+\2/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},"code-snippet":{pattern:/(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:["code","keyword"]},url:{pattern:n(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\][ \t]?\[)[^\]]+(?=\]$)/,lookbehind:!0},url:{pattern:/(^\]\()[^\s)]+/,lookbehind:!0},string:{pattern:/(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,lookbehind:!0}}}}),["url","bold","italic","strike"].forEach((function(t){["url","bold","italic","strike","code-snippet"].forEach((function(n){t!==n&&(e.languages.markdown[t].inside.content.inside[n]=e.languages.markdown[n])}))})),e.hooks.add("after-tokenize",(function(e){"markdown"!==e.language&&"md"!==e.language||function e(t){if(t&&"string"!=typeof t)for(var n=0,o=t.length;n<o;n++){var a=t[n];if("code"===a.type){var i=a.content[1],r=a.content[3];if(i&&r&&"code-language"===i.type&&"code-block"===r.type&&"string"==typeof i.content){var s=i.content.replace(/\b#/g,"sharp").replace(/\b\+\+/g,"pp"),l="language-"+(s=(/[a-z][\w-]*/i.exec(s)||[""])[0].toLowerCase());r.alias?"string"==typeof r.alias?r.alias=[r.alias,l]:r.alias.push(l):r.alias=[l]}}else e(a.content)}}(e.tokens)})),e.hooks.add("wrap",(function(t){if("code-block"===t.type){for(var n="",o=0,a=t.classes.length;o<a;o++){var i=t.classes[o],c=/language-(.+)/.exec(i);if(c){n=c[1];break}}var d,p=e.languages[n];if(p)t.content=e.highlight((d=t.content,d.replace(r,"").replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi,(function(e,t){var n;if("#"===(t=t.toLowerCase())[0])return n="x"===t[1]?parseInt(t.slice(2),16):Number(t.slice(1)),l(n);var o=s[t];return o||e}))),p,n);else if(n&&"none"!==n&&e.plugins.autoloader){var b="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random());t.attributes.id=b,e.plugins.autoloader.loadLanguages(n,(function(){var t=document.getElementById(b);t&&(t.innerHTML=e.highlight(t.textContent,e.languages[n],n))}))}}}));var r=RegExp(e.languages.markup.tag.pattern.source,"gi"),s={amp:"&",lt:"<",gt:">",quot:'"'},l=String.fromCodePoint||String.fromCharCode;e.languages.md=e.languages.markdown}(a),a.languages.graphql={comment:/#.*/,description:{pattern:/(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,greedy:!0,alias:"string",inside:{"language-markdown":{pattern:/(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,lookbehind:!0,inside:a.languages.markdown}}},string:{pattern:/"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,greedy:!0},number:/(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,boolean:/\b(?:false|true)\b/,variable:/\$[a-z_]\w*/i,directive:{pattern:/@[a-z_]\w*/i,alias:"function"},"attr-name":{pattern:/\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,greedy:!0},"atom-input":{pattern:/\b[A-Z]\w*Input\b/,alias:"class-name"},scalar:/\b(?:Boolean|Float|ID|Int|String)\b/,constant:/\b[A-Z][A-Z_\d]*\b/,"class-name":{pattern:/(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,lookbehind:!0},fragment:{pattern:/(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-mutation":{pattern:/(\bmutation\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-query":{pattern:/(\bquery\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},keyword:/\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,operator:/[!=|&]|\.{3}/,"property-query":/\w+(?=\s*\()/,object:/\w+(?=\s*\{)/,punctuation:/[!(){}\[\]:=,]/,property:/\w+/},a.hooks.add("after-tokenize",(function(e){if("graphql"===e.language)for(var t=e.tokens.filter((function(e){return"string"!=typeof e&&"comment"!==e.type&&"scalar"!==e.type})),n=0;n<t.length;){var o=t[n++];if("keyword"===o.type&&"mutation"===o.content){var a=[];if(p(["definition-mutation","punctuation"])&&"("===d(1).content){n+=2;var i=b(/^\($/,/^\)$/);if(-1===i)continue;for(;n<i;n++){var r=d(0);"variable"===r.type&&(u(r,"variable-input"),a.push(r.content))}n=i+1}if(p(["punctuation","property-query"])&&"{"===d(0).content&&(n++,u(d(0),"property-mutation"),a.length>0)){var s=b(/^\{$/,/^\}$/);if(-1===s)continue;for(var l=n;l<s;l++){var c=t[l];"variable"===c.type&&a.indexOf(c.content)>=0&&u(c,"variable-input")}}}}function d(e){return t[n+e]}function p(e,t){t=t||0;for(var n=0;n<e.length;n++){var o=d(n+t);if(!o||o.type!==e[n])return!1}return!0}function b(e,o){for(var a=1,i=n;i<t.length;i++){var r=t[i],s=r.content;if("punctuation"===r.type&&"string"==typeof s)if(e.test(s))a++;else if(o.test(s)&&0===--a)return i}return-1}function u(e,t){var n=e.alias;n?Array.isArray(n)||(e.alias=n=[n]):e.alias=n=[],n.push(t)}})),a.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},identifier:{pattern:/(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,greedy:!0,lookbehind:!0,inside:{punctuation:/^`|`$/}},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:FALSE|NULL|TRUE)\b/i,number:/\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(e){var t=e.languages.javascript["template-string"],n=t.pattern.source,o=t.inside.interpolation,a=o.inside["interpolation-punctuation"],i=o.pattern.source;function r(t,o){if(e.languages[t])return{pattern:RegExp("((?:"+o+")\\s*)"+n),lookbehind:!0,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},"embedded-code":{pattern:/[\s\S]+/,alias:t}}}}function s(e,t){return"___"+t.toUpperCase()+"_"+e+"___"}function l(t,n,o){var a={code:t,grammar:n,language:o};return e.hooks.run("before-tokenize",a),a.tokens=e.tokenize(a.code,a.grammar),e.hooks.run("after-tokenize",a),a.tokens}function c(t){var n={};n["interpolation-punctuation"]=a;var i=e.tokenize(t,n);if(3===i.length){var r=[1,1];r.push.apply(r,l(i[1],e.languages.javascript,"javascript")),i.splice.apply(i,r)}return new e.Token("interpolation",i,o.alias,t)}function d(t,n,o){var a=e.tokenize(t,{interpolation:{pattern:RegExp(i),lookbehind:!0}}),r=0,d={},p=l(a.map((function(e){if("string"==typeof e)return e;for(var n,a=e.content;-1!==t.indexOf(n=s(r++,o)););return d[n]=a,n})).join(""),n,o),b=Object.keys(d);return r=0,function e(t){for(var n=0;n<t.length;n++){if(r>=b.length)return;var o=t[n];if("string"==typeof o||"string"==typeof o.content){var a=b[r],i="string"==typeof o?o:o.content,s=i.indexOf(a);if(-1!==s){++r;var l=i.substring(0,s),p=c(d[a]),u=i.substring(s+a.length),y=[];if(l&&y.push(l),y.push(p),u){var h=[u];e(h),y.push.apply(y,h)}"string"==typeof o?(t.splice.apply(t,[n,1].concat(y)),n+=y.length-1):o.content=y}}else{var f=o.content;Array.isArray(f)?e(f):e([f])}}}(p),new e.Token(o,p,"language-"+o,t)}e.languages.javascript["template-string"]=[r("css",/\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),r("html",/\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),r("svg",/\bsvg/.source),r("markdown",/\b(?:markdown|md)/.source),r("graphql",/\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),r("sql",/\bsql/.source),t].filter(Boolean);var p={javascript:!0,js:!0,typescript:!0,ts:!0,jsx:!0,tsx:!0};function b(e){return"string"==typeof e?e:Array.isArray(e)?e.map(b).join(""):b(e.content)}e.hooks.add("after-tokenize",(function(t){t.language in p&&function t(n){for(var o=0,a=n.length;o<a;o++){var i=n[o];if("string"!=typeof i){var r=i.content;if(Array.isArray(r))if("template-string"===i.type){var s=r[1];if(3===r.length&&"string"!=typeof s&&"embedded-code"===s.type){var l=b(s),c=s.alias,p=Array.isArray(c)?c[0]:c,u=e.languages[p];if(!u)continue;r[1]=d(l,u,p)}}else t(r);else"string"!=typeof r&&t([r])}}}(t.tokens)}))}(a),function(e){e.languages.typescript=e.languages.extend("javascript",{"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/}),e.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/,/\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,/\btype\b(?=\s*(?:[\{*]|$))/),delete e.languages.typescript.parameter,delete e.languages.typescript["literal-property"];var t=e.languages.extend("typescript",{});delete t["class-name"],e.languages.typescript["class-name"].inside=t,e.languages.insertBefore("typescript","function",{decorator:{pattern:/@[$\w\xA0-\uFFFF]+/,inside:{at:{pattern:/^@/,alias:"operator"},function:/^[\s\S]+/}},"generic-function":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,greedy:!0,inside:{function:/^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:t}}}}),e.languages.ts=e.languages.typescript}(a),function(e){function t(e,t){return RegExp(e.replace(/<ID>/g,(function(){return/(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source})),t)}e.languages.insertBefore("javascript","function-variable",{"method-variable":{pattern:RegExp("(\\.\\s*)"+e.languages.javascript["function-variable"].pattern.source),lookbehind:!0,alias:["function-variable","method","function","property-access"]}}),e.languages.insertBefore("javascript","function",{method:{pattern:RegExp("(\\.\\s*)"+e.languages.javascript.function.source),lookbehind:!0,alias:["function","property-access"]}}),e.languages.insertBefore("javascript","constant",{"known-class-name":[{pattern:/\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,alias:"class-name"},{pattern:/\b(?:[A-Z]\w*)Error\b/,alias:"class-name"}]}),e.languages.insertBefore("javascript","keyword",{imports:{pattern:t(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),lookbehind:!0,inside:e.languages.javascript},exports:{pattern:t(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),lookbehind:!0,inside:e.languages.javascript}}),e.languages.javascript.keyword.unshift({pattern:/\b(?:as|default|export|from|import)\b/,alias:"module"},{pattern:/\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,alias:"control-flow"},{pattern:/\bnull\b/,alias:["null","nil"]},{pattern:/\bundefined\b/,alias:"nil"}),e.languages.insertBefore("javascript","operator",{spread:{pattern:/\.{3}/,alias:"operator"},arrow:{pattern:/=>/,alias:"operator"}}),e.languages.insertBefore("javascript","punctuation",{"property-access":{pattern:t(/(\.\s*)#?<ID>/.source),lookbehind:!0},"maybe-class-name":{pattern:/(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,lookbehind:!0},dom:{pattern:/\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,alias:"variable"},console:{pattern:/\bconsole(?=\s*\.)/,alias:"class-name"}});for(var n=["function","function-variable","method","method-variable","property-access"],o=0;o<n.length;o++){var a=n[o],i=e.languages.javascript[a];"RegExp"===e.util.type(i)&&(i=e.languages.javascript[a]={pattern:i});var r=i.inside||{};i.inside=r,r["maybe-class-name"]=/^[A-Z][\s\S]*/}}(a),function(e){var t=e.util.clone(e.languages.javascript),n=/(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,o=/(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,a=/(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;function i(e,t){return e=e.replace(/<S>/g,(function(){return n})).replace(/<BRACES>/g,(function(){return o})).replace(/<SPREAD>/g,(function(){return a})),RegExp(e,t)}a=i(a).source,e.languages.jsx=e.languages.extend("markup",t),e.languages.jsx.tag.pattern=i(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source),e.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/,e.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,e.languages.jsx.tag.inside.comment=t.comment,e.languages.insertBefore("inside","attr-name",{spread:{pattern:i(/<SPREAD>/.source),inside:e.languages.jsx}},e.languages.jsx.tag),e.languages.insertBefore("inside","special-attr",{script:{pattern:i(/=<BRACES>/.source),alias:"language-javascript",inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:e.languages.jsx}}},e.languages.jsx.tag);var r=function(e){return e?"string"==typeof e?e:"string"==typeof e.content?e.content:e.content.map(r).join(""):""},s=function(t){for(var n=[],o=0;o<t.length;o++){var a=t[o],i=!1;if("string"!=typeof a&&("tag"===a.type&&a.content[0]&&"tag"===a.content[0].type?"</"===a.content[0].content[0].content?n.length>0&&n[n.length-1].tagName===r(a.content[0].content[1])&&n.pop():"/>"===a.content[a.content.length-1].content||n.push({tagName:r(a.content[0].content[1]),openedBraces:0}):n.length>0&&"punctuation"===a.type&&"{"===a.content?n[n.length-1].openedBraces++:n.length>0&&n[n.length-1].openedBraces>0&&"punctuation"===a.type&&"}"===a.content?n[n.length-1].openedBraces--:i=!0),(i||"string"==typeof a)&&n.length>0&&0===n[n.length-1].openedBraces){var l=r(a);o<t.length-1&&("string"==typeof t[o+1]||"plain-text"===t[o+1].type)&&(l+=r(t[o+1]),t.splice(o+1,1)),o>0&&("string"==typeof t[o-1]||"plain-text"===t[o-1].type)&&(l=r(t[o-1])+l,t.splice(o-1,1),o--),t[o]=new e.Token("plain-text",l,null,l)}a.content&&"string"!=typeof a.content&&s(a.content)}};e.hooks.add("after-tokenize",(function(e){"jsx"!==e.language&&"tsx"!==e.language||s(e.tokens)}))}(a),function(e){e.languages.diff={coord:[/^(?:\*{3}|-{3}|\+{3}).*$/m,/^@@.*@@$/m,/^\d.*$/m]};var t={"deleted-sign":"-","deleted-arrow":"<","inserted-sign":"+","inserted-arrow":">",unchanged:" ",diff:"!"};Object.keys(t).forEach((function(n){var o=t[n],a=[];/^\w+$/.test(n)||a.push(/\w+/.exec(n)[0]),"diff"===n&&a.push("bold"),e.languages.diff[n]={pattern:RegExp("^(?:["+o+"].*(?:\r\n?|\n|(?![\\s\\S])))+","m"),alias:a,inside:{line:{pattern:/(.)(?=[\s\S]).*(?:\r\n?|\n)?/,lookbehind:!0},prefix:{pattern:/[\s\S]/,alias:/\w+/.exec(n)[0]}}}})),Object.defineProperty(e.languages.diff,"PREFIXES",{value:t})}(a),a.languages.git={comment:/^#.*/m,deleted:/^[-\u2013].*/m,inserted:/^\+.*/m,string:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,command:{pattern:/^.*\$ git .*$/m,inside:{parameter:/\s--?\w+/}},coord:/^@@.*@@$/m,"commit-sha1":/^commit \w{40}$/m},a.languages.go=a.languages.extend("clike",{string:{pattern:/(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,lookbehind:!0,greedy:!0},keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,boolean:/\b(?:_|false|iota|nil|true)\b/,number:[/\b0(?:b[01_]+|o[0-7_]+)i?\b/i,/\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,/(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i],operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,builtin:/\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/}),a.languages.insertBefore("go","string",{char:{pattern:/'(?:\\.|[^'\\\r\n]){0,10}'/,greedy:!0}}),delete a.languages.go["class-name"],function(e){function t(e,t){return"___"+e.toUpperCase()+t+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(n,o,a,i){if(n.language===o){var r=n.tokenStack=[];n.code=n.code.replace(a,(function(e){if("function"==typeof i&&!i(e))return e;for(var a,s=r.length;-1!==n.code.indexOf(a=t(o,s));)++s;return r[s]=e,a})),n.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(n,o){if(n.language===o&&n.tokenStack){n.grammar=e.languages[o];var a=0,i=Object.keys(n.tokenStack);!function r(s){for(var l=0;l<s.length&&!(a>=i.length);l++){var c=s[l];if("string"==typeof c||c.content&&"string"==typeof c.content){var d=i[a],p=n.tokenStack[d],b="string"==typeof c?c:c.content,u=t(o,d),y=b.indexOf(u);if(y>-1){++a;var h=b.substring(0,y),f=new e.Token(o,e.tokenize(p,n.grammar),"language-"+o,p),m=b.substring(y+u.length),g=[];h&&g.push.apply(g,r([h])),g.push(f),m&&g.push.apply(g,r([m])),"string"==typeof c?s.splice.apply(s,[l,1].concat(g)):c.content=g}}else c.content&&r(c.content)}return s}(n.tokens)}}}})}(a),function(e){e.languages.handlebars={comment:/\{\{![\s\S]*?\}\}/,delimiter:{pattern:/^\{\{\{?|\}\}\}?$/,alias:"punctuation"},string:/(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,boolean:/\b(?:false|true)\b/,block:{pattern:/^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/,lookbehind:!0,alias:"keyword"},brackets:{pattern:/\[[^\]]+\]/,inside:{punctuation:/\[|\]/,variable:/[\s\S]+/}},punctuation:/[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,variable:/[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/},e.hooks.add("before-tokenize",(function(t){e.languages["markup-templating"].buildPlaceholders(t,"handlebars",/\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g)})),e.hooks.add("after-tokenize",(function(t){e.languages["markup-templating"].tokenizePlaceholders(t,"handlebars")})),e.languages.hbs=e.languages.handlebars}(a),a.languages.json={property:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,lookbehind:!0,greedy:!0},comment:{pattern:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},number:/-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},a.languages.webmanifest=a.languages.json,a.languages.less=a.languages.extend("css",{comment:[/\/\*[\s\S]*?\*\//,{pattern:/(^|[^\\])\/\/.*/,lookbehind:!0}],atrule:{pattern:/@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,inside:{variable:/@+[\w-]+/}},property:/(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,operator:/[+\-*\/]/}),a.languages.insertBefore("less","property",{variable:[{pattern:/@[\w-]+\s*:/,inside:{punctuation:/:/}},/@@?[\w-]+/],"mixin-usage":{pattern:/([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,lookbehind:!0,alias:"function"}}),a.languages.makefile={comment:{pattern:/(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,lookbehind:!0},string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"builtin-target":{pattern:/\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,alias:"builtin"},target:{pattern:/^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,alias:"symbol",inside:{variable:/\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/}},variable:/\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,keyword:/-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,function:{pattern:/(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,lookbehind:!0},operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/},a.languages.objectivec=a.languages.extend("c",{string:{pattern:/@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},keyword:/\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,operator:/-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/}),delete a.languages.objectivec["class-name"],a.languages.objc=a.languages.objectivec,a.languages.ocaml={comment:{pattern:/\(\*[\s\S]*?\*\)/,greedy:!0},char:{pattern:/'(?:[^\\\r\n']|\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,greedy:!0},string:[{pattern:/"(?:\\(?:[\s\S]|\r\n)|[^\\\r\n"])*"/,greedy:!0},{pattern:/\{([a-z_]*)\|[\s\S]*?\|\1\}/,greedy:!0}],number:[/\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\b/i,/\b0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]*)?(?:p[+-]?\d[\d_]*)?(?!\w)/i,/\b\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?\d[\d_]*)?(?!\w)/i],directive:{pattern:/\B#\w+/,alias:"property"},label:{pattern:/\B~\w+/,alias:"property"},"type-variable":{pattern:/\B'\w+/,alias:"function"},variant:{pattern:/`\w+/,alias:"symbol"},keyword:/\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,boolean:/\b(?:false|true)\b/,"operator-like-punctuation":{pattern:/\[[<>|]|[>|]\]|\{<|>\}/,alias:"punctuation"},operator:/\.[.~]|:[=>]|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,punctuation:/;;|::|[(){}\[\].,:;#]|\b_\b/},a.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0,greedy:!0},"string-interpolation":{pattern:/(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/m,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:False|None|True)\b/,number:/\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,operator:/[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},a.languages.python["string-interpolation"].inside.interpolation.inside.rest=a.languages.python,a.languages.py=a.languages.python,a.languages.reason=a.languages.extend("clike",{string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},"class-name":/\b[A-Z]\w*/,keyword:/\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,operator:/\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/}),a.languages.insertBefore("reason","class-name",{char:{pattern:/'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,greedy:!0},constructor:/\b[A-Z]\w*\b(?!\s*\.)/,label:{pattern:/\b[a-z]\w*(?=::)/,alias:"symbol"}}),delete a.languages.reason.function,function(e){e.languages.sass=e.languages.extend("css",{comment:{pattern:/^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,lookbehind:!0,greedy:!0}}),e.languages.insertBefore("sass","atrule",{"atrule-line":{pattern:/^(?:[ \t]*)[@+=].+/m,greedy:!0,inside:{atrule:/(?:@[\w-]+|[+=])/}}}),delete e.languages.sass.atrule;var t=/\$[-\w]+|#\{\$[-\w]+\}/,n=[/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/,{pattern:/(\s)-(?=\s)/,lookbehind:!0}];e.languages.insertBefore("sass","property",{"variable-line":{pattern:/^[ \t]*\$.+/m,greedy:!0,inside:{punctuation:/:/,variable:t,operator:n}},"property-line":{pattern:/^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,greedy:!0,inside:{property:[/[^:\s]+(?=\s*:)/,{pattern:/(:)[^:\s]+/,lookbehind:!0}],punctuation:/:/,variable:t,operator:n,important:e.languages.sass.important}}}),delete e.languages.sass.property,delete e.languages.sass.important,e.languages.insertBefore("sass","punctuation",{selector:{pattern:/^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,lookbehind:!0,greedy:!0}})}(a),a.languages.scss=a.languages.extend("css",{comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},atrule:{pattern:/@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,inside:{rule:/@[\w-]+/}},url:/(?:[-a-z]+-)?url(?=\()/i,selector:{pattern:/(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,inside:{parent:{pattern:/&/,alias:"important"},placeholder:/%[-\w]+/,variable:/\$[-\w]+|#\{\$[-\w]+\}/}},property:{pattern:/(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,inside:{variable:/\$[-\w]+|#\{\$[-\w]+\}/}}}),a.languages.insertBefore("scss","atrule",{keyword:[/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,{pattern:/( )(?:from|through)(?= )/,lookbehind:!0}]}),a.languages.insertBefore("scss","important",{variable:/\$[-\w]+|#\{\$[-\w]+\}/}),a.languages.insertBefore("scss","function",{"module-modifier":{pattern:/\b(?:as|hide|show|with)\b/i,alias:"keyword"},placeholder:{pattern:/%[-\w]+/,alias:"selector"},statement:{pattern:/\B!(?:default|optional)\b/i,alias:"keyword"},boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"},operator:{pattern:/(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,lookbehind:!0}}),a.languages.scss.atrule.inside.rest=a.languages.scss,function(e){var t={pattern:/(\b\d+)(?:%|[a-z]+)/,lookbehind:!0},n={pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0},o={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},url:{pattern:/\burl\((["']?).*?\1\)/i,greedy:!0},string:{pattern:/("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,greedy:!0},interpolation:null,func:null,important:/\B!(?:important|optional)\b/i,keyword:{pattern:/(^|\s+)(?:(?:else|for|if|return|unless)(?=\s|$)|@[\w-]+)/,lookbehind:!0},hexcode:/#[\da-f]{3,6}/i,color:[/\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:t,number:n,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:t,boolean:/\b(?:false|true)\b/,operator:[/~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/],number:n,punctuation:/[{}()\[\];:,]/};o.interpolation={pattern:/\{[^\r\n}:]+\}/,alias:"variable",inside:{delimiter:{pattern:/^\{|\}$/,alias:"punctuation"},rest:o}},o.func={pattern:/[\w-]+\([^)]*\).*/,inside:{function:/^[^(]+/,rest:o}},e.languages.stylus={"atrule-declaration":{pattern:/(^[ \t]*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\w-]+/,rest:o}},"variable-declaration":{pattern:/(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,lookbehind:!0,inside:{variable:/^\S+/,rest:o}},statement:{pattern:/(^[ \t]*)(?:else|for|if|return|unless)[ \t].+/m,lookbehind:!0,inside:{keyword:/^\S+/,rest:o}},"property-declaration":{pattern:/((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,]$(?!(?:\r?\n|\r)(?:\{|\2[ \t])))/m,lookbehind:!0,inside:{property:{pattern:/^[^\s:]+/,inside:{interpolation:o.interpolation}},rest:o}},selector:{pattern:/(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t])))/m,lookbehind:!0,inside:{interpolation:o.interpolation,comment:o.comment,punctuation:/[{},]/}},func:o.func,string:o.string,comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0,greedy:!0},interpolation:o.interpolation,punctuation:/[{}()\[\];:.]/}}(a),function(e){var t=e.util.clone(e.languages.typescript);e.languages.tsx=e.languages.extend("jsx",t),delete e.languages.tsx.parameter,delete e.languages.tsx["literal-property"];var n=e.languages.tsx.tag;n.pattern=RegExp(/(^|[^\w$]|(?=<\/))/.source+"(?:"+n.pattern.source+")",n.pattern.flags),n.lookbehind=!0}(a),a.languages.wasm={comment:[/\(;[\s\S]*?;\)/,{pattern:/;;.*/,greedy:!0}],string:{pattern:/"(?:\\[\s\S]|[^"\\])*"/,greedy:!0},keyword:[{pattern:/\b(?:align|offset)=/,inside:{operator:/=/}},{pattern:/\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,inside:{punctuation:/\./}},/\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/],variable:/\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,number:/[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,punctuation:/[()]/};const i=a},29901:e=>{e.exports&&(e.exports={core:{meta:{path:"components/prism-core.js",option:"mandatory"},core:"Core"},themes:{meta:{path:"themes/{id}.css",link:"index.html?theme={id}",exclusive:!0},prism:{title:"Default",option:"default"},"prism-dark":"Dark","prism-funky":"Funky","prism-okaidia":{title:"Okaidia",owner:"ocodia"},"prism-twilight":{title:"Twilight",owner:"remybach"},"prism-coy":{title:"Coy",owner:"tshedor"},"prism-solarizedlight":{title:"Solarized Light",owner:"hectormatos2011 "},"prism-tomorrow":{title:"Tomorrow Night",owner:"Rosey"}},languages:{meta:{path:"components/prism-{id}",noCSS:!0,examplesPath:"examples/prism-{id}",addCheckAll:!0},markup:{title:"Markup",alias:["html","xml","svg","mathml","ssml","atom","rss"],aliasTitles:{html:"HTML",xml:"XML",svg:"SVG",mathml:"MathML",ssml:"SSML",atom:"Atom",rss:"RSS"},option:"default"},css:{title:"CSS",option:"default",modify:"markup"},clike:{title:"C-like",option:"default"},javascript:{title:"JavaScript",require:"clike",modify:"markup",optional:"regex",alias:"js",option:"default"},abap:{title:"ABAP",owner:"dellagustin"},abnf:{title:"ABNF",owner:"RunDevelopment"},actionscript:{title:"ActionScript",require:"javascript",modify:"markup",owner:"Golmote"},ada:{title:"Ada",owner:"Lucretia"},agda:{title:"Agda",owner:"xy-ren"},al:{title:"AL",owner:"RunDevelopment"},antlr4:{title:"ANTLR4",alias:"g4",owner:"RunDevelopment"},apacheconf:{title:"Apache Configuration",owner:"GuiTeK"},apex:{title:"Apex",require:["clike","sql"],owner:"RunDevelopment"},apl:{title:"APL",owner:"ngn"},applescript:{title:"AppleScript",owner:"Golmote"},aql:{title:"AQL",owner:"RunDevelopment"},arduino:{title:"Arduino",require:"cpp",alias:"ino",owner:"dkern"},arff:{title:"ARFF",owner:"Golmote"},armasm:{title:"ARM Assembly",alias:"arm-asm",owner:"RunDevelopment"},arturo:{title:"Arturo",alias:"art",optional:["bash","css","javascript","markup","markdown","sql"],owner:"drkameleon"},asciidoc:{alias:"adoc",title:"AsciiDoc",owner:"Golmote"},aspnet:{title:"ASP.NET (C#)",require:["markup","csharp"],owner:"nauzilus"},asm6502:{title:"6502 Assembly",owner:"kzurawel"},asmatmel:{title:"Atmel AVR Assembly",owner:"cerkit"},autohotkey:{title:"AutoHotkey",owner:"aviaryan"},autoit:{title:"AutoIt",owner:"Golmote"},avisynth:{title:"AviSynth",alias:"avs",owner:"Zinfidel"},"avro-idl":{title:"Avro IDL",alias:"avdl",owner:"RunDevelopment"},awk:{title:"AWK",alias:"gawk",aliasTitles:{gawk:"GAWK"},owner:"RunDevelopment"},bash:{title:"Bash",alias:["sh","shell"],aliasTitles:{sh:"Shell",shell:"Shell"},owner:"zeitgeist87"},basic:{title:"BASIC",owner:"Golmote"},batch:{title:"Batch",owner:"Golmote"},bbcode:{title:"BBcode",alias:"shortcode",aliasTitles:{shortcode:"Shortcode"},owner:"RunDevelopment"},bbj:{title:"BBj",owner:"hyyan"},bicep:{title:"Bicep",owner:"johnnyreilly"},birb:{title:"Birb",require:"clike",owner:"Calamity210"},bison:{title:"Bison",require:"c",owner:"Golmote"},bnf:{title:"BNF",alias:"rbnf",aliasTitles:{rbnf:"RBNF"},owner:"RunDevelopment"},bqn:{title:"BQN",owner:"yewscion"},brainfuck:{title:"Brainfuck",owner:"Golmote"},brightscript:{title:"BrightScript",owner:"RunDevelopment"},bro:{title:"Bro",owner:"wayward710"},bsl:{title:"BSL (1C:Enterprise)",alias:"oscript",aliasTitles:{oscript:"OneScript"},owner:"Diversus23"},c:{title:"C",require:"clike",owner:"zeitgeist87"},csharp:{title:"C#",require:"clike",alias:["cs","dotnet"],owner:"mvalipour"},cpp:{title:"C++",require:"c",owner:"zeitgeist87"},cfscript:{title:"CFScript",require:"clike",alias:"cfc",owner:"mjclemente"},chaiscript:{title:"ChaiScript",require:["clike","cpp"],owner:"RunDevelopment"},cil:{title:"CIL",owner:"sbrl"},cilkc:{title:"Cilk/C",require:"c",alias:"cilk-c",owner:"OpenCilk"},cilkcpp:{title:"Cilk/C++",require:"cpp",alias:["cilk-cpp","cilk"],owner:"OpenCilk"},clojure:{title:"Clojure",owner:"troglotit"},cmake:{title:"CMake",owner:"mjrogozinski"},cobol:{title:"COBOL",owner:"RunDevelopment"},coffeescript:{title:"CoffeeScript",require:"javascript",alias:"coffee",owner:"R-osey"},concurnas:{title:"Concurnas",alias:"conc",owner:"jasontatton"},csp:{title:"Content-Security-Policy",owner:"ScottHelme"},cooklang:{title:"Cooklang",owner:"ahue"},coq:{title:"Coq",owner:"RunDevelopment"},crystal:{title:"Crystal",require:"ruby",owner:"MakeNowJust"},"css-extras":{title:"CSS Extras",require:"css",modify:"css",owner:"milesj"},csv:{title:"CSV",owner:"RunDevelopment"},cue:{title:"CUE",owner:"RunDevelopment"},cypher:{title:"Cypher",owner:"RunDevelopment"},d:{title:"D",require:"clike",owner:"Golmote"},dart:{title:"Dart",require:"clike",owner:"Golmote"},dataweave:{title:"DataWeave",owner:"machaval"},dax:{title:"DAX",owner:"peterbud"},dhall:{title:"Dhall",owner:"RunDevelopment"},diff:{title:"Diff",owner:"uranusjr"},django:{title:"Django/Jinja2",require:"markup-templating",alias:"jinja2",owner:"romanvm"},"dns-zone-file":{title:"DNS zone file",owner:"RunDevelopment",alias:"dns-zone"},docker:{title:"Docker",alias:"dockerfile",owner:"JustinBeckwith"},dot:{title:"DOT (Graphviz)",alias:"gv",optional:"markup",owner:"RunDevelopment"},ebnf:{title:"EBNF",owner:"RunDevelopment"},editorconfig:{title:"EditorConfig",owner:"osipxd"},eiffel:{title:"Eiffel",owner:"Conaclos"},ejs:{title:"EJS",require:["javascript","markup-templating"],owner:"RunDevelopment",alias:"eta",aliasTitles:{eta:"Eta"}},elixir:{title:"Elixir",owner:"Golmote"},elm:{title:"Elm",owner:"zwilias"},etlua:{title:"Embedded Lua templating",require:["lua","markup-templating"],owner:"RunDevelopment"},erb:{title:"ERB",require:["ruby","markup-templating"],owner:"Golmote"},erlang:{title:"Erlang",owner:"Golmote"},"excel-formula":{title:"Excel Formula",alias:["xlsx","xls"],owner:"RunDevelopment"},fsharp:{title:"F#",require:"clike",owner:"simonreynolds7"},factor:{title:"Factor",owner:"catb0t"},false:{title:"False",owner:"edukisto"},"firestore-security-rules":{title:"Firestore security rules",require:"clike",owner:"RunDevelopment"},flow:{title:"Flow",require:"javascript",owner:"Golmote"},fortran:{title:"Fortran",owner:"Golmote"},ftl:{title:"FreeMarker Template Language",require:"markup-templating",owner:"RunDevelopment"},gml:{title:"GameMaker Language",alias:"gamemakerlanguage",require:"clike",owner:"LiarOnce"},gap:{title:"GAP (CAS)",owner:"RunDevelopment"},gcode:{title:"G-code",owner:"RunDevelopment"},gdscript:{title:"GDScript",owner:"RunDevelopment"},gedcom:{title:"GEDCOM",owner:"Golmote"},gettext:{title:"gettext",alias:"po",owner:"RunDevelopment"},gherkin:{title:"Gherkin",owner:"hason"},git:{title:"Git",owner:"lgiraudel"},glsl:{title:"GLSL",require:"c",owner:"Golmote"},gn:{title:"GN",alias:"gni",owner:"RunDevelopment"},"linker-script":{title:"GNU Linker Script",alias:"ld",owner:"RunDevelopment"},go:{title:"Go",require:"clike",owner:"arnehormann"},"go-module":{title:"Go module",alias:"go-mod",owner:"RunDevelopment"},gradle:{title:"Gradle",require:"clike",owner:"zeabdelkhalek-badido18"},graphql:{title:"GraphQL",optional:"markdown",owner:"Golmote"},groovy:{title:"Groovy",require:"clike",owner:"robfletcher"},haml:{title:"Haml",require:"ruby",optional:["css","css-extras","coffeescript","erb","javascript","less","markdown","scss","textile"],owner:"Golmote"},handlebars:{title:"Handlebars",require:"markup-templating",alias:["hbs","mustache"],aliasTitles:{mustache:"Mustache"},owner:"Golmote"},haskell:{title:"Haskell",alias:"hs",owner:"bholst"},haxe:{title:"Haxe",require:"clike",optional:"regex",owner:"Golmote"},hcl:{title:"HCL",owner:"outsideris"},hlsl:{title:"HLSL",require:"c",owner:"RunDevelopment"},hoon:{title:"Hoon",owner:"matildepark"},http:{title:"HTTP",optional:["csp","css","hpkp","hsts","javascript","json","markup","uri"],owner:"danielgtaylor"},hpkp:{title:"HTTP Public-Key-Pins",owner:"ScottHelme"},hsts:{title:"HTTP Strict-Transport-Security",owner:"ScottHelme"},ichigojam:{title:"IchigoJam",owner:"BlueCocoa"},icon:{title:"Icon",owner:"Golmote"},"icu-message-format":{title:"ICU Message Format",owner:"RunDevelopment"},idris:{title:"Idris",alias:"idr",owner:"KeenS",require:"haskell"},ignore:{title:".ignore",owner:"osipxd",alias:["gitignore","hgignore","npmignore"],aliasTitles:{gitignore:".gitignore",hgignore:".hgignore",npmignore:".npmignore"}},inform7:{title:"Inform 7",owner:"Golmote"},ini:{title:"Ini",owner:"aviaryan"},io:{title:"Io",owner:"AlesTsurko"},j:{title:"J",owner:"Golmote"},java:{title:"Java",require:"clike",owner:"sherblot"},javadoc:{title:"JavaDoc",require:["markup","java","javadoclike"],modify:"java",optional:"scala",owner:"RunDevelopment"},javadoclike:{title:"JavaDoc-like",modify:["java","javascript","php"],owner:"RunDevelopment"},javastacktrace:{title:"Java stack trace",owner:"RunDevelopment"},jexl:{title:"Jexl",owner:"czosel"},jolie:{title:"Jolie",require:"clike",owner:"thesave"},jq:{title:"JQ",owner:"RunDevelopment"},jsdoc:{title:"JSDoc",require:["javascript","javadoclike","typescript"],modify:"javascript",optional:["actionscript","coffeescript"],owner:"RunDevelopment"},"js-extras":{title:"JS Extras",require:"javascript",modify:"javascript",optional:["actionscript","coffeescript","flow","n4js","typescript"],owner:"RunDevelopment"},json:{title:"JSON",alias:"webmanifest",aliasTitles:{webmanifest:"Web App Manifest"},owner:"CupOfTea696"},json5:{title:"JSON5",require:"json",owner:"RunDevelopment"},jsonp:{title:"JSONP",require:"json",owner:"RunDevelopment"},jsstacktrace:{title:"JS stack trace",owner:"sbrl"},"js-templates":{title:"JS Templates",require:"javascript",modify:"javascript",optional:["css","css-extras","graphql","markdown","markup","sql"],owner:"RunDevelopment"},julia:{title:"Julia",owner:"cdagnino"},keepalived:{title:"Keepalived Configure",owner:"dev-itsheng"},keyman:{title:"Keyman",owner:"mcdurdin"},kotlin:{title:"Kotlin",alias:["kt","kts"],aliasTitles:{kts:"Kotlin Script"},require:"clike",owner:"Golmote"},kumir:{title:"KuMir (\u041a\u0443\u041c\u0438\u0440)",alias:"kum",owner:"edukisto"},kusto:{title:"Kusto",owner:"RunDevelopment"},latex:{title:"LaTeX",alias:["tex","context"],aliasTitles:{tex:"TeX",context:"ConTeXt"},owner:"japborst"},latte:{title:"Latte",require:["clike","markup-templating","php"],owner:"nette"},less:{title:"Less",require:"css",optional:"css-extras",owner:"Golmote"},lilypond:{title:"LilyPond",require:"scheme",alias:"ly",owner:"RunDevelopment"},liquid:{title:"Liquid",require:"markup-templating",owner:"cinhtau"},lisp:{title:"Lisp",alias:["emacs","elisp","emacs-lisp"],owner:"JuanCaicedo"},livescript:{title:"LiveScript",owner:"Golmote"},llvm:{title:"LLVM IR",owner:"porglezomp"},log:{title:"Log file",optional:"javastacktrace",owner:"RunDevelopment"},lolcode:{title:"LOLCODE",owner:"Golmote"},lua:{title:"Lua",owner:"Golmote"},magma:{title:"Magma (CAS)",owner:"RunDevelopment"},makefile:{title:"Makefile",owner:"Golmote"},markdown:{title:"Markdown",require:"markup",optional:"yaml",alias:"md",owner:"Golmote"},"markup-templating":{title:"Markup templating",require:"markup",owner:"Golmote"},mata:{title:"Mata",owner:"RunDevelopment"},matlab:{title:"MATLAB",owner:"Golmote"},maxscript:{title:"MAXScript",owner:"RunDevelopment"},mel:{title:"MEL",owner:"Golmote"},mermaid:{title:"Mermaid",owner:"RunDevelopment"},metafont:{title:"METAFONT",owner:"LaeriExNihilo"},mizar:{title:"Mizar",owner:"Golmote"},mongodb:{title:"MongoDB",owner:"airs0urce",require:"javascript"},monkey:{title:"Monkey",owner:"Golmote"},moonscript:{title:"MoonScript",alias:"moon",owner:"RunDevelopment"},n1ql:{title:"N1QL",owner:"TMWilds"},n4js:{title:"N4JS",require:"javascript",optional:"jsdoc",alias:"n4jsd",owner:"bsmith-n4"},"nand2tetris-hdl":{title:"Nand To Tetris HDL",owner:"stephanmax"},naniscript:{title:"Naninovel Script",owner:"Elringus",alias:"nani"},nasm:{title:"NASM",owner:"rbmj"},neon:{title:"NEON",owner:"nette"},nevod:{title:"Nevod",owner:"nezaboodka"},nginx:{title:"nginx",owner:"volado"},nim:{title:"Nim",owner:"Golmote"},nix:{title:"Nix",owner:"Golmote"},nsis:{title:"NSIS",owner:"idleberg"},objectivec:{title:"Objective-C",require:"c",alias:"objc",owner:"uranusjr"},ocaml:{title:"OCaml",owner:"Golmote"},odin:{title:"Odin",owner:"edukisto"},opencl:{title:"OpenCL",require:"c",modify:["c","cpp"],owner:"Milania1"},openqasm:{title:"OpenQasm",alias:"qasm",owner:"RunDevelopment"},oz:{title:"Oz",owner:"Golmote"},parigp:{title:"PARI/GP",owner:"Golmote"},parser:{title:"Parser",require:"markup",owner:"Golmote"},pascal:{title:"Pascal",alias:"objectpascal",aliasTitles:{objectpascal:"Object Pascal"},owner:"Golmote"},pascaligo:{title:"Pascaligo",owner:"DefinitelyNotAGoat"},psl:{title:"PATROL Scripting Language",owner:"bertysentry"},pcaxis:{title:"PC-Axis",alias:"px",owner:"RunDevelopment"},peoplecode:{title:"PeopleCode",alias:"pcode",owner:"RunDevelopment"},perl:{title:"Perl",owner:"Golmote"},php:{title:"PHP",require:"markup-templating",owner:"milesj"},phpdoc:{title:"PHPDoc",require:["php","javadoclike"],modify:"php",owner:"RunDevelopment"},"php-extras":{title:"PHP Extras",require:"php",modify:"php",owner:"milesj"},"plant-uml":{title:"PlantUML",alias:"plantuml",owner:"RunDevelopment"},plsql:{title:"PL/SQL",require:"sql",owner:"Golmote"},powerquery:{title:"PowerQuery",alias:["pq","mscript"],owner:"peterbud"},powershell:{title:"PowerShell",owner:"nauzilus"},processing:{title:"Processing",require:"clike",owner:"Golmote"},prolog:{title:"Prolog",owner:"Golmote"},promql:{title:"PromQL",owner:"arendjr"},properties:{title:".properties",owner:"Golmote"},protobuf:{title:"Protocol Buffers",require:"clike",owner:"just-boris"},pug:{title:"Pug",require:["markup","javascript"],optional:["coffeescript","ejs","handlebars","less","livescript","markdown","scss","stylus","twig"],owner:"Golmote"},puppet:{title:"Puppet",owner:"Golmote"},pure:{title:"Pure",optional:["c","cpp","fortran"],owner:"Golmote"},purebasic:{title:"PureBasic",require:"clike",alias:"pbfasm",owner:"HeX0R101"},purescript:{title:"PureScript",require:"haskell",alias:"purs",owner:"sriharshachilakapati"},python:{title:"Python",alias:"py",owner:"multipetros"},qsharp:{title:"Q#",require:"clike",alias:"qs",owner:"fedonman"},q:{title:"Q (kdb+ database)",owner:"Golmote"},qml:{title:"QML",require:"javascript",owner:"RunDevelopment"},qore:{title:"Qore",require:"clike",owner:"temnroegg"},r:{title:"R",owner:"Golmote"},racket:{title:"Racket",require:"scheme",alias:"rkt",owner:"RunDevelopment"},cshtml:{title:"Razor C#",alias:"razor",require:["markup","csharp"],optional:["css","css-extras","javascript","js-extras"],owner:"RunDevelopment"},jsx:{title:"React JSX",require:["markup","javascript"],optional:["jsdoc","js-extras","js-templates"],owner:"vkbansal"},tsx:{title:"React TSX",require:["jsx","typescript"]},reason:{title:"Reason",require:"clike",owner:"Golmote"},regex:{title:"Regex",owner:"RunDevelopment"},rego:{title:"Rego",owner:"JordanSh"},renpy:{title:"Ren'py",alias:"rpy",owner:"HyuchiaDiego"},rescript:{title:"ReScript",alias:"res",owner:"vmarcosp"},rest:{title:"reST (reStructuredText)",owner:"Golmote"},rip:{title:"Rip",owner:"ravinggenius"},roboconf:{title:"Roboconf",owner:"Golmote"},robotframework:{title:"Robot Framework",alias:"robot",owner:"RunDevelopment"},ruby:{title:"Ruby",require:"clike",alias:"rb",owner:"samflores"},rust:{title:"Rust",owner:"Golmote"},sas:{title:"SAS",optional:["groovy","lua","sql"],owner:"Golmote"},sass:{title:"Sass (Sass)",require:"css",optional:"css-extras",owner:"Golmote"},scss:{title:"Sass (SCSS)",require:"css",optional:"css-extras",owner:"MoOx"},scala:{title:"Scala",require:"java",owner:"jozic"},scheme:{title:"Scheme",owner:"bacchus123"},"shell-session":{title:"Shell session",require:"bash",alias:["sh-session","shellsession"],owner:"RunDevelopment"},smali:{title:"Smali",owner:"RunDevelopment"},smalltalk:{title:"Smalltalk",owner:"Golmote"},smarty:{title:"Smarty",require:"markup-templating",optional:"php",owner:"Golmote"},sml:{title:"SML",alias:"smlnj",aliasTitles:{smlnj:"SML/NJ"},owner:"RunDevelopment"},solidity:{title:"Solidity (Ethereum)",alias:"sol",require:"clike",owner:"glachaud"},"solution-file":{title:"Solution file",alias:"sln",owner:"RunDevelopment"},soy:{title:"Soy (Closure Template)",require:"markup-templating",owner:"Golmote"},sparql:{title:"SPARQL",require:"turtle",owner:"Triply-Dev",alias:"rq"},"splunk-spl":{title:"Splunk SPL",owner:"RunDevelopment"},sqf:{title:"SQF: Status Quo Function (Arma 3)",require:"clike",owner:"RunDevelopment"},sql:{title:"SQL",owner:"multipetros"},squirrel:{title:"Squirrel",require:"clike",owner:"RunDevelopment"},stan:{title:"Stan",owner:"RunDevelopment"},stata:{title:"Stata Ado",require:["mata","java","python"],owner:"RunDevelopment"},iecst:{title:"Structured Text (IEC 61131-3)",owner:"serhioromano"},stylus:{title:"Stylus",owner:"vkbansal"},supercollider:{title:"SuperCollider",alias:"sclang",owner:"RunDevelopment"},swift:{title:"Swift",owner:"chrischares"},systemd:{title:"Systemd configuration file",owner:"RunDevelopment"},"t4-templating":{title:"T4 templating",owner:"RunDevelopment"},"t4-cs":{title:"T4 Text Templates (C#)",require:["t4-templating","csharp"],alias:"t4",owner:"RunDevelopment"},"t4-vb":{title:"T4 Text Templates (VB)",require:["t4-templating","vbnet"],owner:"RunDevelopment"},tap:{title:"TAP",owner:"isaacs",require:"yaml"},tcl:{title:"Tcl",owner:"PeterChaplin"},tt2:{title:"Template Toolkit 2",require:["clike","markup-templating"],owner:"gflohr"},textile:{title:"Textile",require:"markup",optional:"css",owner:"Golmote"},toml:{title:"TOML",owner:"RunDevelopment"},tremor:{title:"Tremor",alias:["trickle","troy"],owner:"darach",aliasTitles:{trickle:"trickle",troy:"troy"}},turtle:{title:"Turtle",alias:"trig",aliasTitles:{trig:"TriG"},owner:"jakubklimek"},twig:{title:"Twig",require:"markup-templating",owner:"brandonkelly"},typescript:{title:"TypeScript",require:"javascript",optional:"js-templates",alias:"ts",owner:"vkbansal"},typoscript:{title:"TypoScript",alias:"tsconfig",aliasTitles:{tsconfig:"TSConfig"},owner:"dkern"},unrealscript:{title:"UnrealScript",alias:["uscript","uc"],owner:"RunDevelopment"},uorazor:{title:"UO Razor Script",owner:"jaseowns"},uri:{title:"URI",alias:"url",aliasTitles:{url:"URL"},owner:"RunDevelopment"},v:{title:"V",require:"clike",owner:"taggon"},vala:{title:"Vala",require:"clike",optional:"regex",owner:"TemplarVolk"},vbnet:{title:"VB.Net",require:"basic",owner:"Bigsby"},velocity:{title:"Velocity",require:"markup",owner:"Golmote"},verilog:{title:"Verilog",owner:"a-rey"},vhdl:{title:"VHDL",owner:"a-rey"},vim:{title:"vim",owner:"westonganger"},"visual-basic":{title:"Visual Basic",alias:["vb","vba"],aliasTitles:{vba:"VBA"},owner:"Golmote"},warpscript:{title:"WarpScript",owner:"RunDevelopment"},wasm:{title:"WebAssembly",owner:"Golmote"},"web-idl":{title:"Web IDL",alias:"webidl",owner:"RunDevelopment"},wgsl:{title:"WGSL",owner:"Dr4gonthree"},wiki:{title:"Wiki markup",require:"markup",owner:"Golmote"},wolfram:{title:"Wolfram language",alias:["mathematica","nb","wl"],aliasTitles:{mathematica:"Mathematica",nb:"Mathematica Notebook"},owner:"msollami"},wren:{title:"Wren",owner:"clsource"},xeora:{title:"Xeora",require:"markup",alias:"xeoracube",aliasTitles:{xeoracube:"XeoraCube"},owner:"freakmaxi"},"xml-doc":{title:"XML doc (.net)",require:"markup",modify:["csharp","fsharp","vbnet"],owner:"RunDevelopment"},xojo:{title:"Xojo (REALbasic)",owner:"Golmote"},xquery:{title:"XQuery",require:"markup",owner:"Golmote"},yaml:{title:"YAML",alias:"yml",owner:"hason"},yang:{title:"YANG",owner:"RunDevelopment"},zig:{title:"Zig",owner:"RunDevelopment"}},plugins:{meta:{path:"plugins/{id}/prism-{id}",link:"plugins/{id}/"},"line-highlight":{title:"Line Highlight",description:"Highlights specific lines and/or line ranges."},"line-numbers":{title:"Line Numbers",description:"Line number at the beginning of code lines.",owner:"kuba-kubula"},"show-invisibles":{title:"Show Invisibles",description:"Show hidden characters such as tabs and line breaks.",optional:["autolinker","data-uri-highlight"]},autolinker:{title:"Autolinker",description:"Converts URLs and emails in code to clickable links. Parses Markdown links in comments."},wpd:{title:"WebPlatform Docs",description:'Makes tokens link to <a href="https://webplatform.github.io/docs/">WebPlatform.org documentation</a>. The links open in a new tab.'},"custom-class":{title:"Custom Class",description:"This plugin allows you to prefix Prism's default classes (<code>.comment</code> can become <code>.namespace--comment</code>) or replace them with your defined ones (like <code>.editor__comment</code>). You can even add new classes.",owner:"dvkndn",noCSS:!0},"file-highlight":{title:"File Highlight",description:"Fetch external files and highlight them with Prism. Used on the Prism website itself.",noCSS:!0},"show-language":{title:"Show Language",description:"Display the highlighted language in code blocks (inline code does not show the label).",owner:"nauzilus",noCSS:!0,require:"toolbar"},"jsonp-highlight":{title:"JSONP Highlight",description:"Fetch content with JSONP and highlight some interesting content (e.g. GitHub/Gists or Bitbucket API).",noCSS:!0,owner:"nauzilus"},"highlight-keywords":{title:"Highlight Keywords",description:"Adds special CSS classes for each keyword for fine-grained highlighting.",owner:"vkbansal",noCSS:!0},"remove-initial-line-feed":{title:"Remove initial line feed",description:"Removes the initial line feed in code blocks.",owner:"Golmote",noCSS:!0},"inline-color":{title:"Inline color",description:"Adds a small inline preview for colors in style sheets.",require:"css-extras",owner:"RunDevelopment"},previewers:{title:"Previewers",description:"Previewers for angles, colors, gradients, easing and time.",require:"css-extras",owner:"Golmote"},autoloader:{title:"Autoloader",description:"Automatically loads the needed languages to highlight the code blocks.",owner:"Golmote",noCSS:!0},"keep-markup":{title:"Keep Markup",description:"Prevents custom markup from being dropped out during highlighting.",owner:"Golmote",optional:"normalize-whitespace",noCSS:!0},"command-line":{title:"Command Line",description:"Display a command line with a prompt and, optionally, the output/response from the commands.",owner:"chriswells0"},"unescaped-markup":{title:"Unescaped Markup",description:"Write markup without having to escape anything."},"normalize-whitespace":{title:"Normalize Whitespace",description:"Supports multiple operations to normalize whitespace in code blocks.",owner:"zeitgeist87",optional:"unescaped-markup",noCSS:!0},"data-uri-highlight":{title:"Data-URI Highlight",description:"Highlights data-URI contents.",owner:"Golmote",noCSS:!0},toolbar:{title:"Toolbar",description:"Attach a toolbar for plugins to easily register buttons on the top of a code block.",owner:"mAAdhaTTah"},"copy-to-clipboard":{title:"Copy to Clipboard Button",description:"Add a button that copies the code block to the clipboard when clicked.",owner:"mAAdhaTTah",require:"toolbar",noCSS:!0},"download-button":{title:"Download Button",description:"A button in the toolbar of a code block adding a convenient way to download a code file.",owner:"Golmote",require:"toolbar",noCSS:!0},"match-braces":{title:"Match braces",description:"Highlights matching braces.",owner:"RunDevelopment"},"diff-highlight":{title:"Diff Highlight",description:"Highlights the code inside diff blocks.",owner:"RunDevelopment",require:"diff"},"filter-highlight-all":{title:"Filter highlightAll",description:"Filters the elements the <code>highlightAll</code> and <code>highlightAllUnder</code> methods actually highlight.",owner:"RunDevelopment",noCSS:!0},treeview:{title:"Treeview",description:"A language with special styles to highlight file system tree structures.",owner:"Golmote"}}})},2885:(e,t,n)=>{const o=n(29901),a=n(39642),i=new Set;function r(e){void 0===e?e=Object.keys(o.languages).filter((e=>"meta"!=e)):Array.isArray(e)||(e=[e]);const t=[...i,...Object.keys(Prism.languages)];a(o,e,t).load((e=>{if(!(e in o.languages))return void(r.silent||console.warn("Language does not exist: "+e));const t="./prism-"+e;delete n.c[n(16500).resolve(t)],delete Prism.languages[e],n(16500)(t),i.add(e)}))}r.silent=!1,e.exports=r},6726:(e,t,n)=>{var o={"./":2885};function a(e){var t=i(e);return n(t)}function i(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=6726},16500:(e,t,n)=>{var o={"./":2885};function a(e){var t=i(e);return n(t)}function i(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=16500},39642:e=>{"use strict";var t=function(){var e=function(){};function t(e,t){Array.isArray(e)?e.forEach(t):null!=e&&t(e,0)}function n(e){for(var t={},n=0,o=e.length;n<o;n++)t[e[n]]=!0;return t}function o(e){var n={},o=[];function a(o,i){if(!(o in n)){i.push(o);var r=i.indexOf(o);if(r<i.length-1)throw new Error("Circular dependency: "+i.slice(r).join(" -> "));var s={},l=e[o];if(l){function c(t){if(!(t in e))throw new Error(o+" depends on an unknown component "+t);if(!(t in s))for(var r in a(t,i),s[t]=!0,n[t])s[r]=!0}t(l.require,c),t(l.optional,c),t(l.modify,c)}n[o]=s,i.pop()}}return function(e){var t=n[e];return t||(a(e,o),t=n[e]),t}}function a(e){for(var t in e)return!0;return!1}return function(i,r,s){var l=function(e){var t={};for(var n in e){var o=e[n];for(var a in o)if("meta"!=a){var i=o[a];t[a]="string"==typeof i?{title:i}:i}}return t}(i),c=function(e){var n;return function(o){if(o in e)return o;if(!n)for(var a in n={},e){var i=e[a];t(i&&i.alias,(function(t){if(t in n)throw new Error(t+" cannot be alias for both "+a+" and "+n[t]);if(t in e)throw new Error(t+" cannot be alias of "+a+" because it is a component.");n[t]=a}))}return n[o]||o}}(l);r=r.map(c),s=(s||[]).map(c);var d=n(r),p=n(s);r.forEach((function e(n){var o=l[n];t(o&&o.require,(function(t){t in p||(d[t]=!0,e(t))}))}));for(var b,u=o(l),y=d;a(y);){for(var h in b={},y){var f=l[h];t(f&&f.modify,(function(e){e in p&&(b[e]=!0)}))}for(var m in p)if(!(m in d))for(var g in u(m))if(g in d){b[m]=!0;break}for(var _ in y=b)d[_]=!0}var k={getIds:function(){var e=[];return k.load((function(t){e.push(t)})),e},load:function(t,n){return function(t,n,o,a){var i=a?a.series:void 0,r=a?a.parallel:e,s={},l={};function c(e){if(e in s)return s[e];l[e]=!0;var a,d=[];for(var p in t(e))p in n&&d.push(p);if(0===d.length)a=o(e);else{var b=r(d.map((function(e){var t=c(e);return delete l[e],t})));i?a=i(b,(function(){return o(e)})):o(e)}return s[e]=a}for(var d in n)c(d);var p=[];for(var b in l)p.push(s[b]);return r(p)}(u,d,t,n)}};return k}}();e.exports=t},92703:(e,t,n)=>{"use strict";var o=n(50414);function a(){}function i(){}i.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,i,r){if(r!==o){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:a};return n.PropTypes=n,n}},45697:(e,t,n)=>{e.exports=n(92703)()},50414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},64448:(e,t,n)=>{"use strict";var o=n(67294),a=n(27418),i=n(63840);function r(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!o)throw Error(r(227));var s=new Set,l={};function c(e,t){d(e,t),d(e+"Capture",t)}function d(e,t){for(l[e]=t,e=0;e<t.length;e++)s.add(t[e])}var p=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),b=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,u=Object.prototype.hasOwnProperty,y={},h={};function f(e,t,n,o,a,i,r){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=o,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=r}var m={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){m[e]=new f(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];m[t]=new f(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){m[e]=new f(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){m[e]=new f(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){m[e]=new f(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){m[e]=new f(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){m[e]=new f(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){m[e]=new f(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){m[e]=new f(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function _(e){return e[1].toUpperCase()}function k(e,t,n,o){var a=m.hasOwnProperty(t)?m[t]:null;(null!==a?0===a.type:!o&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,o){if(null==t||function(e,t,n,o){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!o&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,o))return!0;if(o)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,o)&&(n=null),o||null===a?function(e){return!!u.call(h,e)||!u.call(y,e)&&(b.test(e)?h[e]=!0:(y[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,o=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,o?e.setAttributeNS(o,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,_);m[t]=new f(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,_);m[t]=new f(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,_);m[t]=new f(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){m[e]=new f(e,1,!1,e.toLowerCase(),null,!1,!1)})),m.xlinkHref=new f("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){m[e]=new f(e,1,!1,e.toLowerCase(),null,!0,!0)}));var v=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,B=60103,x=60106,w=60107,q=60108,T=60114,E=60109,S=60110,C=60112,A=60113,P=60120,R=60115,I=60116,L=60121,N=60128,D=60129,j=60130,U=60131;if("function"==typeof Symbol&&Symbol.for){var Q=Symbol.for;B=Q("react.element"),x=Q("react.portal"),w=Q("react.fragment"),q=Q("react.strict_mode"),T=Q("react.profiler"),E=Q("react.provider"),S=Q("react.context"),C=Q("react.forward_ref"),A=Q("react.suspense"),P=Q("react.suspense_list"),R=Q("react.memo"),I=Q("react.lazy"),L=Q("react.block"),Q("react.scope"),N=Q("react.opaque.id"),D=Q("react.debug_trace_mode"),j=Q("react.offscreen"),U=Q("react.legacy_hidden")}var O,M="function"==typeof Symbol&&Symbol.iterator;function F(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=M&&e[M]||e["@@iterator"])?e:null}function z(e){if(void 0===O)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);O=t&&t[1]||""}return"\n"+O+e}var H=!1;function Z(e,t){if(!e||H)return"";H=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var o=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){o=l}e.call(t.prototype)}else{try{throw Error()}catch(l){o=l}e()}}catch(l){if(l&&o&&"string"==typeof l.stack){for(var a=l.stack.split("\n"),i=o.stack.split("\n"),r=a.length-1,s=i.length-1;1<=r&&0<=s&&a[r]!==i[s];)s--;for(;1<=r&&0<=s;r--,s--)if(a[r]!==i[s]){if(1!==r||1!==s)do{if(r--,0>--s||a[r]!==i[s])return"\n"+a[r].replace(" at new "," at ")}while(1<=r&&0<=s);break}}}finally{H=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?z(e):""}function G(e){switch(e.tag){case 5:return z(e.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return e=Z(e.type,!1);case 11:return e=Z(e.type.render,!1);case 22:return e=Z(e.type._render,!1);case 1:return e=Z(e.type,!0);default:return""}}function $(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case w:return"Fragment";case x:return"Portal";case T:return"Profiler";case q:return"StrictMode";case A:return"Suspense";case P:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case S:return(e.displayName||"Context")+".Consumer";case E:return(e._context.displayName||"Context")+".Provider";case C:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case R:return $(e.type);case L:return $(e._render);case I:t=e._payload,e=e._init;try{return $(e(t))}catch(n){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function V(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function W(e){e._valueTracker||(e._valueTracker=function(e){var t=V(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),o=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){o=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return o},setValue:function(e){o=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function J(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),o="";return e&&(o=V(e)?e.checked?"true":"false":e.value),(e=o)!==n&&(t.setValue(e),!0)}function Y(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,o=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:o,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&k(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),o=t.type;if(null!=n)"number"===o?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===o||"reset"===o)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function oe(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var o=t.type;if(!("submit"!==o&&"reset"!==o||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&Y(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ie(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return o.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function re(e,t,n,o){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&o&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(o&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function se(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(r(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function le(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(r(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(r(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function ce(e,t){var n=K(t.value),o=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=o&&(e.defaultValue=""+o)}function de(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var pe="http://www.w3.org/1999/xhtml",be="http://www.w3.org/2000/svg";function ue(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ye(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ue(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,fe,me=(fe=function(e,t){if(e.namespaceURI!==be||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,o){MSApp.execUnsafeLocalFunction((function(){return fe(e,t)}))}:fe);function ge(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var _e={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ke=["Webkit","ms","Moz","O"];function ve(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||_e.hasOwnProperty(e)&&_e[e]?(""+t).trim():t+"px"}function Be(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var o=0===n.indexOf("--"),a=ve(n,t[n],o);"float"===n&&(n="cssFloat"),o?e.setProperty(n,a):e[n]=a}}Object.keys(_e).forEach((function(e){ke.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),_e[t]=_e[e]}))}));var xe=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function we(e,t){if(t){if(xe[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(r(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(r(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(r(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(r(62))}}function qe(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Te(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ee=null,Se=null,Ce=null;function Ae(e){if(e=aa(e)){if("function"!=typeof Ee)throw Error(r(280));var t=e.stateNode;t&&(t=ra(t),Ee(e.stateNode,e.type,t))}}function Pe(e){Se?Ce?Ce.push(e):Ce=[e]:Se=e}function Re(){if(Se){var e=Se,t=Ce;if(Ce=Se=null,Ae(e),t)for(e=0;e<t.length;e++)Ae(t[e])}}function Ie(e,t){return e(t)}function Le(e,t,n,o,a){return e(t,n,o,a)}function Ne(){}var De=Ie,je=!1,Ue=!1;function Qe(){null===Se&&null===Ce||(Ne(),Re())}function Oe(e,t){var n=e.stateNode;if(null===n)return null;var o=ra(n);if(null===o)return null;n=o[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(o=!o.disabled)||(o=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!o;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(r(231,t,typeof n));return n}var Me=!1;if(p)try{var Fe={};Object.defineProperty(Fe,"passive",{get:function(){Me=!0}}),window.addEventListener("test",Fe,Fe),window.removeEventListener("test",Fe,Fe)}catch(fe){Me=!1}function ze(e,t,n,o,a,i,r,s,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(d){this.onError(d)}}var He=!1,Ze=null,Ge=!1,$e=null,Ke={onError:function(e){He=!0,Ze=e}};function Ve(e,t,n,o,a,i,r,s,l){He=!1,Ze=null,ze.apply(Ke,arguments)}function We(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ye(e){if(We(e)!==e)throw Error(r(188))}function Xe(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=We(e)))throw Error(r(188));return t!==e?null:e}for(var n=e,o=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(o=a.return)){n=o;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return Ye(a),e;if(i===o)return Ye(a),t;i=i.sibling}throw Error(r(188))}if(n.return!==o.return)n=a,o=i;else{for(var s=!1,l=a.child;l;){if(l===n){s=!0,n=a,o=i;break}if(l===o){s=!0,o=a,n=i;break}l=l.sibling}if(!s){for(l=i.child;l;){if(l===n){s=!0,n=i,o=a;break}if(l===o){s=!0,o=i,n=a;break}l=l.sibling}if(!s)throw Error(r(189))}}if(n.alternate!==o)throw Error(r(190))}if(3!==n.tag)throw Error(r(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function et(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var tt,nt,ot,at,it=!1,rt=[],st=null,lt=null,ct=null,dt=new Map,pt=new Map,bt=[],ut="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function yt(e,t,n,o,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[o]}}function ht(e,t){switch(e){case"focusin":case"focusout":st=null;break;case"dragenter":case"dragleave":lt=null;break;case"mouseover":case"mouseout":ct=null;break;case"pointerover":case"pointerout":dt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":pt.delete(t.pointerId)}}function ft(e,t,n,o,a,i){return null===e||e.nativeEvent!==i?(e=yt(t,n,o,a,i),null!==t&&(null!==(t=aa(t))&&nt(t)),e):(e.eventSystemFlags|=o,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function mt(e){var t=oa(e.target);if(null!==t){var n=We(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Je(n)))return e.blockedOn=t,void at(e.lanePriority,(function(){i.unstable_runWithPriority(e.priority,(function(){ot(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function gt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=aa(n))&&nt(t),e.blockedOn=n,!1;t.shift()}return!0}function _t(e,t,n){gt(e)&&n.delete(t)}function kt(){for(it=!1;0<rt.length;){var e=rt[0];if(null!==e.blockedOn){null!==(e=aa(e.blockedOn))&&tt(e);break}for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&rt.shift()}null!==st&&gt(st)&&(st=null),null!==lt&&gt(lt)&&(lt=null),null!==ct&&gt(ct)&&(ct=null),dt.forEach(_t),pt.forEach(_t)}function vt(e,t){e.blockedOn===t&&(e.blockedOn=null,it||(it=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,kt)))}function Bt(e){function t(t){return vt(t,e)}if(0<rt.length){vt(rt[0],e);for(var n=1;n<rt.length;n++){var o=rt[n];o.blockedOn===e&&(o.blockedOn=null)}}for(null!==st&&vt(st,e),null!==lt&&vt(lt,e),null!==ct&&vt(ct,e),dt.forEach(t),pt.forEach(t),n=0;n<bt.length;n++)(o=bt[n]).blockedOn===e&&(o.blockedOn=null);for(;0<bt.length&&null===(n=bt[0]).blockedOn;)mt(n),null===n.blockedOn&&bt.shift()}function xt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var wt={animationend:xt("Animation","AnimationEnd"),animationiteration:xt("Animation","AnimationIteration"),animationstart:xt("Animation","AnimationStart"),transitionend:xt("Transition","TransitionEnd")},qt={},Tt={};function Et(e){if(qt[e])return qt[e];if(!wt[e])return e;var t,n=wt[e];for(t in n)if(n.hasOwnProperty(t)&&t in Tt)return qt[e]=n[t];return e}p&&(Tt=document.createElement("div").style,"AnimationEvent"in window||(delete wt.animationend.animation,delete wt.animationiteration.animation,delete wt.animationstart.animation),"TransitionEvent"in window||delete wt.transitionend.transition);var St=Et("animationend"),Ct=Et("animationiteration"),At=Et("animationstart"),Pt=Et("transitionend"),Rt=new Map,It=new Map,Lt=["abort","abort",St,"animationEnd",Ct,"animationIteration",At,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Pt,"transitionEnd","waiting","waiting"];function Nt(e,t){for(var n=0;n<e.length;n+=2){var o=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),It.set(o,t),Rt.set(o,a),c(a,[o])}}(0,i.unstable_now)();var Dt=8;function jt(e){if(0!=(1&e))return Dt=15,1;if(0!=(2&e))return Dt=14,2;if(0!=(4&e))return Dt=13,4;var t=24&e;return 0!==t?(Dt=12,t):0!=(32&e)?(Dt=11,32):0!==(t=192&e)?(Dt=10,t):0!=(256&e)?(Dt=9,256):0!==(t=3584&e)?(Dt=8,t):0!=(4096&e)?(Dt=7,4096):0!==(t=4186112&e)?(Dt=6,t):0!==(t=62914560&e)?(Dt=5,t):67108864&e?(Dt=4,67108864):0!=(134217728&e)?(Dt=3,134217728):0!==(t=805306368&e)?(Dt=2,t):0!=(1073741824&e)?(Dt=1,1073741824):(Dt=8,e)}function Ut(e,t){var n=e.pendingLanes;if(0===n)return Dt=0;var o=0,a=0,i=e.expiredLanes,r=e.suspendedLanes,s=e.pingedLanes;if(0!==i)o=i,a=Dt=15;else if(0!==(i=134217727&n)){var l=i&~r;0!==l?(o=jt(l),a=Dt):0!==(s&=i)&&(o=jt(s),a=Dt)}else 0!==(i=n&~r)?(o=jt(i),a=Dt):0!==s&&(o=jt(s),a=Dt);if(0===o)return 0;if(o=n&((0>(o=31-Ht(o))?0:1<<o)<<1)-1,0!==t&&t!==o&&0==(t&r)){if(jt(t),a<=Dt)return t;Dt=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=o;0<t;)a=1<<(n=31-Ht(t)),o|=e[n],t&=~a;return o}function Qt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ot(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Mt(24&~t))?Ot(10,t):e;case 10:return 0===(e=Mt(192&~t))?Ot(8,t):e;case 8:return 0===(e=Mt(3584&~t))&&(0===(e=Mt(4186112&~t))&&(e=512)),e;case 2:return 0===(t=Mt(805306368&~t))&&(t=268435456),t}throw Error(r(358,e))}function Mt(e){return e&-e}function Ft(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function zt(e,t,n){e.pendingLanes|=t;var o=t-1;e.suspendedLanes&=o,e.pingedLanes&=o,(e=e.eventTimes)[t=31-Ht(t)]=n}var Ht=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Zt(e)/Gt|0)|0},Zt=Math.log,Gt=Math.LN2;var $t=i.unstable_UserBlockingPriority,Kt=i.unstable_runWithPriority,Vt=!0;function Wt(e,t,n,o){je||Ne();var a=Yt,i=je;je=!0;try{Le(a,e,t,n,o)}finally{(je=i)||Qe()}}function Jt(e,t,n,o){Kt($t,Yt.bind(null,e,t,n,o))}function Yt(e,t,n,o){var a;if(Vt)if((a=0==(4&t))&&0<rt.length&&-1<ut.indexOf(e))e=yt(null,e,t,n,o),rt.push(e);else{var i=Xt(e,t,n,o);if(null===i)a&&ht(e,o);else{if(a){if(-1<ut.indexOf(e))return e=yt(i,e,t,n,o),void rt.push(e);if(function(e,t,n,o,a){switch(t){case"focusin":return st=ft(st,e,t,n,o,a),!0;case"dragenter":return lt=ft(lt,e,t,n,o,a),!0;case"mouseover":return ct=ft(ct,e,t,n,o,a),!0;case"pointerover":var i=a.pointerId;return dt.set(i,ft(dt.get(i)||null,e,t,n,o,a)),!0;case"gotpointercapture":return i=a.pointerId,pt.set(i,ft(pt.get(i)||null,e,t,n,o,a)),!0}return!1}(i,e,t,n,o))return;ht(e,o)}Do(e,t,o,null,n)}}}function Xt(e,t,n,o){var a=Te(o);if(null!==(a=oa(a))){var i=We(a);if(null===i)a=null;else{var r=i.tag;if(13===r){if(null!==(a=Je(i)))return a;a=null}else if(3===r){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;a=null}else i!==a&&(a=null)}}return Do(e,t,o,a,n),null}var en=null,tn=null,nn=null;function on(){if(nn)return nn;var e,t,n=tn,o=n.length,a="value"in en?en.value:en.textContent,i=a.length;for(e=0;e<o&&n[e]===a[e];e++);var r=o-e;for(t=1;t<=r&&n[o-t]===a[i-t];t++);return nn=a.slice(e,1<t?1-t:void 0)}function an(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rn(){return!0}function sn(){return!1}function ln(e){function t(t,n,o,a,i){for(var r in this._reactName=t,this._targetInst=o,this.type=n,this.nativeEvent=a,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(r)&&(t=e[r],this[r]=t?t(a):a[r]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rn:sn,this.isPropagationStopped=sn,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rn)},persist:function(){},isPersistent:rn}),t}var cn,dn,pn,bn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=ln(bn),yn=a({},bn,{view:0,detail:0}),hn=ln(yn),fn=a({},yn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Sn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==pn&&(pn&&"mousemove"===e.type?(cn=e.screenX-pn.screenX,dn=e.screenY-pn.screenY):dn=cn=0,pn=e),cn)},movementY:function(e){return"movementY"in e?e.movementY:dn}}),mn=ln(fn),gn=ln(a({},fn,{dataTransfer:0})),_n=ln(a({},yn,{relatedTarget:0})),kn=ln(a({},bn,{animationName:0,elapsedTime:0,pseudoElement:0})),vn=a({},bn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Bn=ln(vn),xn=ln(a({},bn,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},qn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Tn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Tn[e])&&!!t[e]}function Sn(){return En}var Cn=a({},yn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=an(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?qn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Sn,charCode:function(e){return"keypress"===e.type?an(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?an(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),An=ln(Cn),Pn=ln(a({},fn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Rn=ln(a({},yn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Sn})),In=ln(a({},bn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ln=a({},fn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Nn=ln(Ln),Dn=[9,13,27,32],jn=p&&"CompositionEvent"in window,Un=null;p&&"documentMode"in document&&(Un=document.documentMode);var Qn=p&&"TextEvent"in window&&!Un,On=p&&(!jn||Un&&8<Un&&11>=Un),Mn=String.fromCharCode(32),Fn=!1;function zn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Hn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Zn=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function $n(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function Kn(e,t,n,o){Pe(o),0<(t=Uo(t,"onChange")).length&&(n=new un("onChange","change",null,n,o),e.push({event:n,listeners:t}))}var Vn=null,Wn=null;function Jn(e){Ao(e,0)}function Yn(e){if(J(ia(e)))return e}function Xn(e,t){if("change"===e)return t}var eo=!1;if(p){var to;if(p){var no="oninput"in document;if(!no){var oo=document.createElement("div");oo.setAttribute("oninput","return;"),no="function"==typeof oo.oninput}to=no}else to=!1;eo=to&&(!document.documentMode||9<document.documentMode)}function ao(){Vn&&(Vn.detachEvent("onpropertychange",io),Wn=Vn=null)}function io(e){if("value"===e.propertyName&&Yn(Wn)){var t=[];if(Kn(t,Wn,e,Te(e)),e=Jn,je)e(t);else{je=!0;try{Ie(e,t)}finally{je=!1,Qe()}}}}function ro(e,t,n){"focusin"===e?(ao(),Wn=n,(Vn=t).attachEvent("onpropertychange",io)):"focusout"===e&&ao()}function so(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(Wn)}function lo(e,t){if("click"===e)return Yn(t)}function co(e,t){if("input"===e||"change"===e)return Yn(t)}var po="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},bo=Object.prototype.hasOwnProperty;function uo(e,t){if(po(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),o=Object.keys(t);if(n.length!==o.length)return!1;for(o=0;o<n.length;o++)if(!bo.call(t,n[o])||!po(e[n[o]],t[n[o]]))return!1;return!0}function yo(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ho(e,t){var n,o=yo(e);for(e=0;o;){if(3===o.nodeType){if(n=e+o.textContent.length,e<=t&&n>=t)return{node:o,offset:t-e};e=n}e:{for(;o;){if(o.nextSibling){o=o.nextSibling;break e}o=o.parentNode}o=void 0}o=yo(o)}}function fo(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fo(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function mo(){for(var e=window,t=Y();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(o){n=!1}if(!n)break;t=Y((e=t.contentWindow).document)}return t}function go(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var _o=p&&"documentMode"in document&&11>=document.documentMode,ko=null,vo=null,Bo=null,xo=!1;function wo(e,t,n){var o=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;xo||null==ko||ko!==Y(o)||("selectionStart"in(o=ko)&&go(o)?o={start:o.selectionStart,end:o.selectionEnd}:o={anchorNode:(o=(o.ownerDocument&&o.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:o.anchorOffset,focusNode:o.focusNode,focusOffset:o.focusOffset},Bo&&uo(Bo,o)||(Bo=o,0<(o=Uo(vo,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:o}),t.target=ko)))}Nt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Nt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Nt(Lt,2);for(var qo="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),To=0;To<qo.length;To++)It.set(qo[To],0);d("onMouseEnter",["mouseout","mouseover"]),d("onMouseLeave",["mouseout","mouseover"]),d("onPointerEnter",["pointerout","pointerover"]),d("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Eo="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),So=new Set("cancel close invalid load scroll toggle".split(" ").concat(Eo));function Co(e,t,n){var o=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,o,a,i,s,l,c){if(Ve.apply(this,arguments),He){if(!He)throw Error(r(198));var d=Ze;He=!1,Ze=null,Ge||(Ge=!0,$e=d)}}(o,t,void 0,e),e.currentTarget=null}function Ao(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var o=e[n],a=o.event;o=o.listeners;e:{var i=void 0;if(t)for(var r=o.length-1;0<=r;r--){var s=o[r],l=s.instance,c=s.currentTarget;if(s=s.listener,l!==i&&a.isPropagationStopped())break e;Co(a,s,c),i=l}else for(r=0;r<o.length;r++){if(l=(s=o[r]).instance,c=s.currentTarget,s=s.listener,l!==i&&a.isPropagationStopped())break e;Co(a,s,c),i=l}}}if(Ge)throw e=$e,Ge=!1,$e=null,e}function Po(e,t){var n=sa(t),o=e+"__bubble";n.has(o)||(No(t,e,2,!1),n.add(o))}var Ro="_reactListening"+Math.random().toString(36).slice(2);function Io(e){e[Ro]||(e[Ro]=!0,s.forEach((function(t){So.has(t)||Lo(t,!1,e,null),Lo(t,!0,e,null)})))}function Lo(e,t,n,o){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,i=n;if("selectionchange"===e&&9!==n.nodeType&&(i=n.ownerDocument),null!==o&&!t&&So.has(e)){if("scroll"!==e)return;a|=2,i=o}var r=sa(i),s=e+"__"+(t?"capture":"bubble");r.has(s)||(t&&(a|=4),No(i,e,a,t),r.add(s))}function No(e,t,n,o){var a=It.get(t);switch(void 0===a?2:a){case 0:a=Wt;break;case 1:a=Jt;break;default:a=Yt}n=a.bind(null,t,n,e),a=void 0,!Me||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),o?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Do(e,t,n,o,a){var i=o;if(0==(1&t)&&0==(2&t)&&null!==o)e:for(;;){if(null===o)return;var r=o.tag;if(3===r||4===r){var s=o.stateNode.containerInfo;if(s===a||8===s.nodeType&&s.parentNode===a)break;if(4===r)for(r=o.return;null!==r;){var l=r.tag;if((3===l||4===l)&&((l=r.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;r=r.return}for(;null!==s;){if(null===(r=oa(s)))return;if(5===(l=r.tag)||6===l){o=i=r;continue e}s=s.parentNode}}o=o.return}!function(e,t,n){if(Ue)return e(t,n);Ue=!0;try{De(e,t,n)}finally{Ue=!1,Qe()}}((function(){var o=i,a=Te(n),r=[];e:{var s=Rt.get(e);if(void 0!==s){var l=un,c=e;switch(e){case"keypress":if(0===an(n))break e;case"keydown":case"keyup":l=An;break;case"focusin":c="focus",l=_n;break;case"focusout":c="blur",l=_n;break;case"beforeblur":case"afterblur":l=_n;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Rn;break;case St:case Ct:case At:l=kn;break;case Pt:l=In;break;case"scroll":l=hn;break;case"wheel":l=Nn;break;case"copy":case"cut":case"paste":l=Bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Pn}var d=0!=(4&t),p=!d&&"scroll"===e,b=d?null!==s?s+"Capture":null:s;d=[];for(var u,y=o;null!==y;){var h=(u=y).stateNode;if(5===u.tag&&null!==h&&(u=h,null!==b&&(null!=(h=Oe(y,b))&&d.push(jo(y,h,u)))),p)break;y=y.return}0<d.length&&(s=new l(s,c,null,n,a),r.push({event:s,listeners:d}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!oa(c)&&!c[ta])&&(l||s)&&(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=o,null!==(c=(c=n.relatedTarget||n.toElement)?oa(c):null)&&(c!==(p=We(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=o),l!==c)){if(d=mn,h="onMouseLeave",b="onMouseEnter",y="mouse","pointerout"!==e&&"pointerover"!==e||(d=Pn,h="onPointerLeave",b="onPointerEnter",y="pointer"),p=null==l?s:ia(l),u=null==c?s:ia(c),(s=new d(h,y+"leave",l,n,a)).target=p,s.relatedTarget=u,h=null,oa(a)===o&&((d=new d(b,y+"enter",c,n,a)).target=u,d.relatedTarget=p,h=d),p=h,l&&c)e:{for(b=c,y=0,u=d=l;u;u=Qo(u))y++;for(u=0,h=b;h;h=Qo(h))u++;for(;0<y-u;)d=Qo(d),y--;for(;0<u-y;)b=Qo(b),u--;for(;y--;){if(d===b||null!==b&&d===b.alternate)break e;d=Qo(d),b=Qo(b)}d=null}else d=null;null!==l&&Oo(r,s,l,d,!1),null!==c&&null!==p&&Oo(r,p,c,d,!0)}if("select"===(l=(s=o?ia(o):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var f=Xn;else if($n(s))if(eo)f=co;else{f=so;var m=ro}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(f=lo);switch(f&&(f=f(e,o))?Kn(r,f,n,a):(m&&m(e,s,o),"focusout"===e&&(m=s._wrapperState)&&m.controlled&&"number"===s.type&&ae(s,"number",s.value)),m=o?ia(o):window,e){case"focusin":($n(m)||"true"===m.contentEditable)&&(ko=m,vo=o,Bo=null);break;case"focusout":Bo=vo=ko=null;break;case"mousedown":xo=!0;break;case"contextmenu":case"mouseup":case"dragend":xo=!1,wo(r,n,a);break;case"selectionchange":if(_o)break;case"keydown":case"keyup":wo(r,n,a)}var g;if(jn)e:{switch(e){case"compositionstart":var _="onCompositionStart";break e;case"compositionend":_="onCompositionEnd";break e;case"compositionupdate":_="onCompositionUpdate";break e}_=void 0}else Zn?zn(e,n)&&(_="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(_="onCompositionStart");_&&(On&&"ko"!==n.locale&&(Zn||"onCompositionStart"!==_?"onCompositionEnd"===_&&Zn&&(g=on()):(tn="value"in(en=a)?en.value:en.textContent,Zn=!0)),0<(m=Uo(o,_)).length&&(_=new xn(_,e,null,n,a),r.push({event:_,listeners:m}),g?_.data=g:null!==(g=Hn(n))&&(_.data=g))),(g=Qn?function(e,t){switch(e){case"compositionend":return Hn(t);case"keypress":return 32!==t.which?null:(Fn=!0,Mn);case"textInput":return(e=t.data)===Mn&&Fn?null:e;default:return null}}(e,n):function(e,t){if(Zn)return"compositionend"===e||!jn&&zn(e,t)?(e=on(),nn=tn=en=null,Zn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return On&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(o=Uo(o,"onBeforeInput")).length&&(a=new xn("onBeforeInput","beforeinput",null,n,a),r.push({event:a,listeners:o}),a.data=g))}Ao(r,t)}))}function jo(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Uo(e,t){for(var n=t+"Capture",o=[];null!==e;){var a=e,i=a.stateNode;5===a.tag&&null!==i&&(a=i,null!=(i=Oe(e,n))&&o.unshift(jo(e,i,a)),null!=(i=Oe(e,t))&&o.push(jo(e,i,a))),e=e.return}return o}function Qo(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Oo(e,t,n,o,a){for(var i=t._reactName,r=[];null!==n&&n!==o;){var s=n,l=s.alternate,c=s.stateNode;if(null!==l&&l===o)break;5===s.tag&&null!==c&&(s=c,a?null!=(l=Oe(n,i))&&r.unshift(jo(n,l,s)):a||null!=(l=Oe(n,i))&&r.push(jo(n,l,s))),n=n.return}0!==r.length&&e.push({event:t,listeners:r})}function Mo(){}var Fo=null,zo=null;function Ho(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Zo(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Go="function"==typeof setTimeout?setTimeout:void 0,$o="function"==typeof clearTimeout?clearTimeout:void 0;function Ko(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Vo(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Wo(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Jo=0;var Yo=Math.random().toString(36).slice(2),Xo="__reactFiber$"+Yo,ea="__reactProps$"+Yo,ta="__reactContainer$"+Yo,na="__reactEvents$"+Yo;function oa(e){var t=e[Xo];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ta]||n[Xo]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Wo(e);null!==e;){if(n=e[Xo])return n;e=Wo(e)}return t}n=(e=n).parentNode}return null}function aa(e){return!(e=e[Xo]||e[ta])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ia(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(r(33))}function ra(e){return e[ea]||null}function sa(e){var t=e[na];return void 0===t&&(t=e[na]=new Set),t}var la=[],ca=-1;function da(e){return{current:e}}function pa(e){0>ca||(e.current=la[ca],la[ca]=null,ca--)}function ba(e,t){ca++,la[ca]=e.current,e.current=t}var ua={},ya=da(ua),ha=da(!1),fa=ua;function ma(e,t){var n=e.type.contextTypes;if(!n)return ua;var o=e.stateNode;if(o&&o.__reactInternalMemoizedUnmaskedChildContext===t)return o.__reactInternalMemoizedMaskedChildContext;var a,i={};for(a in n)i[a]=t[a];return o&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function ga(e){return null!=(e=e.childContextTypes)}function _a(){pa(ha),pa(ya)}function ka(e,t,n){if(ya.current!==ua)throw Error(r(168));ba(ya,t),ba(ha,n)}function va(e,t,n){var o=e.stateNode;if(e=t.childContextTypes,"function"!=typeof o.getChildContext)return n;for(var i in o=o.getChildContext())if(!(i in e))throw Error(r(108,$(t)||"Unknown",i));return a({},n,o)}function Ba(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ua,fa=ya.current,ba(ya,e),ba(ha,ha.current),!0}function xa(e,t,n){var o=e.stateNode;if(!o)throw Error(r(169));n?(e=va(e,t,fa),o.__reactInternalMemoizedMergedChildContext=e,pa(ha),pa(ya),ba(ya,e)):pa(ha),ba(ha,n)}var wa=null,qa=null,Ta=i.unstable_runWithPriority,Ea=i.unstable_scheduleCallback,Sa=i.unstable_cancelCallback,Ca=i.unstable_shouldYield,Aa=i.unstable_requestPaint,Pa=i.unstable_now,Ra=i.unstable_getCurrentPriorityLevel,Ia=i.unstable_ImmediatePriority,La=i.unstable_UserBlockingPriority,Na=i.unstable_NormalPriority,Da=i.unstable_LowPriority,ja=i.unstable_IdlePriority,Ua={},Qa=void 0!==Aa?Aa:function(){},Oa=null,Ma=null,Fa=!1,za=Pa(),Ha=1e4>za?Pa:function(){return Pa()-za};function Za(){switch(Ra()){case Ia:return 99;case La:return 98;case Na:return 97;case Da:return 96;case ja:return 95;default:throw Error(r(332))}}function Ga(e){switch(e){case 99:return Ia;case 98:return La;case 97:return Na;case 96:return Da;case 95:return ja;default:throw Error(r(332))}}function $a(e,t){return e=Ga(e),Ta(e,t)}function Ka(e,t,n){return e=Ga(e),Ea(e,t,n)}function Va(){if(null!==Ma){var e=Ma;Ma=null,Sa(e)}Wa()}function Wa(){if(!Fa&&null!==Oa){Fa=!0;var e=0;try{var t=Oa;$a(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Oa=null}catch(n){throw null!==Oa&&(Oa=Oa.slice(e+1)),Ea(Ia,Va),n}finally{Fa=!1}}}var Ja=v.ReactCurrentBatchConfig;function Ya(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Xa=da(null),ei=null,ti=null,ni=null;function oi(){ni=ti=ei=null}function ai(e){var t=Xa.current;pa(Xa),e.type._context._currentValue=t}function ii(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function ri(e,t){ei=e,ni=ti=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(jr=!0),e.firstContext=null)}function si(e,t){if(ni!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ni=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ti){if(null===ei)throw Error(r(308));ti=t,ei.dependencies={lanes:0,firstContext:t,responders:null}}else ti=ti.next=t;return e._currentValue}var li=!1;function ci(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function di(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function pi(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function bi(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ui(e,t){var n=e.updateQueue,o=e.alternate;if(null!==o&&n===(o=o.updateQueue)){var a=null,i=null;if(null!==(n=n.firstBaseUpdate)){do{var r={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===i?a=i=r:i=i.next=r,n=n.next}while(null!==n);null===i?a=i=t:i=i.next=t}else a=i=t;return n={baseState:o.baseState,firstBaseUpdate:a,lastBaseUpdate:i,shared:o.shared,effects:o.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function yi(e,t,n,o){var i=e.updateQueue;li=!1;var r=i.firstBaseUpdate,s=i.lastBaseUpdate,l=i.shared.pending;if(null!==l){i.shared.pending=null;var c=l,d=c.next;c.next=null,null===s?r=d:s.next=d,s=c;var p=e.alternate;if(null!==p){var b=(p=p.updateQueue).lastBaseUpdate;b!==s&&(null===b?p.firstBaseUpdate=d:b.next=d,p.lastBaseUpdate=c)}}if(null!==r){for(b=i.baseState,s=0,p=d=c=null;;){l=r.lane;var u=r.eventTime;if((o&l)===l){null!==p&&(p=p.next={eventTime:u,lane:0,tag:r.tag,payload:r.payload,callback:r.callback,next:null});e:{var y=e,h=r;switch(l=t,u=n,h.tag){case 1:if("function"==typeof(y=h.payload)){b=y.call(u,b,l);break e}b=y;break e;case 3:y.flags=-4097&y.flags|64;case 0:if(null==(l="function"==typeof(y=h.payload)?y.call(u,b,l):y))break e;b=a({},b,l);break e;case 2:li=!0}}null!==r.callback&&(e.flags|=32,null===(l=i.effects)?i.effects=[r]:l.push(r))}else u={eventTime:u,lane:l,tag:r.tag,payload:r.payload,callback:r.callback,next:null},null===p?(d=p=u,c=b):p=p.next=u,s|=l;if(null===(r=r.next)){if(null===(l=i.shared.pending))break;r=l.next,l.next=null,i.lastBaseUpdate=l,i.shared.pending=null}}null===p&&(c=b),i.baseState=c,i.firstBaseUpdate=d,i.lastBaseUpdate=p,Ms|=s,e.lanes=s,e.memoizedState=b}}function hi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var o=e[t],a=o.callback;if(null!==a){if(o.callback=null,o=n,"function"!=typeof a)throw Error(r(191,a));a.call(o)}}}var fi=(new o.Component).refs;function mi(e,t,n,o){n=null==(n=n(o,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var gi={isMounted:function(e){return!!(e=e._reactInternals)&&We(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var o=bl(),a=ul(e),i=pi(o,a);i.payload=t,null!=n&&(i.callback=n),bi(e,i),yl(e,a,o)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var o=bl(),a=ul(e),i=pi(o,a);i.tag=1,i.payload=t,null!=n&&(i.callback=n),bi(e,i),yl(e,a,o)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=bl(),o=ul(e),a=pi(n,o);a.tag=2,null!=t&&(a.callback=t),bi(e,a),yl(e,o,n)}};function _i(e,t,n,o,a,i,r){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(o,i,r):!t.prototype||!t.prototype.isPureReactComponent||(!uo(n,o)||!uo(a,i))}function ki(e,t,n){var o=!1,a=ua,i=t.contextType;return"object"==typeof i&&null!==i?i=si(i):(a=ga(t)?fa:ya.current,i=(o=null!=(o=t.contextTypes))?ma(e,a):ua),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=gi,e.stateNode=t,t._reactInternals=e,o&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=i),t}function vi(e,t,n,o){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,o),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,o),t.state!==e&&gi.enqueueReplaceState(t,t.state,null)}function Bi(e,t,n,o){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=fi,ci(e);var i=t.contextType;"object"==typeof i&&null!==i?a.context=si(i):(i=ga(t)?fa:ya.current,a.context=ma(e,i)),yi(e,n,a,o),a.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(mi(e,t,i,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&gi.enqueueReplaceState(a,a.state,null),yi(e,n,a,o),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var xi=Array.isArray;function wi(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(r(309));var o=n.stateNode}if(!o)throw Error(r(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:(t=function(e){var t=o.refs;t===fi&&(t=o.refs={}),null===e?delete t[a]:t[a]=e},t._stringRef=a,t)}if("string"!=typeof e)throw Error(r(284));if(!n._owner)throw Error(r(290,e))}return e}function qi(e,t){if("textarea"!==e.type)throw Error(r(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function Ti(e){function t(t,n){if(e){var o=t.lastEffect;null!==o?(o.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,o){if(!e)return null;for(;null!==o;)t(n,o),o=o.sibling;return null}function o(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Gl(e,t)).index=0,e.sibling=null,e}function i(t,n,o){return t.index=o,e?null!==(o=t.alternate)?(o=o.index)<n?(t.flags=2,n):o:(t.flags=2,n):n}function s(t){return e&&null===t.alternate&&(t.flags=2),t}function l(e,t,n,o){return null===t||6!==t.tag?((t=Wl(n,e.mode,o)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,o){return null!==t&&t.elementType===n.type?((o=a(t,n.props)).ref=wi(e,t,n),o.return=e,o):((o=$l(n.type,n.key,n.props,null,e.mode,o)).ref=wi(e,t,n),o.return=e,o)}function d(e,t,n,o){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Jl(n,e.mode,o)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function p(e,t,n,o,i){return null===t||7!==t.tag?((t=Kl(n,e.mode,o,i)).return=e,t):((t=a(t,n)).return=e,t)}function b(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Wl(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case B:return(n=$l(t.type,t.key,t.props,null,e.mode,n)).ref=wi(e,null,t),n.return=e,n;case x:return(t=Jl(t,e.mode,n)).return=e,t}if(xi(t)||F(t))return(t=Kl(t,e.mode,n,null)).return=e,t;qi(e,t)}return null}function u(e,t,n,o){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:l(e,t,""+n,o);if("object"==typeof n&&null!==n){switch(n.$$typeof){case B:return n.key===a?n.type===w?p(e,t,n.props.children,o,a):c(e,t,n,o):null;case x:return n.key===a?d(e,t,n,o):null}if(xi(n)||F(n))return null!==a?null:p(e,t,n,o,null);qi(e,n)}return null}function y(e,t,n,o,a){if("string"==typeof o||"number"==typeof o)return l(t,e=e.get(n)||null,""+o,a);if("object"==typeof o&&null!==o){switch(o.$$typeof){case B:return e=e.get(null===o.key?n:o.key)||null,o.type===w?p(t,e,o.props.children,a,o.key):c(t,e,o,a);case x:return d(t,e=e.get(null===o.key?n:o.key)||null,o,a)}if(xi(o)||F(o))return p(t,e=e.get(n)||null,o,a,null);qi(t,o)}return null}function h(a,r,s,l){for(var c=null,d=null,p=r,h=r=0,f=null;null!==p&&h<s.length;h++){p.index>h?(f=p,p=null):f=p.sibling;var m=u(a,p,s[h],l);if(null===m){null===p&&(p=f);break}e&&p&&null===m.alternate&&t(a,p),r=i(m,r,h),null===d?c=m:d.sibling=m,d=m,p=f}if(h===s.length)return n(a,p),c;if(null===p){for(;h<s.length;h++)null!==(p=b(a,s[h],l))&&(r=i(p,r,h),null===d?c=p:d.sibling=p,d=p);return c}for(p=o(a,p);h<s.length;h++)null!==(f=y(p,a,h,s[h],l))&&(e&&null!==f.alternate&&p.delete(null===f.key?h:f.key),r=i(f,r,h),null===d?c=f:d.sibling=f,d=f);return e&&p.forEach((function(e){return t(a,e)})),c}function f(a,s,l,c){var d=F(l);if("function"!=typeof d)throw Error(r(150));if(null==(l=d.call(l)))throw Error(r(151));for(var p=d=null,h=s,f=s=0,m=null,g=l.next();null!==h&&!g.done;f++,g=l.next()){h.index>f?(m=h,h=null):m=h.sibling;var _=u(a,h,g.value,c);if(null===_){null===h&&(h=m);break}e&&h&&null===_.alternate&&t(a,h),s=i(_,s,f),null===p?d=_:p.sibling=_,p=_,h=m}if(g.done)return n(a,h),d;if(null===h){for(;!g.done;f++,g=l.next())null!==(g=b(a,g.value,c))&&(s=i(g,s,f),null===p?d=g:p.sibling=g,p=g);return d}for(h=o(a,h);!g.done;f++,g=l.next())null!==(g=y(h,a,f,g.value,c))&&(e&&null!==g.alternate&&h.delete(null===g.key?f:g.key),s=i(g,s,f),null===p?d=g:p.sibling=g,p=g);return e&&h.forEach((function(e){return t(a,e)})),d}return function(e,o,i,l){var c="object"==typeof i&&null!==i&&i.type===w&&null===i.key;c&&(i=i.props.children);var d="object"==typeof i&&null!==i;if(d)switch(i.$$typeof){case B:e:{for(d=i.key,c=o;null!==c;){if(c.key===d){if(7===c.tag){if(i.type===w){n(e,c.sibling),(o=a(c,i.props.children)).return=e,e=o;break e}}else if(c.elementType===i.type){n(e,c.sibling),(o=a(c,i.props)).ref=wi(e,c,i),o.return=e,e=o;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===w?((o=Kl(i.props.children,e.mode,l,i.key)).return=e,e=o):((l=$l(i.type,i.key,i.props,null,e.mode,l)).ref=wi(e,o,i),l.return=e,e=l)}return s(e);case x:e:{for(c=i.key;null!==o;){if(o.key===c){if(4===o.tag&&o.stateNode.containerInfo===i.containerInfo&&o.stateNode.implementation===i.implementation){n(e,o.sibling),(o=a(o,i.children||[])).return=e,e=o;break e}n(e,o);break}t(e,o),o=o.sibling}(o=Jl(i,e.mode,l)).return=e,e=o}return s(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==o&&6===o.tag?(n(e,o.sibling),(o=a(o,i)).return=e,e=o):(n(e,o),(o=Wl(i,e.mode,l)).return=e,e=o),s(e);if(xi(i))return h(e,o,i,l);if(F(i))return f(e,o,i,l);if(d&&qi(e,i),void 0===i&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(r(152,$(e.type)||"Component"))}return n(e,o)}}var Ei=Ti(!0),Si=Ti(!1),Ci={},Ai=da(Ci),Pi=da(Ci),Ri=da(Ci);function Ii(e){if(e===Ci)throw Error(r(174));return e}function Li(e,t){switch(ba(Ri,t),ba(Pi,e),ba(Ai,Ci),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ye(null,"");break;default:t=ye(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}pa(Ai),ba(Ai,t)}function Ni(){pa(Ai),pa(Pi),pa(Ri)}function Di(e){Ii(Ri.current);var t=Ii(Ai.current),n=ye(t,e.type);t!==n&&(ba(Pi,e),ba(Ai,n))}function ji(e){Pi.current===e&&(pa(Ai),pa(Pi))}var Ui=da(0);function Qi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Oi=null,Mi=null,Fi=!1;function zi(e,t){var n=Hl(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Hi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Zi(e){if(Fi){var t=Mi;if(t){var n=t;if(!Hi(e,t)){if(!(t=Vo(n.nextSibling))||!Hi(e,t))return e.flags=-1025&e.flags|2,Fi=!1,void(Oi=e);zi(Oi,n)}Oi=e,Mi=Vo(t.firstChild)}else e.flags=-1025&e.flags|2,Fi=!1,Oi=e}}function Gi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Oi=e}function $i(e){if(e!==Oi)return!1;if(!Fi)return Gi(e),Fi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Zo(t,e.memoizedProps))for(t=Mi;t;)zi(e,t),t=Vo(t.nextSibling);if(Gi(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(r(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Mi=Vo(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Mi=null}}else Mi=Oi?Vo(e.stateNode.nextSibling):null;return!0}function Ki(){Mi=Oi=null,Fi=!1}var Vi=[];function Wi(){for(var e=0;e<Vi.length;e++)Vi[e]._workInProgressVersionPrimary=null;Vi.length=0}var Ji=v.ReactCurrentDispatcher,Yi=v.ReactCurrentBatchConfig,Xi=0,er=null,tr=null,nr=null,or=!1,ar=!1;function ir(){throw Error(r(321))}function rr(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!po(e[n],t[n]))return!1;return!0}function sr(e,t,n,o,a,i){if(Xi=i,er=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Ji.current=null===e||null===e.memoizedState?Ir:Lr,e=n(o,a),ar){i=0;do{if(ar=!1,!(25>i))throw Error(r(301));i+=1,nr=tr=null,t.updateQueue=null,Ji.current=Nr,e=n(o,a)}while(ar)}if(Ji.current=Rr,t=null!==tr&&null!==tr.next,Xi=0,nr=tr=er=null,or=!1,t)throw Error(r(300));return e}function lr(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===nr?er.memoizedState=nr=e:nr=nr.next=e,nr}function cr(){if(null===tr){var e=er.alternate;e=null!==e?e.memoizedState:null}else e=tr.next;var t=null===nr?er.memoizedState:nr.next;if(null!==t)nr=t,tr=e;else{if(null===e)throw Error(r(310));e={memoizedState:(tr=e).memoizedState,baseState:tr.baseState,baseQueue:tr.baseQueue,queue:tr.queue,next:null},null===nr?er.memoizedState=nr=e:nr=nr.next=e}return nr}function dr(e,t){return"function"==typeof t?t(e):t}function pr(e){var t=cr(),n=t.queue;if(null===n)throw Error(r(311));n.lastRenderedReducer=e;var o=tr,a=o.baseQueue,i=n.pending;if(null!==i){if(null!==a){var s=a.next;a.next=i.next,i.next=s}o.baseQueue=a=i,n.pending=null}if(null!==a){a=a.next,o=o.baseState;var l=s=i=null,c=a;do{var d=c.lane;if((Xi&d)===d)null!==l&&(l=l.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),o=c.eagerReducer===e?c.eagerState:e(o,c.action);else{var p={lane:d,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===l?(s=l=p,i=o):l=l.next=p,er.lanes|=d,Ms|=d}c=c.next}while(null!==c&&c!==a);null===l?i=o:l.next=s,po(o,t.memoizedState)||(jr=!0),t.memoizedState=o,t.baseState=i,t.baseQueue=l,n.lastRenderedState=o}return[t.memoizedState,n.dispatch]}function br(e){var t=cr(),n=t.queue;if(null===n)throw Error(r(311));n.lastRenderedReducer=e;var o=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var s=a=a.next;do{i=e(i,s.action),s=s.next}while(s!==a);po(i,t.memoizedState)||(jr=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,o]}function ur(e,t,n){var o=t._getVersion;o=o(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===o:(e=e.mutableReadLanes,(e=(Xi&e)===e)&&(t._workInProgressVersionPrimary=o,Vi.push(t))),e)return n(t._source);throw Vi.push(t),Error(r(350))}function yr(e,t,n,o){var a=Is;if(null===a)throw Error(r(349));var i=t._getVersion,s=i(t._source),l=Ji.current,c=l.useState((function(){return ur(a,t,n)})),d=c[1],p=c[0];c=nr;var b=e.memoizedState,u=b.refs,y=u.getSnapshot,h=b.source;b=b.subscribe;var f=er;return e.memoizedState={refs:u,source:t,subscribe:o},l.useEffect((function(){u.getSnapshot=n,u.setSnapshot=d;var e=i(t._source);if(!po(s,e)){e=n(t._source),po(p,e)||(d(e),e=ul(f),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var o=a.entanglements,r=e;0<r;){var l=31-Ht(r),c=1<<l;o[l]|=e,r&=~c}}}),[n,t,o]),l.useEffect((function(){return o(t._source,(function(){var e=u.getSnapshot,n=u.setSnapshot;try{n(e(t._source));var o=ul(f);a.mutableReadLanes|=o&a.pendingLanes}catch(i){n((function(){throw i}))}}))}),[t,o]),po(y,n)&&po(h,t)&&po(b,o)||((e={pending:null,dispatch:null,lastRenderedReducer:dr,lastRenderedState:p}).dispatch=d=Pr.bind(null,er,e),c.queue=e,c.baseQueue=null,p=ur(a,t,n),c.memoizedState=c.baseState=p),p}function hr(e,t,n){return yr(cr(),e,t,n)}function fr(e){var t=lr();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:dr,lastRenderedState:e}).dispatch=Pr.bind(null,er,e),[t.memoizedState,e]}function mr(e,t,n,o){return e={tag:e,create:t,destroy:n,deps:o,next:null},null===(t=er.updateQueue)?(t={lastEffect:null},er.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(o=n.next,n.next=e,e.next=o,t.lastEffect=e),e}function gr(e){return e={current:e},lr().memoizedState=e}function _r(){return cr().memoizedState}function kr(e,t,n,o){var a=lr();er.flags|=e,a.memoizedState=mr(1|t,n,void 0,void 0===o?null:o)}function vr(e,t,n,o){var a=cr();o=void 0===o?null:o;var i=void 0;if(null!==tr){var r=tr.memoizedState;if(i=r.destroy,null!==o&&rr(o,r.deps))return void mr(t,n,i,o)}er.flags|=e,a.memoizedState=mr(1|t,n,i,o)}function Br(e,t){return kr(516,4,e,t)}function xr(e,t){return vr(516,4,e,t)}function wr(e,t){return vr(4,2,e,t)}function qr(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Tr(e,t,n){return n=null!=n?n.concat([e]):null,vr(4,2,qr.bind(null,t,e),n)}function Er(){}function Sr(e,t){var n=cr();t=void 0===t?null:t;var o=n.memoizedState;return null!==o&&null!==t&&rr(t,o[1])?o[0]:(n.memoizedState=[e,t],e)}function Cr(e,t){var n=cr();t=void 0===t?null:t;var o=n.memoizedState;return null!==o&&null!==t&&rr(t,o[1])?o[0]:(e=e(),n.memoizedState=[e,t],e)}function Ar(e,t){var n=Za();$a(98>n?98:n,(function(){e(!0)})),$a(97<n?97:n,(function(){var n=Yi.transition;Yi.transition=1;try{e(!1),t()}finally{Yi.transition=n}}))}function Pr(e,t,n){var o=bl(),a=ul(e),i={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},r=t.pending;if(null===r?i.next=i:(i.next=r.next,r.next=i),t.pending=i,r=e.alternate,e===er||null!==r&&r===er)ar=or=!0;else{if(0===e.lanes&&(null===r||0===r.lanes)&&null!==(r=t.lastRenderedReducer))try{var s=t.lastRenderedState,l=r(s,n);if(i.eagerReducer=r,i.eagerState=l,po(l,s))return}catch(c){}yl(e,a,o)}}var Rr={readContext:si,useCallback:ir,useContext:ir,useEffect:ir,useImperativeHandle:ir,useLayoutEffect:ir,useMemo:ir,useReducer:ir,useRef:ir,useState:ir,useDebugValue:ir,useDeferredValue:ir,useTransition:ir,useMutableSource:ir,useOpaqueIdentifier:ir,unstable_isNewReconciler:!1},Ir={readContext:si,useCallback:function(e,t){return lr().memoizedState=[e,void 0===t?null:t],e},useContext:si,useEffect:Br,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,kr(4,2,qr.bind(null,t,e),n)},useLayoutEffect:function(e,t){return kr(4,2,e,t)},useMemo:function(e,t){var n=lr();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var o=lr();return t=void 0!==n?n(t):t,o.memoizedState=o.baseState=t,e=(e=o.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Pr.bind(null,er,e),[o.memoizedState,e]},useRef:gr,useState:fr,useDebugValue:Er,useDeferredValue:function(e){var t=fr(e),n=t[0],o=t[1];return Br((function(){var t=Yi.transition;Yi.transition=1;try{o(e)}finally{Yi.transition=t}}),[e]),n},useTransition:function(){var e=fr(!1),t=e[0];return gr(e=Ar.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var o=lr();return o.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},yr(o,e,t,n)},useOpaqueIdentifier:function(){if(Fi){var e=!1,t=function(e){return{$$typeof:N,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Jo++).toString(36))),Error(r(355))})),n=fr(t)[1];return 0==(2&er.mode)&&(er.flags|=516,mr(5,(function(){n("r:"+(Jo++).toString(36))}),void 0,null)),t}return fr(t="r:"+(Jo++).toString(36)),t},unstable_isNewReconciler:!1},Lr={readContext:si,useCallback:Sr,useContext:si,useEffect:xr,useImperativeHandle:Tr,useLayoutEffect:wr,useMemo:Cr,useReducer:pr,useRef:_r,useState:function(){return pr(dr)},useDebugValue:Er,useDeferredValue:function(e){var t=pr(dr),n=t[0],o=t[1];return xr((function(){var t=Yi.transition;Yi.transition=1;try{o(e)}finally{Yi.transition=t}}),[e]),n},useTransition:function(){var e=pr(dr)[0];return[_r().current,e]},useMutableSource:hr,useOpaqueIdentifier:function(){return pr(dr)[0]},unstable_isNewReconciler:!1},Nr={readContext:si,useCallback:Sr,useContext:si,useEffect:xr,useImperativeHandle:Tr,useLayoutEffect:wr,useMemo:Cr,useReducer:br,useRef:_r,useState:function(){return br(dr)},useDebugValue:Er,useDeferredValue:function(e){var t=br(dr),n=t[0],o=t[1];return xr((function(){var t=Yi.transition;Yi.transition=1;try{o(e)}finally{Yi.transition=t}}),[e]),n},useTransition:function(){var e=br(dr)[0];return[_r().current,e]},useMutableSource:hr,useOpaqueIdentifier:function(){return br(dr)[0]},unstable_isNewReconciler:!1},Dr=v.ReactCurrentOwner,jr=!1;function Ur(e,t,n,o){t.child=null===e?Si(t,null,n,o):Ei(t,e.child,n,o)}function Qr(e,t,n,o,a){n=n.render;var i=t.ref;return ri(t,a),o=sr(e,t,n,o,i,a),null===e||jr?(t.flags|=1,Ur(e,t,o,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,is(e,t,a))}function Or(e,t,n,o,a,i){if(null===e){var r=n.type;return"function"!=typeof r||Zl(r)||void 0!==r.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=$l(n.type,null,o,t,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=r,Mr(e,t,r,o,a,i))}return r=e.child,0==(a&i)&&(a=r.memoizedProps,(n=null!==(n=n.compare)?n:uo)(a,o)&&e.ref===t.ref)?is(e,t,i):(t.flags|=1,(e=Gl(r,o)).ref=t.ref,e.return=t,t.child=e)}function Mr(e,t,n,o,a,i){if(null!==e&&uo(e.memoizedProps,o)&&e.ref===t.ref){if(jr=!1,0==(i&a))return t.lanes=e.lanes,is(e,t,i);0!=(16384&e.flags)&&(jr=!0)}return Hr(e,t,n,o,i)}function Fr(e,t,n){var o=t.pendingProps,a=o.children,i=null!==e?e.memoizedState:null;if("hidden"===o.mode||"unstable-defer-without-hiding"===o.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},Bl(t,n);else{if(0==(1073741824&n))return e=null!==i?i.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},Bl(t,e),null;t.memoizedState={baseLanes:0},Bl(t,null!==i?i.baseLanes:n)}else null!==i?(o=i.baseLanes|n,t.memoizedState=null):o=n,Bl(t,o);return Ur(e,t,a,n),t.child}function zr(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Hr(e,t,n,o,a){var i=ga(n)?fa:ya.current;return i=ma(t,i),ri(t,a),n=sr(e,t,n,o,i,a),null===e||jr?(t.flags|=1,Ur(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,is(e,t,a))}function Zr(e,t,n,o,a){if(ga(n)){var i=!0;Ba(t)}else i=!1;if(ri(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),ki(t,n,o),Bi(t,n,o,a),o=!0;else if(null===e){var r=t.stateNode,s=t.memoizedProps;r.props=s;var l=r.context,c=n.contextType;"object"==typeof c&&null!==c?c=si(c):c=ma(t,c=ga(n)?fa:ya.current);var d=n.getDerivedStateFromProps,p="function"==typeof d||"function"==typeof r.getSnapshotBeforeUpdate;p||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(s!==o||l!==c)&&vi(t,r,o,c),li=!1;var b=t.memoizedState;r.state=b,yi(t,o,r,a),l=t.memoizedState,s!==o||b!==l||ha.current||li?("function"==typeof d&&(mi(t,n,d,o),l=t.memoizedState),(s=li||_i(t,n,s,o,b,l,c))?(p||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||("function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount()),"function"==typeof r.componentDidMount&&(t.flags|=4)):("function"==typeof r.componentDidMount&&(t.flags|=4),t.memoizedProps=o,t.memoizedState=l),r.props=o,r.state=l,r.context=c,o=s):("function"==typeof r.componentDidMount&&(t.flags|=4),o=!1)}else{r=t.stateNode,di(e,t),s=t.memoizedProps,c=t.type===t.elementType?s:Ya(t.type,s),r.props=c,p=t.pendingProps,b=r.context,"object"==typeof(l=n.contextType)&&null!==l?l=si(l):l=ma(t,l=ga(n)?fa:ya.current);var u=n.getDerivedStateFromProps;(d="function"==typeof u||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(s!==p||b!==l)&&vi(t,r,o,l),li=!1,b=t.memoizedState,r.state=b,yi(t,o,r,a);var y=t.memoizedState;s!==p||b!==y||ha.current||li?("function"==typeof u&&(mi(t,n,u,o),y=t.memoizedState),(c=li||_i(t,n,c,o,b,y,l))?(d||"function"!=typeof r.UNSAFE_componentWillUpdate&&"function"!=typeof r.componentWillUpdate||("function"==typeof r.componentWillUpdate&&r.componentWillUpdate(o,y,l),"function"==typeof r.UNSAFE_componentWillUpdate&&r.UNSAFE_componentWillUpdate(o,y,l)),"function"==typeof r.componentDidUpdate&&(t.flags|=4),"function"==typeof r.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof r.componentDidUpdate||s===e.memoizedProps&&b===e.memoizedState||(t.flags|=4),"function"!=typeof r.getSnapshotBeforeUpdate||s===e.memoizedProps&&b===e.memoizedState||(t.flags|=256),t.memoizedProps=o,t.memoizedState=y),r.props=o,r.state=y,r.context=l,o=c):("function"!=typeof r.componentDidUpdate||s===e.memoizedProps&&b===e.memoizedState||(t.flags|=4),"function"!=typeof r.getSnapshotBeforeUpdate||s===e.memoizedProps&&b===e.memoizedState||(t.flags|=256),o=!1)}return Gr(e,t,n,o,i,a)}function Gr(e,t,n,o,a,i){zr(e,t);var r=0!=(64&t.flags);if(!o&&!r)return a&&xa(t,n,!1),is(e,t,i);o=t.stateNode,Dr.current=t;var s=r&&"function"!=typeof n.getDerivedStateFromError?null:o.render();return t.flags|=1,null!==e&&r?(t.child=Ei(t,e.child,null,i),t.child=Ei(t,null,s,i)):Ur(e,t,s,i),t.memoizedState=o.state,a&&xa(t,n,!0),t.child}function $r(e){var t=e.stateNode;t.pendingContext?ka(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ka(0,t.context,!1),Li(e,t.containerInfo)}var Kr,Vr,Wr,Jr={dehydrated:null,retryLane:0};function Yr(e,t,n){var o,a=t.pendingProps,i=Ui.current,r=!1;return(o=0!=(64&t.flags))||(o=(null===e||null!==e.memoizedState)&&0!=(2&i)),o?(r=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(i|=1),ba(Ui,1&i),null===e?(void 0!==a.fallback&&Zi(t),e=a.children,i=a.fallback,r?(e=Xr(t,e,i,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Jr,e):"number"==typeof a.unstable_expectedLoadTime?(e=Xr(t,e,i,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Jr,t.lanes=33554432,e):((n=Vl({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,r?(a=ts(e,t,a.children,a.fallback,n),r=t.child,i=e.child.memoizedState,r.memoizedState=null===i?{baseLanes:n}:{baseLanes:i.baseLanes|n},r.childLanes=e.childLanes&~n,t.memoizedState=Jr,a):(n=es(e,t,a.children,n),t.memoizedState=null,n))}function Xr(e,t,n,o){var a=e.mode,i=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==i?(i.childLanes=0,i.pendingProps=t):i=Vl(t,a,0,null),n=Kl(n,a,o,null),i.return=e,n.return=e,i.sibling=n,e.child=i,n}function es(e,t,n,o){var a=e.child;return e=a.sibling,n=Gl(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=o),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}function ts(e,t,n,o,a){var i=t.mode,r=e.child;e=r.sibling;var s={mode:"hidden",children:n};return 0==(2&i)&&t.child!==r?((n=t.child).childLanes=0,n.pendingProps=s,null!==(r=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=r,r.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Gl(r,s),null!==e?o=Gl(e,o):(o=Kl(o,i,a,null)).flags|=2,o.return=t,n.return=t,n.sibling=o,t.child=n,o}function ns(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),ii(e.return,t)}function os(e,t,n,o,a,i){var r=e.memoizedState;null===r?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:o,tail:n,tailMode:a,lastEffect:i}:(r.isBackwards=t,r.rendering=null,r.renderingStartTime=0,r.last=o,r.tail=n,r.tailMode=a,r.lastEffect=i)}function as(e,t,n){var o=t.pendingProps,a=o.revealOrder,i=o.tail;if(Ur(e,t,o.children,n),0!=(2&(o=Ui.current)))o=1&o|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&ns(e,n);else if(19===e.tag)ns(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}o&=1}if(ba(Ui,o),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Qi(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),os(t,!1,a,n,i,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Qi(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}os(t,!0,n,null,i,t.lastEffect);break;case"together":os(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function is(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ms|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(r(153));if(null!==t.child){for(n=Gl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Gl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function rs(e,t){if(!Fi)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var o=null;null!==n;)null!==n.alternate&&(o=n),n=n.sibling;null===o?t||null===e.tail?e.tail=null:e.tail.sibling=null:o.sibling=null}}function ss(e,t,n){var o=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return ga(t.type)&&_a(),null;case 3:return Ni(),pa(ha),pa(ya),Wi(),(o=t.stateNode).pendingContext&&(o.context=o.pendingContext,o.pendingContext=null),null!==e&&null!==e.child||($i(t)?t.flags|=4:o.hydrate||(t.flags|=256)),null;case 5:ji(t);var i=Ii(Ri.current);if(n=t.type,null!==e&&null!=t.stateNode)Vr(e,t,n,o),e.ref!==t.ref&&(t.flags|=128);else{if(!o){if(null===t.stateNode)throw Error(r(166));return null}if(e=Ii(Ai.current),$i(t)){o=t.stateNode,n=t.type;var s=t.memoizedProps;switch(o[Xo]=t,o[ea]=s,n){case"dialog":Po("cancel",o),Po("close",o);break;case"iframe":case"object":case"embed":Po("load",o);break;case"video":case"audio":for(e=0;e<Eo.length;e++)Po(Eo[e],o);break;case"source":Po("error",o);break;case"img":case"image":case"link":Po("error",o),Po("load",o);break;case"details":Po("toggle",o);break;case"input":ee(o,s),Po("invalid",o);break;case"select":o._wrapperState={wasMultiple:!!s.multiple},Po("invalid",o);break;case"textarea":le(o,s),Po("invalid",o)}for(var c in we(n,s),e=null,s)s.hasOwnProperty(c)&&(i=s[c],"children"===c?"string"==typeof i?o.textContent!==i&&(e=["children",i]):"number"==typeof i&&o.textContent!==""+i&&(e=["children",""+i]):l.hasOwnProperty(c)&&null!=i&&"onScroll"===c&&Po("scroll",o));switch(n){case"input":W(o),oe(o,s,!0);break;case"textarea":W(o),de(o);break;case"select":case"option":break;default:"function"==typeof s.onClick&&(o.onclick=Mo)}o=e,t.updateQueue=o,null!==o&&(t.flags|=4)}else{switch(c=9===i.nodeType?i:i.ownerDocument,e===pe&&(e=ue(n)),e===pe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof o.is?e=c.createElement(n,{is:o.is}):(e=c.createElement(n),"select"===n&&(c=e,o.multiple?c.multiple=!0:o.size&&(c.size=o.size))):e=c.createElementNS(e,n),e[Xo]=t,e[ea]=o,Kr(e,t),t.stateNode=e,c=qe(n,o),n){case"dialog":Po("cancel",e),Po("close",e),i=o;break;case"iframe":case"object":case"embed":Po("load",e),i=o;break;case"video":case"audio":for(i=0;i<Eo.length;i++)Po(Eo[i],e);i=o;break;case"source":Po("error",e),i=o;break;case"img":case"image":case"link":Po("error",e),Po("load",e),i=o;break;case"details":Po("toggle",e),i=o;break;case"input":ee(e,o),i=X(e,o),Po("invalid",e);break;case"option":i=ie(e,o);break;case"select":e._wrapperState={wasMultiple:!!o.multiple},i=a({},o,{value:void 0}),Po("invalid",e);break;case"textarea":le(e,o),i=se(e,o),Po("invalid",e);break;default:i=o}we(n,i);var d=i;for(s in d)if(d.hasOwnProperty(s)){var p=d[s];"style"===s?Be(e,p):"dangerouslySetInnerHTML"===s?null!=(p=p?p.__html:void 0)&&me(e,p):"children"===s?"string"==typeof p?("textarea"!==n||""!==p)&&ge(e,p):"number"==typeof p&&ge(e,""+p):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(l.hasOwnProperty(s)?null!=p&&"onScroll"===s&&Po("scroll",e):null!=p&&k(e,s,p,c))}switch(n){case"input":W(e),oe(e,o,!1);break;case"textarea":W(e),de(e);break;case"option":null!=o.value&&e.setAttribute("value",""+K(o.value));break;case"select":e.multiple=!!o.multiple,null!=(s=o.value)?re(e,!!o.multiple,s,!1):null!=o.defaultValue&&re(e,!!o.multiple,o.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=Mo)}Ho(n,o)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Wr(0,t,e.memoizedProps,o);else{if("string"!=typeof o&&null===t.stateNode)throw Error(r(166));n=Ii(Ri.current),Ii(Ai.current),$i(t)?(o=t.stateNode,n=t.memoizedProps,o[Xo]=t,o.nodeValue!==n&&(t.flags|=4)):((o=(9===n.nodeType?n:n.ownerDocument).createTextNode(o))[Xo]=t,t.stateNode=o)}return null;case 13:return pa(Ui),o=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(o=null!==o,n=!1,null===e?void 0!==t.memoizedProps.fallback&&$i(t):n=null!==e.memoizedState,o&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ui.current)?0===Us&&(Us=3):(0!==Us&&3!==Us||(Us=4),null===Is||0==(134217727&Ms)&&0==(134217727&Fs)||gl(Is,Ns))),(o||n)&&(t.flags|=4),null);case 4:return Ni(),null===e&&Io(t.stateNode.containerInfo),null;case 10:return ai(t),null;case 19:if(pa(Ui),null===(o=t.memoizedState))return null;if(s=0!=(64&t.flags),null===(c=o.rendering))if(s)rs(o,!1);else{if(0!==Us||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=Qi(e))){for(t.flags|=64,rs(o,!1),null!==(s=c.updateQueue)&&(t.updateQueue=s,t.flags|=4),null===o.lastEffect&&(t.firstEffect=null),t.lastEffect=o.lastEffect,o=n,n=t.child;null!==n;)e=o,(s=n).flags&=2,s.nextEffect=null,s.firstEffect=null,s.lastEffect=null,null===(c=s.alternate)?(s.childLanes=0,s.lanes=e,s.child=null,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null,s.stateNode=null):(s.childLanes=c.childLanes,s.lanes=c.lanes,s.child=c.child,s.memoizedProps=c.memoizedProps,s.memoizedState=c.memoizedState,s.updateQueue=c.updateQueue,s.type=c.type,e=c.dependencies,s.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ba(Ui,1&Ui.current|2),t.child}e=e.sibling}null!==o.tail&&Ha()>Gs&&(t.flags|=64,s=!0,rs(o,!1),t.lanes=33554432)}else{if(!s)if(null!==(e=Qi(c))){if(t.flags|=64,s=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),rs(o,!0),null===o.tail&&"hidden"===o.tailMode&&!c.alternate&&!Fi)return null!==(t=t.lastEffect=o.lastEffect)&&(t.nextEffect=null),null}else 2*Ha()-o.renderingStartTime>Gs&&1073741824!==n&&(t.flags|=64,s=!0,rs(o,!1),t.lanes=33554432);o.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=o.last)?n.sibling=c:t.child=c,o.last=c)}return null!==o.tail?(n=o.tail,o.rendering=n,o.tail=n.sibling,o.lastEffect=t.lastEffect,o.renderingStartTime=Ha(),n.sibling=null,t=Ui.current,ba(Ui,s?1&t|2:1&t),n):null;case 23:case 24:return xl(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==o.mode&&(t.flags|=4),null}throw Error(r(156,t.tag))}function ls(e){switch(e.tag){case 1:ga(e.type)&&_a();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Ni(),pa(ha),pa(ya),Wi(),0!=(64&(t=e.flags)))throw Error(r(285));return e.flags=-4097&t|64,e;case 5:return ji(e),null;case 13:return pa(Ui),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return pa(Ui),null;case 4:return Ni(),null;case 10:return ai(e),null;case 23:case 24:return xl(),null;default:return null}}function cs(e,t){try{var n="",o=t;do{n+=G(o),o=o.return}while(o);var a=n}catch(i){a="\nError generating stack: "+i.message+"\n"+i.stack}return{value:e,source:t,stack:a}}function ds(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}Kr=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Vr=function(e,t,n,o){var i=e.memoizedProps;if(i!==o){e=t.stateNode,Ii(Ai.current);var r,s=null;switch(n){case"input":i=X(e,i),o=X(e,o),s=[];break;case"option":i=ie(e,i),o=ie(e,o),s=[];break;case"select":i=a({},i,{value:void 0}),o=a({},o,{value:void 0}),s=[];break;case"textarea":i=se(e,i),o=se(e,o),s=[];break;default:"function"!=typeof i.onClick&&"function"==typeof o.onClick&&(e.onclick=Mo)}for(p in we(n,o),n=null,i)if(!o.hasOwnProperty(p)&&i.hasOwnProperty(p)&&null!=i[p])if("style"===p){var c=i[p];for(r in c)c.hasOwnProperty(r)&&(n||(n={}),n[r]="")}else"dangerouslySetInnerHTML"!==p&&"children"!==p&&"suppressContentEditableWarning"!==p&&"suppressHydrationWarning"!==p&&"autoFocus"!==p&&(l.hasOwnProperty(p)?s||(s=[]):(s=s||[]).push(p,null));for(p in o){var d=o[p];if(c=null!=i?i[p]:void 0,o.hasOwnProperty(p)&&d!==c&&(null!=d||null!=c))if("style"===p)if(c){for(r in c)!c.hasOwnProperty(r)||d&&d.hasOwnProperty(r)||(n||(n={}),n[r]="");for(r in d)d.hasOwnProperty(r)&&c[r]!==d[r]&&(n||(n={}),n[r]=d[r])}else n||(s||(s=[]),s.push(p,n)),n=d;else"dangerouslySetInnerHTML"===p?(d=d?d.__html:void 0,c=c?c.__html:void 0,null!=d&&c!==d&&(s=s||[]).push(p,d)):"children"===p?"string"!=typeof d&&"number"!=typeof d||(s=s||[]).push(p,""+d):"suppressContentEditableWarning"!==p&&"suppressHydrationWarning"!==p&&(l.hasOwnProperty(p)?(null!=d&&"onScroll"===p&&Po("scroll",e),s||c===d||(s=[])):"object"==typeof d&&null!==d&&d.$$typeof===N?d.toString():(s=s||[]).push(p,d))}n&&(s=s||[]).push("style",n);var p=s;(t.updateQueue=p)&&(t.flags|=4)}},Wr=function(e,t,n,o){n!==o&&(t.flags|=4)};var ps="function"==typeof WeakMap?WeakMap:Map;function bs(e,t,n){(n=pi(-1,n)).tag=3,n.payload={element:null};var o=t.value;return n.callback=function(){Ws||(Ws=!0,Js=o),ds(0,t)},n}function us(e,t,n){(n=pi(-1,n)).tag=3;var o=e.type.getDerivedStateFromError;if("function"==typeof o){var a=t.value;n.payload=function(){return ds(0,t),o(a)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof o&&(null===Ys?Ys=new Set([this]):Ys.add(this),ds(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ys="function"==typeof WeakSet?WeakSet:Set;function hs(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(n){Ol(e,n)}else t.current=null}function fs(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,o=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Ya(t.type,n),o),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Ko(t.stateNode.containerInfo))}throw Error(r(163))}function ms(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var o=e.create;e.destroy=o()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;o=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(jl(n,e),Dl(n,e)),e=o}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(o=n.elementType===n.type?t.memoizedProps:Ya(n.type,t.memoizedProps),e.componentDidUpdate(o,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&hi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}hi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Ho(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Bt(n)))))}throw Error(r(163))}function gs(e,t){for(var n=e;;){if(5===n.tag){var o=n.stateNode;if(t)"function"==typeof(o=o.style).setProperty?o.setProperty("display","none","important"):o.display="none";else{o=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,o.style.display=ve("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function _s(e,t){if(qa&&"function"==typeof qa.onCommitFiberUnmount)try{qa.onCommitFiberUnmount(wa,t)}catch(i){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var o=n,a=o.destroy;if(o=o.tag,void 0!==a)if(0!=(4&o))jl(t,n);else{o=t;try{a()}catch(i){Ol(o,i)}}n=n.next}while(n!==e)}break;case 1:if(hs(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(i){Ol(t,i)}break;case 5:hs(t);break;case 4:qs(e,t)}}function ks(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function vs(e){return 5===e.tag||3===e.tag||4===e.tag}function Bs(e){e:{for(var t=e.return;null!==t;){if(vs(t))break e;t=t.return}throw Error(r(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var o=!1;break;case 3:case 4:t=t.containerInfo,o=!0;break;default:throw Error(r(161))}16&n.flags&&(ge(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||vs(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}o?xs(e,n,t):ws(e,n,t)}function xs(e,t,n){var o=e.tag,a=5===o||6===o;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Mo));else if(4!==o&&null!==(e=e.child))for(xs(e,t,n),e=e.sibling;null!==e;)xs(e,t,n),e=e.sibling}function ws(e,t,n){var o=e.tag,a=5===o||6===o;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==o&&null!==(e=e.child))for(ws(e,t,n),e=e.sibling;null!==e;)ws(e,t,n),e=e.sibling}function qs(e,t){for(var n,o,a=t,i=!1;;){if(!i){i=a.return;e:for(;;){if(null===i)throw Error(r(160));switch(n=i.stateNode,i.tag){case 5:o=!1;break e;case 3:case 4:n=n.containerInfo,o=!0;break e}i=i.return}i=!0}if(5===a.tag||6===a.tag){e:for(var s=e,l=a,c=l;;)if(_s(s,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===l)break e;for(;null===c.sibling;){if(null===c.return||c.return===l)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}o?(s=n,l=a.stateNode,8===s.nodeType?s.parentNode.removeChild(l):s.removeChild(l)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,o=!0,a.child.return=a,a=a.child;continue}}else if(_s(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(i=!1)}a.sibling.return=a.return,a=a.sibling}}function Ts(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var o=n=n.next;do{3==(3&o.tag)&&(e=o.destroy,o.destroy=void 0,void 0!==e&&e()),o=o.next}while(o!==n)}return;case 1:case 12:case 17:return;case 5:if(null!=(n=t.stateNode)){o=t.memoizedProps;var a=null!==e?e.memoizedProps:o;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[ea]=o,"input"===e&&"radio"===o.type&&null!=o.name&&te(n,o),qe(e,a),t=qe(e,o),a=0;a<i.length;a+=2){var s=i[a],l=i[a+1];"style"===s?Be(n,l):"dangerouslySetInnerHTML"===s?me(n,l):"children"===s?ge(n,l):k(n,s,l,t)}switch(e){case"input":ne(n,o);break;case"textarea":ce(n,o);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!o.multiple,null!=(i=o.value)?re(n,!!o.multiple,i,!1):e!==!!o.multiple&&(null!=o.defaultValue?re(n,!!o.multiple,o.defaultValue,!0):re(n,!!o.multiple,o.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(r(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,Bt(n.containerInfo)));case 13:return null!==t.memoizedState&&(Zs=Ha(),gs(t.child,!0)),void Es(t);case 19:return void Es(t);case 23:case 24:return void gs(t,null!==t.memoizedState)}throw Error(r(163))}function Es(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ys),t.forEach((function(t){var o=Fl.bind(null,e,t);n.has(t)||(n.add(t),t.then(o,o))}))}}function Ss(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(t=t.memoizedState)&&null===t.dehydrated)}var Cs=Math.ceil,As=v.ReactCurrentDispatcher,Ps=v.ReactCurrentOwner,Rs=0,Is=null,Ls=null,Ns=0,Ds=0,js=da(0),Us=0,Qs=null,Os=0,Ms=0,Fs=0,zs=0,Hs=null,Zs=0,Gs=1/0;function $s(){Gs=Ha()+500}var Ks,Vs=null,Ws=!1,Js=null,Ys=null,Xs=!1,el=null,tl=90,nl=[],ol=[],al=null,il=0,rl=null,sl=-1,ll=0,cl=0,dl=null,pl=!1;function bl(){return 0!=(48&Rs)?Ha():-1!==sl?sl:sl=Ha()}function ul(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Za()?1:2;if(0===ll&&(ll=Os),0!==Ja.transition){0!==cl&&(cl=null!==Hs?Hs.pendingLanes:0),e=ll;var t=4186112&~cl;return 0===(t&=-t)&&(0===(t=(e=4186112&~e)&-e)&&(t=8192)),t}return e=Za(),0!=(4&Rs)&&98===e?e=Ot(12,ll):e=Ot(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),ll),e}function yl(e,t,n){if(50<il)throw il=0,rl=null,Error(r(185));if(null===(e=hl(e,t)))return null;zt(e,t,n),e===Is&&(Fs|=t,4===Us&&gl(e,Ns));var o=Za();1===t?0!=(8&Rs)&&0==(48&Rs)?_l(e):(fl(e,n),0===Rs&&($s(),Va())):(0==(4&Rs)||98!==o&&99!==o||(null===al?al=new Set([e]):al.add(e)),fl(e,n)),Hs=e}function hl(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function fl(e,t){for(var n=e.callbackNode,o=e.suspendedLanes,a=e.pingedLanes,i=e.expirationTimes,s=e.pendingLanes;0<s;){var l=31-Ht(s),c=1<<l,d=i[l];if(-1===d){if(0==(c&o)||0!=(c&a)){d=t,jt(c);var p=Dt;i[l]=10<=p?d+250:6<=p?d+5e3:-1}}else d<=t&&(e.expiredLanes|=c);s&=~c}if(o=Ut(e,e===Is?Ns:0),t=Dt,0===o)null!==n&&(n!==Ua&&Sa(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ua&&Sa(n)}15===t?(n=_l.bind(null,e),null===Oa?(Oa=[n],Ma=Ea(Ia,Wa)):Oa.push(n),n=Ua):14===t?n=Ka(99,_l.bind(null,e)):(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(r(358,e))}}(t),n=Ka(n,ml.bind(null,e))),e.callbackPriority=t,e.callbackNode=n}}function ml(e){if(sl=-1,cl=ll=0,0!=(48&Rs))throw Error(r(327));var t=e.callbackNode;if(Nl()&&e.callbackNode!==t)return null;var n=Ut(e,e===Is?Ns:0);if(0===n)return null;var o=n,a=Rs;Rs|=16;var i=Tl();for(Is===e&&Ns===o||($s(),wl(e,o));;)try{Cl();break}catch(l){ql(e,l)}if(oi(),As.current=i,Rs=a,null!==Ls?o=0:(Is=null,Ns=0,o=Us),0!=(Os&Fs))wl(e,0);else if(0!==o){if(2===o&&(Rs|=64,e.hydrate&&(e.hydrate=!1,Ko(e.containerInfo)),0!==(n=Qt(e))&&(o=El(e,n))),1===o)throw t=Qs,wl(e,0),gl(e,n),fl(e,Ha()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,o){case 0:case 1:throw Error(r(345));case 2:case 5:Rl(e);break;case 3:if(gl(e,n),(62914560&n)===n&&10<(o=Zs+500-Ha())){if(0!==Ut(e,0))break;if(((a=e.suspendedLanes)&n)!==n){bl(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Go(Rl.bind(null,e),o);break}Rl(e);break;case 4:if(gl(e,n),(4186112&n)===n)break;for(o=e.eventTimes,a=-1;0<n;){var s=31-Ht(n);i=1<<s,(s=o[s])>a&&(a=s),n&=~i}if(n=a,10<(n=(120>(n=Ha()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Cs(n/1960))-n)){e.timeoutHandle=Go(Rl.bind(null,e),n);break}Rl(e);break;default:throw Error(r(329))}}return fl(e,Ha()),e.callbackNode===t?ml.bind(null,e):null}function gl(e,t){for(t&=~zs,t&=~Fs,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Ht(t),o=1<<n;e[n]=-1,t&=~o}}function _l(e){if(0!=(48&Rs))throw Error(r(327));if(Nl(),e===Is&&0!=(e.expiredLanes&Ns)){var t=Ns,n=El(e,t);0!=(Os&Fs)&&(n=El(e,t=Ut(e,t)))}else n=El(e,t=Ut(e,0));if(0!==e.tag&&2===n&&(Rs|=64,e.hydrate&&(e.hydrate=!1,Ko(e.containerInfo)),0!==(t=Qt(e))&&(n=El(e,t))),1===n)throw n=Qs,wl(e,0),gl(e,t),fl(e,Ha()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Rl(e),fl(e,Ha()),null}function kl(e,t){var n=Rs;Rs|=1;try{return e(t)}finally{0===(Rs=n)&&($s(),Va())}}function vl(e,t){var n=Rs;Rs&=-2,Rs|=8;try{return e(t)}finally{0===(Rs=n)&&($s(),Va())}}function Bl(e,t){ba(js,Ds),Ds|=t,Os|=t}function xl(){Ds=js.current,pa(js)}function wl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,$o(n)),null!==Ls)for(n=Ls.return;null!==n;){var o=n;switch(o.tag){case 1:null!=(o=o.type.childContextTypes)&&_a();break;case 3:Ni(),pa(ha),pa(ya),Wi();break;case 5:ji(o);break;case 4:Ni();break;case 13:case 19:pa(Ui);break;case 10:ai(o);break;case 23:case 24:xl()}n=n.return}Is=e,Ls=Gl(e.current,null),Ns=Ds=Os=t,Us=0,Qs=null,zs=Fs=Ms=0}function ql(e,t){for(;;){var n=Ls;try{if(oi(),Ji.current=Rr,or){for(var o=er.memoizedState;null!==o;){var a=o.queue;null!==a&&(a.pending=null),o=o.next}or=!1}if(Xi=0,nr=tr=er=null,ar=!1,Ps.current=null,null===n||null===n.return){Us=1,Qs=t,Ls=null;break}e:{var i=e,r=n.return,s=n,l=t;if(t=Ns,s.flags|=2048,s.firstEffect=s.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var c=l;if(0==(2&s.mode)){var d=s.alternate;d?(s.updateQueue=d.updateQueue,s.memoizedState=d.memoizedState,s.lanes=d.lanes):(s.updateQueue=null,s.memoizedState=null)}var p=0!=(1&Ui.current),b=r;do{var u;if(u=13===b.tag){var y=b.memoizedState;if(null!==y)u=null!==y.dehydrated;else{var h=b.memoizedProps;u=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!p)}}if(u){var f=b.updateQueue;if(null===f){var m=new Set;m.add(c),b.updateQueue=m}else f.add(c);if(0==(2&b.mode)){if(b.flags|=64,s.flags|=16384,s.flags&=-2981,1===s.tag)if(null===s.alternate)s.tag=17;else{var g=pi(-1,1);g.tag=2,bi(s,g)}s.lanes|=1;break e}l=void 0,s=t;var _=i.pingCache;if(null===_?(_=i.pingCache=new ps,l=new Set,_.set(c,l)):void 0===(l=_.get(c))&&(l=new Set,_.set(c,l)),!l.has(s)){l.add(s);var k=Ml.bind(null,i,c,s);c.then(k,k)}b.flags|=4096,b.lanes=t;break e}b=b.return}while(null!==b);l=Error(($(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Us&&(Us=2),l=cs(l,s),b=r;do{switch(b.tag){case 3:i=l,b.flags|=4096,t&=-t,b.lanes|=t,ui(b,bs(0,i,t));break e;case 1:i=l;var v=b.type,B=b.stateNode;if(0==(64&b.flags)&&("function"==typeof v.getDerivedStateFromError||null!==B&&"function"==typeof B.componentDidCatch&&(null===Ys||!Ys.has(B)))){b.flags|=4096,t&=-t,b.lanes|=t,ui(b,us(b,i,t));break e}}b=b.return}while(null!==b)}Pl(n)}catch(x){t=x,Ls===n&&null!==n&&(Ls=n=n.return);continue}break}}function Tl(){var e=As.current;return As.current=Rr,null===e?Rr:e}function El(e,t){var n=Rs;Rs|=16;var o=Tl();for(Is===e&&Ns===t||wl(e,t);;)try{Sl();break}catch(a){ql(e,a)}if(oi(),Rs=n,As.current=o,null!==Ls)throw Error(r(261));return Is=null,Ns=0,Us}function Sl(){for(;null!==Ls;)Al(Ls)}function Cl(){for(;null!==Ls&&!Ca();)Al(Ls)}function Al(e){var t=Ks(e.alternate,e,Ds);e.memoizedProps=e.pendingProps,null===t?Pl(e):Ls=t,Ps.current=null}function Pl(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=ss(n,t,Ds)))return void(Ls=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Ds)||0==(4&n.mode)){for(var o=0,a=n.child;null!==a;)o|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=o}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ls(t)))return n.flags&=2047,void(Ls=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Ls=t);Ls=t=e}while(null!==t);0===Us&&(Us=5)}function Rl(e){var t=Za();return $a(99,Il.bind(null,e,t)),null}function Il(e,t){do{Nl()}while(null!==el);if(0!=(48&Rs))throw Error(r(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(r(177));e.callbackNode=null;var o=n.lanes|n.childLanes,a=o,i=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var s=e.eventTimes,l=e.expirationTimes;0<i;){var c=31-Ht(i),d=1<<c;a[c]=0,s[c]=-1,l[c]=-1,i&=~d}if(null!==al&&0==(24&o)&&al.has(e)&&al.delete(e),e===Is&&(Ls=Is=null,Ns=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){if(a=Rs,Rs|=32,Ps.current=null,Fo=Vt,go(s=mo())){if("selectionStart"in s)l={start:s.selectionStart,end:s.selectionEnd};else e:if(l=(l=s.ownerDocument)&&l.defaultView||window,(d=l.getSelection&&l.getSelection())&&0!==d.rangeCount){l=d.anchorNode,i=d.anchorOffset,c=d.focusNode,d=d.focusOffset;try{l.nodeType,c.nodeType}catch(T){l=null;break e}var p=0,b=-1,u=-1,y=0,h=0,f=s,m=null;t:for(;;){for(var g;f!==l||0!==i&&3!==f.nodeType||(b=p+i),f!==c||0!==d&&3!==f.nodeType||(u=p+d),3===f.nodeType&&(p+=f.nodeValue.length),null!==(g=f.firstChild);)m=f,f=g;for(;;){if(f===s)break t;if(m===l&&++y===i&&(b=p),m===c&&++h===d&&(u=p),null!==(g=f.nextSibling))break;m=(f=m).parentNode}f=g}l=-1===b||-1===u?null:{start:b,end:u}}else l=null;l=l||{start:0,end:0}}else l=null;zo={focusedElem:s,selectionRange:l},Vt=!1,dl=null,pl=!1,Vs=o;do{try{Ll()}catch(T){if(null===Vs)throw Error(r(330));Ol(Vs,T),Vs=Vs.nextEffect}}while(null!==Vs);dl=null,Vs=o;do{try{for(s=e;null!==Vs;){var _=Vs.flags;if(16&_&&ge(Vs.stateNode,""),128&_){var k=Vs.alternate;if(null!==k){var v=k.ref;null!==v&&("function"==typeof v?v(null):v.current=null)}}switch(1038&_){case 2:Bs(Vs),Vs.flags&=-3;break;case 6:Bs(Vs),Vs.flags&=-3,Ts(Vs.alternate,Vs);break;case 1024:Vs.flags&=-1025;break;case 1028:Vs.flags&=-1025,Ts(Vs.alternate,Vs);break;case 4:Ts(Vs.alternate,Vs);break;case 8:qs(s,l=Vs);var B=l.alternate;ks(l),null!==B&&ks(B)}Vs=Vs.nextEffect}}catch(T){if(null===Vs)throw Error(r(330));Ol(Vs,T),Vs=Vs.nextEffect}}while(null!==Vs);if(v=zo,k=mo(),_=v.focusedElem,s=v.selectionRange,k!==_&&_&&_.ownerDocument&&fo(_.ownerDocument.documentElement,_)){null!==s&&go(_)&&(k=s.start,void 0===(v=s.end)&&(v=k),"selectionStart"in _?(_.selectionStart=k,_.selectionEnd=Math.min(v,_.value.length)):(v=(k=_.ownerDocument||document)&&k.defaultView||window).getSelection&&(v=v.getSelection(),l=_.textContent.length,B=Math.min(s.start,l),s=void 0===s.end?B:Math.min(s.end,l),!v.extend&&B>s&&(l=s,s=B,B=l),l=ho(_,B),i=ho(_,s),l&&i&&(1!==v.rangeCount||v.anchorNode!==l.node||v.anchorOffset!==l.offset||v.focusNode!==i.node||v.focusOffset!==i.offset)&&((k=k.createRange()).setStart(l.node,l.offset),v.removeAllRanges(),B>s?(v.addRange(k),v.extend(i.node,i.offset)):(k.setEnd(i.node,i.offset),v.addRange(k))))),k=[];for(v=_;v=v.parentNode;)1===v.nodeType&&k.push({element:v,left:v.scrollLeft,top:v.scrollTop});for("function"==typeof _.focus&&_.focus(),_=0;_<k.length;_++)(v=k[_]).element.scrollLeft=v.left,v.element.scrollTop=v.top}Vt=!!Fo,zo=Fo=null,e.current=n,Vs=o;do{try{for(_=e;null!==Vs;){var x=Vs.flags;if(36&x&&ms(_,Vs.alternate,Vs),128&x){k=void 0;var w=Vs.ref;if(null!==w){var q=Vs.stateNode;Vs.tag,k=q,"function"==typeof w?w(k):w.current=k}}Vs=Vs.nextEffect}}catch(T){if(null===Vs)throw Error(r(330));Ol(Vs,T),Vs=Vs.nextEffect}}while(null!==Vs);Vs=null,Qa(),Rs=a}else e.current=n;if(Xs)Xs=!1,el=e,tl=t;else for(Vs=o;null!==Vs;)t=Vs.nextEffect,Vs.nextEffect=null,8&Vs.flags&&((x=Vs).sibling=null,x.stateNode=null),Vs=t;if(0===(o=e.pendingLanes)&&(Ys=null),1===o?e===rl?il++:(il=0,rl=e):il=0,n=n.stateNode,qa&&"function"==typeof qa.onCommitFiberRoot)try{qa.onCommitFiberRoot(wa,n,void 0,64==(64&n.current.flags))}catch(T){}if(fl(e,Ha()),Ws)throw Ws=!1,e=Js,Js=null,e;return 0!=(8&Rs)||Va(),null}function Ll(){for(;null!==Vs;){var e=Vs.alternate;pl||null===dl||(0!=(8&Vs.flags)?et(Vs,dl)&&(pl=!0):13===Vs.tag&&Ss(e,Vs)&&et(Vs,dl)&&(pl=!0));var t=Vs.flags;0!=(256&t)&&fs(e,Vs),0==(512&t)||Xs||(Xs=!0,Ka(97,(function(){return Nl(),null}))),Vs=Vs.nextEffect}}function Nl(){if(90!==tl){var e=97<tl?97:tl;return tl=90,$a(e,Ul)}return!1}function Dl(e,t){nl.push(t,e),Xs||(Xs=!0,Ka(97,(function(){return Nl(),null})))}function jl(e,t){ol.push(t,e),Xs||(Xs=!0,Ka(97,(function(){return Nl(),null})))}function Ul(){if(null===el)return!1;var e=el;if(el=null,0!=(48&Rs))throw Error(r(331));var t=Rs;Rs|=32;var n=ol;ol=[];for(var o=0;o<n.length;o+=2){var a=n[o],i=n[o+1],s=a.destroy;if(a.destroy=void 0,"function"==typeof s)try{s()}catch(c){if(null===i)throw Error(r(330));Ol(i,c)}}for(n=nl,nl=[],o=0;o<n.length;o+=2){a=n[o],i=n[o+1];try{var l=a.create;a.destroy=l()}catch(c){if(null===i)throw Error(r(330));Ol(i,c)}}for(l=e.current.firstEffect;null!==l;)e=l.nextEffect,l.nextEffect=null,8&l.flags&&(l.sibling=null,l.stateNode=null),l=e;return Rs=t,Va(),!0}function Ql(e,t,n){bi(e,t=bs(0,t=cs(n,t),1)),t=bl(),null!==(e=hl(e,1))&&(zt(e,1,t),fl(e,t))}function Ol(e,t){if(3===e.tag)Ql(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Ql(n,e,t);break}if(1===n.tag){var o=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof o.componentDidCatch&&(null===Ys||!Ys.has(o))){var a=us(n,e=cs(t,e),1);if(bi(n,a),a=bl(),null!==(n=hl(n,1)))zt(n,1,a),fl(n,a);else if("function"==typeof o.componentDidCatch&&(null===Ys||!Ys.has(o)))try{o.componentDidCatch(t,e)}catch(i){}break}}n=n.return}}function Ml(e,t,n){var o=e.pingCache;null!==o&&o.delete(t),t=bl(),e.pingedLanes|=e.suspendedLanes&n,Is===e&&(Ns&n)===n&&(4===Us||3===Us&&(62914560&Ns)===Ns&&500>Ha()-Zs?wl(e,0):zs|=n),fl(e,t)}function Fl(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Za()?1:2:(0===ll&&(ll=Os),0===(t=Mt(62914560&~ll))&&(t=4194304))),n=bl(),null!==(e=hl(e,t))&&(zt(e,t,n),fl(e,n))}function zl(e,t,n,o){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=o,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Hl(e,t,n,o){return new zl(e,t,n,o)}function Zl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Gl(e,t){var n=e.alternate;return null===n?((n=Hl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function $l(e,t,n,o,a,i){var s=2;if(o=e,"function"==typeof e)Zl(e)&&(s=1);else if("string"==typeof e)s=5;else e:switch(e){case w:return Kl(n.children,a,i,t);case D:s=8,a|=16;break;case q:s=8,a|=1;break;case T:return(e=Hl(12,n,t,8|a)).elementType=T,e.type=T,e.lanes=i,e;case A:return(e=Hl(13,n,t,a)).type=A,e.elementType=A,e.lanes=i,e;case P:return(e=Hl(19,n,t,a)).elementType=P,e.lanes=i,e;case j:return Vl(n,a,i,t);case U:return(e=Hl(24,n,t,a)).elementType=U,e.lanes=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case E:s=10;break e;case S:s=9;break e;case C:s=11;break e;case R:s=14;break e;case I:s=16,o=null;break e;case L:s=22;break e}throw Error(r(130,null==e?e:typeof e,""))}return(t=Hl(s,n,t,a)).elementType=e,t.type=o,t.lanes=i,t}function Kl(e,t,n,o){return(e=Hl(7,e,o,t)).lanes=n,e}function Vl(e,t,n,o){return(e=Hl(23,e,o,t)).elementType=j,e.lanes=n,e}function Wl(e,t,n){return(e=Hl(6,e,null,t)).lanes=n,e}function Jl(e,t,n){return(t=Hl(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Yl(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ft(0),this.expirationTimes=Ft(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ft(0),this.mutableSourceEagerHydrationData=null}function Xl(e,t,n){var o=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==o?null:""+o,children:e,containerInfo:t,implementation:n}}function ec(e,t,n,o){var a=t.current,i=bl(),s=ul(a);e:if(n){t:{if(We(n=n._reactInternals)!==n||1!==n.tag)throw Error(r(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(ga(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(r(171))}if(1===n.tag){var c=n.type;if(ga(c)){n=va(n,c,l);break e}}n=l}else n=ua;return null===t.context?t.context=n:t.pendingContext=n,(t=pi(i,s)).payload={element:e},null!==(o=void 0===o?null:o)&&(t.callback=o),bi(a,t),yl(a,s,i),s}function tc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function nc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function oc(e,t){nc(e,t),(e=e.alternate)&&nc(e,t)}function ac(e,t,n){var o=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Yl(e,t,null!=n&&!0===n.hydrate),t=Hl(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ci(t),e[ta]=n.current,Io(8===e.nodeType?e.parentNode:e),o)for(e=0;e<o.length;e++){var a=(t=o[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function ic(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function rc(e,t,n,o,a){var i=n._reactRootContainer;if(i){var r=i._internalRoot;if("function"==typeof a){var s=a;a=function(){var e=tc(r);s.call(e)}}ec(t,r,e,a)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new ac(e,0,t?{hydrate:!0}:void 0)}(n,o),r=i._internalRoot,"function"==typeof a){var l=a;a=function(){var e=tc(r);l.call(e)}}vl((function(){ec(t,r,e,a)}))}return tc(r)}function sc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ic(t))throw Error(r(200));return Xl(e,t,null,n)}Ks=function(e,t,n){var o=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||ha.current)jr=!0;else{if(0==(n&o)){switch(jr=!1,t.tag){case 3:$r(t),Ki();break;case 5:Di(t);break;case 1:ga(t.type)&&Ba(t);break;case 4:Li(t,t.stateNode.containerInfo);break;case 10:o=t.memoizedProps.value;var a=t.type._context;ba(Xa,a._currentValue),a._currentValue=o;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Yr(e,t,n):(ba(Ui,1&Ui.current),null!==(t=is(e,t,n))?t.sibling:null);ba(Ui,1&Ui.current);break;case 19:if(o=0!=(n&t.childLanes),0!=(64&e.flags)){if(o)return as(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ba(Ui,Ui.current),o)break;return null;case 23:case 24:return t.lanes=0,Fr(e,t,n)}return is(e,t,n)}jr=0!=(16384&e.flags)}else jr=!1;switch(t.lanes=0,t.tag){case 2:if(o=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=ma(t,ya.current),ri(t,n),a=sr(null,t,o,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ga(o)){var i=!0;Ba(t)}else i=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ci(t);var s=o.getDerivedStateFromProps;"function"==typeof s&&mi(t,o,s,e),a.updater=gi,t.stateNode=a,a._reactInternals=t,Bi(t,o,e,n),t=Gr(null,t,o,!0,i,n)}else t.tag=0,Ur(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(i=a._init)(a._payload),t.type=a,i=t.tag=function(e){if("function"==typeof e)return Zl(e)?1:0;if(null!=e){if((e=e.$$typeof)===C)return 11;if(e===R)return 14}return 2}(a),e=Ya(a,e),i){case 0:t=Hr(null,t,a,e,n);break e;case 1:t=Zr(null,t,a,e,n);break e;case 11:t=Qr(null,t,a,e,n);break e;case 14:t=Or(null,t,a,Ya(a.type,e),o,n);break e}throw Error(r(306,a,""))}return t;case 0:return o=t.type,a=t.pendingProps,Hr(e,t,o,a=t.elementType===o?a:Ya(o,a),n);case 1:return o=t.type,a=t.pendingProps,Zr(e,t,o,a=t.elementType===o?a:Ya(o,a),n);case 3:if($r(t),o=t.updateQueue,null===e||null===o)throw Error(r(282));if(o=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,di(e,t),yi(t,o,null,n),(o=t.memoizedState.element)===a)Ki(),t=is(e,t,n);else{if((i=(a=t.stateNode).hydrate)&&(Mi=Vo(t.stateNode.containerInfo.firstChild),Oi=t,i=Fi=!0),i){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(i=e[a])._workInProgressVersionPrimary=e[a+1],Vi.push(i);for(n=Si(t,null,o,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Ur(e,t,o,n),Ki();t=t.child}return t;case 5:return Di(t),null===e&&Zi(t),o=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,s=a.children,Zo(o,a)?s=null:null!==i&&Zo(o,i)&&(t.flags|=16),zr(e,t),Ur(e,t,s,n),t.child;case 6:return null===e&&Zi(t),null;case 13:return Yr(e,t,n);case 4:return Li(t,t.stateNode.containerInfo),o=t.pendingProps,null===e?t.child=Ei(t,null,o,n):Ur(e,t,o,n),t.child;case 11:return o=t.type,a=t.pendingProps,Qr(e,t,o,a=t.elementType===o?a:Ya(o,a),n);case 7:return Ur(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ur(e,t,t.pendingProps.children,n),t.child;case 10:e:{o=t.type._context,a=t.pendingProps,s=t.memoizedProps,i=a.value;var l=t.type._context;if(ba(Xa,l._currentValue),l._currentValue=i,null!==s)if(l=s.value,0===(i=po(l,i)?0:0|("function"==typeof o._calculateChangedBits?o._calculateChangedBits(l,i):1073741823))){if(s.children===a.children&&!ha.current){t=is(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var c=l.dependencies;if(null!==c){s=l.child;for(var d=c.firstContext;null!==d;){if(d.context===o&&0!=(d.observedBits&i)){1===l.tag&&((d=pi(-1,n&-n)).tag=2,bi(l,d)),l.lanes|=n,null!==(d=l.alternate)&&(d.lanes|=n),ii(l.return,n),c.lanes|=n;break}d=d.next}}else s=10===l.tag&&l.type===t.type?null:l.child;if(null!==s)s.return=l;else for(s=l;null!==s;){if(s===t){s=null;break}if(null!==(l=s.sibling)){l.return=s.return,s=l;break}s=s.return}l=s}Ur(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,o=(i=t.pendingProps).children,ri(t,n),o=o(a=si(a,i.unstable_observedBits)),t.flags|=1,Ur(e,t,o,n),t.child;case 14:return i=Ya(a=t.type,t.pendingProps),Or(e,t,a,i=Ya(a.type,i),o,n);case 15:return Mr(e,t,t.type,t.pendingProps,o,n);case 17:return o=t.type,a=t.pendingProps,a=t.elementType===o?a:Ya(o,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,ga(o)?(e=!0,Ba(t)):e=!1,ri(t,n),ki(t,o,a),Bi(t,o,a,n),Gr(null,t,o,!0,e,n);case 19:return as(e,t,n);case 23:case 24:return Fr(e,t,n)}throw Error(r(156,t.tag))},ac.prototype.render=function(e){ec(e,this._internalRoot,null,null)},ac.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;ec(null,e,null,(function(){t[ta]=null}))},tt=function(e){13===e.tag&&(yl(e,4,bl()),oc(e,4))},nt=function(e){13===e.tag&&(yl(e,67108864,bl()),oc(e,67108864))},ot=function(e){if(13===e.tag){var t=bl(),n=ul(e);yl(e,n,t),oc(e,n)}},at=function(e,t){return t()},Ee=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var o=n[t];if(o!==e&&o.form===e.form){var a=ra(o);if(!a)throw Error(r(90));J(o),ne(o,a)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&re(e,!!n.multiple,t,!1)}},Ie=kl,Le=function(e,t,n,o,a){var i=Rs;Rs|=4;try{return $a(98,e.bind(null,t,n,o,a))}finally{0===(Rs=i)&&($s(),Va())}},Ne=function(){0==(49&Rs)&&(function(){if(null!==al){var e=al;al=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,fl(e,Ha())}))}Va()}(),Nl())},De=function(e,t){var n=Rs;Rs|=2;try{return e(t)}finally{0===(Rs=n)&&($s(),Va())}};var lc={Events:[aa,ia,ra,Pe,Re,Nl,{current:!1}]},cc={findFiberByHostInstance:oa,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},dc={bundleType:cc.bundleType,version:cc.version,rendererPackageName:cc.rendererPackageName,rendererConfig:cc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Xe(e))?null:e.stateNode},findFiberByHostInstance:cc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var pc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!pc.isDisabled&&pc.supportsFiber)try{wa=pc.inject(dc),qa=pc}catch(fe){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lc,t.createPortal=sc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(r(188));throw Error(r(268,Object.keys(e)))}return e=null===(e=Xe(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Rs;if(0!=(48&n))return e(t);Rs|=1;try{if(e)return $a(99,e.bind(null,t))}finally{Rs=n,Va()}},t.hydrate=function(e,t,n){if(!ic(t))throw Error(r(200));return rc(null,e,t,!0,n)},t.render=function(e,t,n){if(!ic(t))throw Error(r(200));return rc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!ic(e))throw Error(r(40));return!!e._reactRootContainer&&(vl((function(){rc(null,null,e,!1,(function(){e._reactRootContainer=null,e[ta]=null}))})),!0)},t.unstable_batchedUpdates=kl,t.unstable_createPortal=function(e,t){return sc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,o){if(!ic(n))throw Error(r(200));if(null==e||void 0===e._reactInternals)throw Error(r(38));return rc(e,t,n,!1,o)},t.version="17.0.2"},73935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(64448)},69590:e=>{var t="undefined"!=typeof Element,n="function"==typeof Map,o="function"==typeof Set,a="function"==typeof ArrayBuffer&&!!ArrayBuffer.isView;function i(e,r){if(e===r)return!0;if(e&&r&&"object"==typeof e&&"object"==typeof r){if(e.constructor!==r.constructor)return!1;var s,l,c,d;if(Array.isArray(e)){if((s=e.length)!=r.length)return!1;for(l=s;0!=l--;)if(!i(e[l],r[l]))return!1;return!0}if(n&&e instanceof Map&&r instanceof Map){if(e.size!==r.size)return!1;for(d=e.entries();!(l=d.next()).done;)if(!r.has(l.value[0]))return!1;for(d=e.entries();!(l=d.next()).done;)if(!i(l.value[1],r.get(l.value[0])))return!1;return!0}if(o&&e instanceof Set&&r instanceof Set){if(e.size!==r.size)return!1;for(d=e.entries();!(l=d.next()).done;)if(!r.has(l.value[0]))return!1;return!0}if(a&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(r)){if((s=e.length)!=r.length)return!1;for(l=s;0!=l--;)if(e[l]!==r[l])return!1;return!0}if(e.constructor===RegExp)return e.source===r.source&&e.flags===r.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===r.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===r.toString();if((s=(c=Object.keys(e)).length)!==Object.keys(r).length)return!1;for(l=s;0!=l--;)if(!Object.prototype.hasOwnProperty.call(r,c[l]))return!1;if(t&&e instanceof Element)return!1;for(l=s;0!=l--;)if(("_owner"!==c[l]&&"__v"!==c[l]&&"__o"!==c[l]||!e.$$typeof)&&!i(e[c[l]],r[c[l]]))return!1;return!0}return e!=e&&r!=r}e.exports=function(e,t){try{return i(e,t)}catch(n){if((n.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw n}}},70405:(e,t,n)=>{"use strict";n.d(t,{B6:()=>Z,ql:()=>X});var o=n(67294),a=n(45697),i=n.n(a),r=n(69590),s=n.n(r),l=n(41143),c=n.n(l),d=n(96774),p=n.n(d);function b(){return b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},b.apply(this,arguments)}function u(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,y(e,t)}function y(e,t){return y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},y(e,t)}function h(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t.indexOf(n=i[o])>=0||(a[n]=e[n]);return a}var f={BASE:"base",BODY:"body",HEAD:"head",HTML:"html",LINK:"link",META:"meta",NOSCRIPT:"noscript",SCRIPT:"script",STYLE:"style",TITLE:"title",FRAGMENT:"Symbol(react.fragment)"},m={rel:["amphtml","canonical","alternate"]},g={type:["application/ld+json"]},_={charset:"",name:["robots","description"],property:["og:type","og:title","og:url","og:image","og:image:alt","og:description","twitter:url","twitter:title","twitter:description","twitter:image","twitter:image:alt","twitter:card","twitter:site"]},k=Object.keys(f).map((function(e){return f[e]})),v={accesskey:"accessKey",charset:"charSet",class:"className",contenteditable:"contentEditable",contextmenu:"contextMenu","http-equiv":"httpEquiv",itemprop:"itemProp",tabindex:"tabIndex"},B=Object.keys(v).reduce((function(e,t){return e[v[t]]=t,e}),{}),x=function(e,t){for(var n=e.length-1;n>=0;n-=1){var o=e[n];if(Object.prototype.hasOwnProperty.call(o,t))return o[t]}return null},w=function(e){var t=x(e,f.TITLE),n=x(e,"titleTemplate");if(Array.isArray(t)&&(t=t.join("")),n&&t)return n.replace(/%s/g,(function(){return t}));var o=x(e,"defaultTitle");return t||o||void 0},q=function(e){return x(e,"onChangeClientState")||function(){}},T=function(e,t){return t.filter((function(t){return void 0!==t[e]})).map((function(t){return t[e]})).reduce((function(e,t){return b({},e,t)}),{})},E=function(e,t){return t.filter((function(e){return void 0!==e[f.BASE]})).map((function(e){return e[f.BASE]})).reverse().reduce((function(t,n){if(!t.length)for(var o=Object.keys(n),a=0;a<o.length;a+=1){var i=o[a].toLowerCase();if(-1!==e.indexOf(i)&&n[i])return t.concat(n)}return t}),[])},S=function(e,t,n){var o={};return n.filter((function(t){return!!Array.isArray(t[e])||(void 0!==t[e]&&console&&"function"==typeof console.warn&&console.warn("Helmet: "+e+' should be of type "Array". Instead found type "'+typeof t[e]+'"'),!1)})).map((function(t){return t[e]})).reverse().reduce((function(e,n){var a={};n.filter((function(e){for(var n,i=Object.keys(e),r=0;r<i.length;r+=1){var s=i[r],l=s.toLowerCase();-1===t.indexOf(l)||"rel"===n&&"canonical"===e[n].toLowerCase()||"rel"===l&&"stylesheet"===e[l].toLowerCase()||(n=l),-1===t.indexOf(s)||"innerHTML"!==s&&"cssText"!==s&&"itemprop"!==s||(n=s)}if(!n||!e[n])return!1;var c=e[n].toLowerCase();return o[n]||(o[n]={}),a[n]||(a[n]={}),!o[n][c]&&(a[n][c]=!0,!0)})).reverse().forEach((function(t){return e.push(t)}));for(var i=Object.keys(a),r=0;r<i.length;r+=1){var s=i[r],l=b({},o[s],a[s]);o[s]=l}return e}),[]).reverse()},C=function(e,t){if(Array.isArray(e)&&e.length)for(var n=0;n<e.length;n+=1)if(e[n][t])return!0;return!1},A=function(e){return Array.isArray(e)?e.join(""):e},P=function(e,t){return Array.isArray(e)?e.reduce((function(e,n){return function(e,t){for(var n=Object.keys(e),o=0;o<n.length;o+=1)if(t[n[o]]&&t[n[o]].includes(e[n[o]]))return!0;return!1}(n,t)?e.priority.push(n):e.default.push(n),e}),{priority:[],default:[]}):{default:e}},R=function(e,t){var n;return b({},e,((n={})[t]=void 0,n))},I=[f.NOSCRIPT,f.SCRIPT,f.STYLE],L=function(e,t){return void 0===t&&(t=!0),!1===t?String(e):String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")},N=function(e){return Object.keys(e).reduce((function(t,n){var o=void 0!==e[n]?n+'="'+e[n]+'"':""+n;return t?t+" "+o:o}),"")},D=function(e,t){return void 0===t&&(t={}),Object.keys(e).reduce((function(t,n){return t[v[n]||n]=e[n],t}),t)},j=function(e,t){return t.map((function(t,n){var a,i=((a={key:n})["data-rh"]=!0,a);return Object.keys(t).forEach((function(e){var n=v[e]||e;"innerHTML"===n||"cssText"===n?i.dangerouslySetInnerHTML={__html:t.innerHTML||t.cssText}:i[n]=t[e]})),o.createElement(e,i)}))},U=function(e,t,n){switch(e){case f.TITLE:return{toComponent:function(){return n=t.titleAttributes,(a={key:e=t.title})["data-rh"]=!0,i=D(n,a),[o.createElement(f.TITLE,i,e)];var e,n,a,i},toString:function(){return function(e,t,n,o){var a=N(n),i=A(t);return a?"<"+e+' data-rh="true" '+a+">"+L(i,o)+"</"+e+">":"<"+e+' data-rh="true">'+L(i,o)+"</"+e+">"}(e,t.title,t.titleAttributes,n)}};case"bodyAttributes":case"htmlAttributes":return{toComponent:function(){return D(t)},toString:function(){return N(t)}};default:return{toComponent:function(){return j(e,t)},toString:function(){return function(e,t,n){return t.reduce((function(t,o){var a=Object.keys(o).filter((function(e){return!("innerHTML"===e||"cssText"===e)})).reduce((function(e,t){var a=void 0===o[t]?t:t+'="'+L(o[t],n)+'"';return e?e+" "+a:a}),""),i=o.innerHTML||o.cssText||"",r=-1===I.indexOf(e);return t+"<"+e+' data-rh="true" '+a+(r?"/>":">"+i+"</"+e+">")}),"")}(e,t,n)}}}},Q=function(e){var t=e.baseTag,n=e.bodyAttributes,o=e.encode,a=e.htmlAttributes,i=e.noscriptTags,r=e.styleTags,s=e.title,l=void 0===s?"":s,c=e.titleAttributes,d=e.linkTags,p=e.metaTags,b=e.scriptTags,u={toComponent:function(){},toString:function(){return""}};if(e.prioritizeSeoTags){var y=function(e){var t=e.linkTags,n=e.scriptTags,o=e.encode,a=P(e.metaTags,_),i=P(t,m),r=P(n,g);return{priorityMethods:{toComponent:function(){return[].concat(j(f.META,a.priority),j(f.LINK,i.priority),j(f.SCRIPT,r.priority))},toString:function(){return U(f.META,a.priority,o)+" "+U(f.LINK,i.priority,o)+" "+U(f.SCRIPT,r.priority,o)}},metaTags:a.default,linkTags:i.default,scriptTags:r.default}}(e);u=y.priorityMethods,d=y.linkTags,p=y.metaTags,b=y.scriptTags}return{priority:u,base:U(f.BASE,t,o),bodyAttributes:U("bodyAttributes",n,o),htmlAttributes:U("htmlAttributes",a,o),link:U(f.LINK,d,o),meta:U(f.META,p,o),noscript:U(f.NOSCRIPT,i,o),script:U(f.SCRIPT,b,o),style:U(f.STYLE,r,o),title:U(f.TITLE,{title:l,titleAttributes:c},o)}},O=[],M=function(e,t){var n=this;void 0===t&&(t="undefined"!=typeof document),this.instances=[],this.value={setHelmet:function(e){n.context.helmet=e},helmetInstances:{get:function(){return n.canUseDOM?O:n.instances},add:function(e){(n.canUseDOM?O:n.instances).push(e)},remove:function(e){var t=(n.canUseDOM?O:n.instances).indexOf(e);(n.canUseDOM?O:n.instances).splice(t,1)}}},this.context=e,this.canUseDOM=t,t||(e.helmet=Q({baseTag:[],bodyAttributes:{},encodeSpecialCharacters:!0,htmlAttributes:{},linkTags:[],metaTags:[],noscriptTags:[],scriptTags:[],styleTags:[],title:"",titleAttributes:{}}))},F=o.createContext({}),z=i().shape({setHelmet:i().func,helmetInstances:i().shape({get:i().func,add:i().func,remove:i().func})}),H="undefined"!=typeof document,Z=function(e){function t(n){var o;return(o=e.call(this,n)||this).helmetData=new M(o.props.context,t.canUseDOM),o}return u(t,e),t.prototype.render=function(){return o.createElement(F.Provider,{value:this.helmetData.value},this.props.children)},t}(o.Component);Z.canUseDOM=H,Z.propTypes={context:i().shape({helmet:i().shape()}),children:i().node.isRequired},Z.defaultProps={context:{}},Z.displayName="HelmetProvider";var G=function(e,t){var n,o=document.head||document.querySelector(f.HEAD),a=o.querySelectorAll(e+"[data-rh]"),i=[].slice.call(a),r=[];return t&&t.length&&t.forEach((function(t){var o=document.createElement(e);for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&("innerHTML"===a?o.innerHTML=t.innerHTML:"cssText"===a?o.styleSheet?o.styleSheet.cssText=t.cssText:o.appendChild(document.createTextNode(t.cssText)):o.setAttribute(a,void 0===t[a]?"":t[a]));o.setAttribute("data-rh","true"),i.some((function(e,t){return n=t,o.isEqualNode(e)}))?i.splice(n,1):r.push(o)})),i.forEach((function(e){return e.parentNode.removeChild(e)})),r.forEach((function(e){return o.appendChild(e)})),{oldTags:i,newTags:r}},$=function(e,t){var n=document.getElementsByTagName(e)[0];if(n){for(var o=n.getAttribute("data-rh"),a=o?o.split(","):[],i=[].concat(a),r=Object.keys(t),s=0;s<r.length;s+=1){var l=r[s],c=t[l]||"";n.getAttribute(l)!==c&&n.setAttribute(l,c),-1===a.indexOf(l)&&a.push(l);var d=i.indexOf(l);-1!==d&&i.splice(d,1)}for(var p=i.length-1;p>=0;p-=1)n.removeAttribute(i[p]);a.length===i.length?n.removeAttribute("data-rh"):n.getAttribute("data-rh")!==r.join(",")&&n.setAttribute("data-rh",r.join(","))}},K=function(e,t){var n=e.baseTag,o=e.htmlAttributes,a=e.linkTags,i=e.metaTags,r=e.noscriptTags,s=e.onChangeClientState,l=e.scriptTags,c=e.styleTags,d=e.title,p=e.titleAttributes;$(f.BODY,e.bodyAttributes),$(f.HTML,o),function(e,t){void 0!==e&&document.title!==e&&(document.title=A(e)),$(f.TITLE,t)}(d,p);var b={baseTag:G(f.BASE,n),linkTags:G(f.LINK,a),metaTags:G(f.META,i),noscriptTags:G(f.NOSCRIPT,r),scriptTags:G(f.SCRIPT,l),styleTags:G(f.STYLE,c)},u={},y={};Object.keys(b).forEach((function(e){var t=b[e],n=t.newTags,o=t.oldTags;n.length&&(u[e]=n),o.length&&(y[e]=b[e].oldTags)})),t&&t(),s(e,u,y)},V=null,W=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return(t=e.call.apply(e,[this].concat(o))||this).rendered=!1,t}u(t,e);var n=t.prototype;return n.shouldComponentUpdate=function(e){return!p()(e,this.props)},n.componentDidUpdate=function(){this.emitChange()},n.componentWillUnmount=function(){this.props.context.helmetInstances.remove(this),this.emitChange()},n.emitChange=function(){var e,t,n=this.props.context,o=n.setHelmet,a=null,i=(e=n.helmetInstances.get().map((function(e){var t=b({},e.props);return delete t.context,t})),{baseTag:E(["href"],e),bodyAttributes:T("bodyAttributes",e),defer:x(e,"defer"),encode:x(e,"encodeSpecialCharacters"),htmlAttributes:T("htmlAttributes",e),linkTags:S(f.LINK,["rel","href"],e),metaTags:S(f.META,["name","charset","http-equiv","property","itemprop"],e),noscriptTags:S(f.NOSCRIPT,["innerHTML"],e),onChangeClientState:q(e),scriptTags:S(f.SCRIPT,["src","innerHTML"],e),styleTags:S(f.STYLE,["cssText"],e),title:w(e),titleAttributes:T("titleAttributes",e),prioritizeSeoTags:C(e,"prioritizeSeoTags")});Z.canUseDOM?(t=i,V&&cancelAnimationFrame(V),t.defer?V=requestAnimationFrame((function(){K(t,(function(){V=null}))})):(K(t),V=null)):Q&&(a=Q(i)),o(a)},n.init=function(){this.rendered||(this.rendered=!0,this.props.context.helmetInstances.add(this),this.emitChange())},n.render=function(){return this.init(),null},t}(o.Component);W.propTypes={context:z.isRequired},W.displayName="HelmetDispatcher";var J=["children"],Y=["children"],X=function(e){function t(){return e.apply(this,arguments)||this}u(t,e);var n=t.prototype;return n.shouldComponentUpdate=function(e){return!s()(R(this.props,"helmetData"),R(e,"helmetData"))},n.mapNestedChildrenToProps=function(e,t){if(!t)return null;switch(e.type){case f.SCRIPT:case f.NOSCRIPT:return{innerHTML:t};case f.STYLE:return{cssText:t};default:throw new Error("<"+e.type+" /> elements are self-closing and can not contain children. Refer to our API for more information.")}},n.flattenArrayTypeChildren=function(e){var t,n=e.child,o=e.arrayTypeChildren;return b({},o,((t={})[n.type]=[].concat(o[n.type]||[],[b({},e.newChildProps,this.mapNestedChildrenToProps(n,e.nestedChildren))]),t))},n.mapObjectTypeChildren=function(e){var t,n,o=e.child,a=e.newProps,i=e.newChildProps,r=e.nestedChildren;switch(o.type){case f.TITLE:return b({},a,((t={})[o.type]=r,t.titleAttributes=b({},i),t));case f.BODY:return b({},a,{bodyAttributes:b({},i)});case f.HTML:return b({},a,{htmlAttributes:b({},i)});default:return b({},a,((n={})[o.type]=b({},i),n))}},n.mapArrayTypeChildrenToProps=function(e,t){var n=b({},t);return Object.keys(e).forEach((function(t){var o;n=b({},n,((o={})[t]=e[t],o))})),n},n.warnOnInvalidChildren=function(e,t){return c()(k.some((function(t){return e.type===t})),"function"==typeof e.type?"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.":"Only elements types "+k.join(", ")+" are allowed. Helmet does not support rendering <"+e.type+"> elements. Refer to our API for more information."),c()(!t||"string"==typeof t||Array.isArray(t)&&!t.some((function(e){return"string"!=typeof e})),"Helmet expects a string as a child of <"+e.type+">. Did you forget to wrap your children in braces? ( <"+e.type+">{``}</"+e.type+"> ) Refer to our API for more information."),!0},n.mapChildrenToProps=function(e,t){var n=this,a={};return o.Children.forEach(e,(function(e){if(e&&e.props){var o=e.props,i=o.children,r=h(o,J),s=Object.keys(r).reduce((function(e,t){return e[B[t]||t]=r[t],e}),{}),l=e.type;switch("symbol"==typeof l?l=l.toString():n.warnOnInvalidChildren(e,i),l){case f.FRAGMENT:t=n.mapChildrenToProps(i,t);break;case f.LINK:case f.META:case f.NOSCRIPT:case f.SCRIPT:case f.STYLE:a=n.flattenArrayTypeChildren({child:e,arrayTypeChildren:a,newChildProps:s,nestedChildren:i});break;default:t=n.mapObjectTypeChildren({child:e,newProps:t,newChildProps:s,nestedChildren:i})}}})),this.mapArrayTypeChildrenToProps(a,t)},n.render=function(){var e=this.props,t=e.children,n=h(e,Y),a=b({},n),i=n.helmetData;return t&&(a=this.mapChildrenToProps(t,a)),!i||i instanceof M||(i=new M(i.context,i.instances)),i?o.createElement(W,b({},a,{context:i.value,helmetData:void 0})):o.createElement(F.Consumer,null,(function(e){return o.createElement(W,b({},a,{context:e}))}))},t}(o.Component);X.propTypes={base:i().object,bodyAttributes:i().object,children:i().oneOfType([i().arrayOf(i().node),i().node]),defaultTitle:i().string,defer:i().bool,encodeSpecialCharacters:i().bool,htmlAttributes:i().object,link:i().arrayOf(i().object),meta:i().arrayOf(i().object),noscript:i().arrayOf(i().object),onChangeClientState:i().func,script:i().arrayOf(i().object),style:i().arrayOf(i().object),title:i().string,titleAttributes:i().object,titleTemplate:i().string,prioritizeSeoTags:i().bool,helmetData:i().object},X.defaultProps={defer:!0,encodeSpecialCharacters:!0,prioritizeSeoTags:!1},X.displayName="Helmet"},69921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,o=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,i=n?Symbol.for("react.fragment"):60107,r=n?Symbol.for("react.strict_mode"):60108,s=n?Symbol.for("react.profiler"):60114,l=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,d=n?Symbol.for("react.async_mode"):60111,p=n?Symbol.for("react.concurrent_mode"):60111,b=n?Symbol.for("react.forward_ref"):60112,u=n?Symbol.for("react.suspense"):60113,y=n?Symbol.for("react.suspense_list"):60120,h=n?Symbol.for("react.memo"):60115,f=n?Symbol.for("react.lazy"):60116,m=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,_=n?Symbol.for("react.responder"):60118,k=n?Symbol.for("react.scope"):60119;function v(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case d:case p:case i:case s:case r:case u:return e;default:switch(e=e&&e.$$typeof){case c:case b:case f:case h:case l:return e;default:return t}}case a:return t}}}function B(e){return v(e)===p}t.AsyncMode=d,t.ConcurrentMode=p,t.ContextConsumer=c,t.ContextProvider=l,t.Element=o,t.ForwardRef=b,t.Fragment=i,t.Lazy=f,t.Memo=h,t.Portal=a,t.Profiler=s,t.StrictMode=r,t.Suspense=u,t.isAsyncMode=function(e){return B(e)||v(e)===d},t.isConcurrentMode=B,t.isContextConsumer=function(e){return v(e)===c},t.isContextProvider=function(e){return v(e)===l},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return v(e)===b},t.isFragment=function(e){return v(e)===i},t.isLazy=function(e){return v(e)===f},t.isMemo=function(e){return v(e)===h},t.isPortal=function(e){return v(e)===a},t.isProfiler=function(e){return v(e)===s},t.isStrictMode=function(e){return v(e)===r},t.isSuspense=function(e){return v(e)===u},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===p||e===s||e===r||e===u||e===y||"object"==typeof e&&null!==e&&(e.$$typeof===f||e.$$typeof===h||e.$$typeof===l||e.$$typeof===c||e.$$typeof===b||e.$$typeof===g||e.$$typeof===_||e.$$typeof===k||e.$$typeof===m)},t.typeOf=v},59864:(e,t,n)=>{"use strict";e.exports=n(69921)},68356:(e,t,n)=>{"use strict";function o(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},r.apply(this,arguments)}var s=n(67294),l=n(45697),c=[],d=[];function p(e){var t=e(),n={loading:!0,loaded:null,error:null};return n.promise=t.then((function(e){return n.loading=!1,n.loaded=e,e})).catch((function(e){throw n.loading=!1,n.error=e,e})),n}function b(e){var t={loading:!1,loaded:{},error:null},n=[];try{Object.keys(e).forEach((function(o){var a=p(e[o]);a.loading?t.loading=!0:(t.loaded[o]=a.loaded,t.error=a.error),n.push(a.promise),a.promise.then((function(e){t.loaded[o]=e})).catch((function(e){t.error=e}))}))}catch(o){t.error=o}return t.promise=Promise.all(n).then((function(e){return t.loading=!1,e})).catch((function(e){throw t.loading=!1,e})),t}function u(e,t){return s.createElement((n=e)&&n.__esModule?n.default:n,t);var n}function y(e,t){var p,b;if(!t.loading)throw new Error("react-loadable requires a `loading` component");var y=r({loader:null,loading:null,delay:200,timeout:null,render:u,webpack:null,modules:null},t),h=null;function f(){return h||(h=e(y.loader)),h.promise}return c.push(f),"function"==typeof y.webpack&&d.push((function(){if((0,y.webpack)().every((function(e){return void 0!==e&&void 0!==n.m[e]})))return f()})),b=p=function(t){function n(n){var o;return i(a(a(o=t.call(this,n)||this)),"retry",(function(){o.setState({error:null,loading:!0,timedOut:!1}),h=e(y.loader),o._loadModule()})),f(),o.state={error:h.error,pastDelay:!1,timedOut:!1,loading:h.loading,loaded:h.loaded},o}o(n,t),n.preload=function(){return f()};var r=n.prototype;return r.UNSAFE_componentWillMount=function(){this._loadModule()},r.componentDidMount=function(){this._mounted=!0},r._loadModule=function(){var e=this;if(this.context.loadable&&Array.isArray(y.modules)&&y.modules.forEach((function(t){e.context.loadable.report(t)})),h.loading){var t=function(t){e._mounted&&e.setState(t)};"number"==typeof y.delay&&(0===y.delay?this.setState({pastDelay:!0}):this._delay=setTimeout((function(){t({pastDelay:!0})}),y.delay)),"number"==typeof y.timeout&&(this._timeout=setTimeout((function(){t({timedOut:!0})}),y.timeout));var n=function(){t({error:h.error,loaded:h.loaded,loading:h.loading}),e._clearTimeouts()};h.promise.then((function(){return n(),null})).catch((function(e){return n(),null}))}},r.componentWillUnmount=function(){this._mounted=!1,this._clearTimeouts()},r._clearTimeouts=function(){clearTimeout(this._delay),clearTimeout(this._timeout)},r.render=function(){return this.state.loading||this.state.error?s.createElement(y.loading,{isLoading:this.state.loading,pastDelay:this.state.pastDelay,timedOut:this.state.timedOut,error:this.state.error,retry:this.retry}):this.state.loaded?y.render(this.state.loaded,this.props):null},n}(s.Component),i(p,"contextTypes",{loadable:l.shape({report:l.func.isRequired})}),b}function h(e){return y(p,e)}h.Map=function(e){if("function"!=typeof e.render)throw new Error("LoadableMap requires a `render(loaded, props)` function");return y(b,e)};var f=function(e){function t(){return e.apply(this,arguments)||this}o(t,e);var n=t.prototype;return n.getChildContext=function(){return{loadable:{report:this.props.report}}},n.render=function(){return s.Children.only(this.props.children)},t}(s.Component);function m(e){for(var t=[];e.length;){var n=e.pop();t.push(n())}return Promise.all(t).then((function(){if(e.length)return m(e)}))}i(f,"propTypes",{report:l.func.isRequired}),i(f,"childContextTypes",{loadable:l.shape({report:l.func.isRequired}).isRequired}),h.Capture=f,h.preloadAll=function(){return new Promise((function(e,t){m(c).then(e,t)}))},h.preloadReady=function(){return new Promise((function(e,t){m(d).then(e,e)}))},e.exports=h},18790:(e,t,n)=>{"use strict";n.d(t,{H:()=>s,f:()=>r});var o=n(16550),a=n(87462),i=n(67294);function r(e,t,n){return void 0===n&&(n=[]),e.some((function(e){var a=e.path?(0,o.LX)(t,e):n.length?n[n.length-1].match:o.F0.computeRootMatch(t);return a&&(n.push({route:e,match:a}),e.routes&&r(e.routes,t,n)),a})),n}function s(e,t,n){return void 0===t&&(t={}),void 0===n&&(n={}),e?i.createElement(o.rs,n,e.map((function(e,n){return i.createElement(o.AW,{key:e.key||n,path:e.path,exact:e.exact,strict:e.strict,render:function(n){return e.render?e.render((0,a.Z)({},n,{},t,{route:e})):i.createElement(e.component,(0,a.Z)({},n,t,{route:e}))}})}))):null}},73727:(e,t,n)=>{"use strict";n.d(t,{OL:()=>_,VK:()=>d,rU:()=>f});var o=n(16550),a=n(94578),i=n(67294),r=n(99318),s=n(87462),l=n(63366),c=n(38776),d=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return(t=e.call.apply(e,[this].concat(o))||this).history=(0,r.lX)(t.props),t}return(0,a.Z)(t,e),t.prototype.render=function(){return i.createElement(o.F0,{history:this.history,children:this.props.children})},t}(i.Component);i.Component;var p=function(e,t){return"function"==typeof e?e(t):e},b=function(e,t){return"string"==typeof e?(0,r.ob)(e,null,null,t):e},u=function(e){return e},y=i.forwardRef;void 0===y&&(y=u);var h=y((function(e,t){var n=e.innerRef,o=e.navigate,a=e.onClick,r=(0,l.Z)(e,["innerRef","navigate","onClick"]),c=r.target,d=(0,s.Z)({},r,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||c&&"_self"!==c||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),o())}});return d.ref=u!==y&&t||n,i.createElement("a",d)}));var f=y((function(e,t){var n=e.component,a=void 0===n?h:n,d=e.replace,f=e.to,m=e.innerRef,g=(0,l.Z)(e,["component","replace","to","innerRef"]);return i.createElement(o.s6.Consumer,null,(function(e){e||(0,c.Z)(!1);var n=e.history,o=b(p(f,e.location),e.location),l=o?n.createHref(o):"",h=(0,s.Z)({},g,{href:l,navigate:function(){var t=p(f,e.location),o=(0,r.Ep)(e.location)===(0,r.Ep)(b(t));(d||o?n.replace:n.push)(t)}});return u!==y?h.ref=t||m:h.innerRef=m,i.createElement(a,h)}))})),m=function(e){return e},g=i.forwardRef;void 0===g&&(g=m);var _=g((function(e,t){var n=e["aria-current"],a=void 0===n?"page":n,r=e.activeClassName,d=void 0===r?"active":r,u=e.activeStyle,y=e.className,h=e.exact,_=e.isActive,k=e.location,v=e.sensitive,B=e.strict,x=e.style,w=e.to,q=e.innerRef,T=(0,l.Z)(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return i.createElement(o.s6.Consumer,null,(function(e){e||(0,c.Z)(!1);var n=k||e.location,r=b(p(w,n),n),l=r.pathname,E=l&&l.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),S=E?(0,o.LX)(n.pathname,{path:E,exact:h,sensitive:v,strict:B}):null,C=!!(_?_(S,n):S),A="function"==typeof y?y(C):y,P="function"==typeof x?x(C):x;C&&(A=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(A,d),P=(0,s.Z)({},P,u));var R=(0,s.Z)({"aria-current":C&&a||null,className:A,style:P,to:r},T);return m!==g?R.ref=t||q:R.innerRef=q,i.createElement(f,R)}))}))},16550:(e,t,n)=>{"use strict";n.d(t,{AW:()=>w,F0:()=>k,LX:()=>x,TH:()=>I,k6:()=>R,rs:()=>A,s6:()=>_});var o=n(94578),a=n(67294),i=n(45697),r=n.n(i),s=n(99318),l=n(38776),c=n(87462),d=n(14779),p=n.n(d),b=(n(59864),n(63366)),u=(n(8679),1073741823),y="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function h(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,o){e=n,t.forEach((function(t){return t(e,o)}))}}}var f=a.createContext||function(e,t){var n,i,s="__create-react-context-"+function(){var e="__global_unique_id__";return y[e]=(y[e]||0)+1}()+"__",l=function(e){function n(){for(var t,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return(t=e.call.apply(e,[this].concat(o))||this).emitter=h(t.props.value),t}(0,o.Z)(n,e);var a=n.prototype;return a.getChildContext=function(){var e;return(e={})[s]=this.emitter,e},a.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,o=this.props.value,a=e.value;((i=o)===(r=a)?0!==i||1/i==1/r:i!=i&&r!=r)?n=0:(n="function"==typeof t?t(o,a):u,0!==(n|=0)&&this.emitter.set(e.value,n))}var i,r},a.render=function(){return this.props.children},n}(a.Component);l.childContextTypes=((n={})[s]=r().object.isRequired,n);var c=function(t){function n(){for(var e,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return(e=t.call.apply(t,[this].concat(o))||this).observedBits=void 0,e.state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}(0,o.Z)(n,t);var a=n.prototype;return a.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?u:t},a.componentDidMount=function(){this.context[s]&&this.context[s].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?u:e},a.componentWillUnmount=function(){this.context[s]&&this.context[s].off(this.onUpdate)},a.getValue=function(){return this.context[s]?this.context[s].get():e},a.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(a.Component);return c.contextTypes=((i={})[s]=r().object,i),{Provider:l,Consumer:c}},m=function(e){var t=f();return t.displayName=e,t},g=m("Router-History"),_=m("Router"),k=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._pendingLocation=e}))),n}(0,o.Z)(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){var e=this;this._isMounted=!0,this.unlisten&&this.unlisten(),this.props.staticContext||(this.unlisten=this.props.history.listen((function(t){e._isMounted&&e.setState({location:t})}))),this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&(this.unlisten(),this._isMounted=!1,this._pendingLocation=null)},n.render=function(){return a.createElement(_.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},a.createElement(g.Provider,{children:this.props.children||null,value:this.props.history}))},t}(a.Component);a.Component;a.Component;var v={},B=0;function x(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,o=n.path,a=n.exact,i=void 0!==a&&a,r=n.strict,s=void 0!==r&&r,l=n.sensitive,c=void 0!==l&&l;return[].concat(o).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var o=function(e,t){var n=""+t.end+t.strict+t.sensitive,o=v[n]||(v[n]={});if(o[e])return o[e];var a=[],i={regexp:p()(e,a,t),keys:a};return B<1e4&&(o[e]=i,B++),i}(n,{end:i,strict:s,sensitive:c}),a=o.regexp,r=o.keys,l=a.exec(e);if(!l)return null;var d=l[0],b=l.slice(1),u=e===d;return i&&!u?null:{path:n,url:"/"===n&&""===d?"/":d,isExact:u,params:r.reduce((function(e,t,n){return e[t.name]=b[n],e}),{})}}),null)}var w=function(e){function t(){return e.apply(this,arguments)||this}return(0,o.Z)(t,e),t.prototype.render=function(){var e=this;return a.createElement(_.Consumer,null,(function(t){t||(0,l.Z)(!1);var n=e.props.location||t.location,o=e.props.computedMatch?e.props.computedMatch:e.props.path?x(n.pathname,e.props):t.match,i=(0,c.Z)({},t,{location:n,match:o}),r=e.props,s=r.children,d=r.component,p=r.render;return Array.isArray(s)&&function(e){return 0===a.Children.count(e)}(s)&&(s=null),a.createElement(_.Provider,{value:i},i.match?s?"function"==typeof s?s(i):s:d?a.createElement(d,i):p?p(i):null:"function"==typeof s?s(i):null)}))},t}(a.Component);function q(e){return"/"===e.charAt(0)?e:"/"+e}function T(e,t){if(!e)return t;var n=q(e);return 0!==t.pathname.indexOf(n)?t:(0,c.Z)({},t,{pathname:t.pathname.substr(n.length)})}function E(e){return"string"==typeof e?e:(0,s.Ep)(e)}function S(e){return function(){(0,l.Z)(!1)}}function C(){}a.Component;var A=function(e){function t(){return e.apply(this,arguments)||this}return(0,o.Z)(t,e),t.prototype.render=function(){var e=this;return a.createElement(_.Consumer,null,(function(t){t||(0,l.Z)(!1);var n,o,i=e.props.location||t.location;return a.Children.forEach(e.props.children,(function(e){if(null==o&&a.isValidElement(e)){n=e;var r=e.props.path||e.props.from;o=r?x(i.pathname,(0,c.Z)({},e.props,{path:r})):t.match}})),o?a.cloneElement(n,{location:i,computedMatch:o}):null}))},t}(a.Component);var P=a.useContext;function R(){return P(g)}function I(){return P(_).location}},72408:(e,t,n)=>{"use strict";var o=n(27418),a=60103,i=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var r=60109,s=60110,l=60112;t.Suspense=60113;var c=60115,d=60116;if("function"==typeof Symbol&&Symbol.for){var p=Symbol.for;a=p("react.element"),i=p("react.portal"),t.Fragment=p("react.fragment"),t.StrictMode=p("react.strict_mode"),t.Profiler=p("react.profiler"),r=p("react.provider"),s=p("react.context"),l=p("react.forward_ref"),t.Suspense=p("react.suspense"),c=p("react.memo"),d=p("react.lazy")}var b="function"==typeof Symbol&&Symbol.iterator;function u(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h={};function f(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||y}function m(){}function g(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||y}f.prototype.isReactComponent={},f.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(u(85));this.updater.enqueueSetState(this,e,t,"setState")},f.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},m.prototype=f.prototype;var _=g.prototype=new m;_.constructor=g,o(_,f.prototype),_.isPureReactComponent=!0;var k={current:null},v=Object.prototype.hasOwnProperty,B={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,n){var o,i={},r=null,s=null;if(null!=t)for(o in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(r=""+t.key),t)v.call(t,o)&&!B.hasOwnProperty(o)&&(i[o]=t[o]);var l=arguments.length-2;if(1===l)i.children=n;else if(1<l){for(var c=Array(l),d=0;d<l;d++)c[d]=arguments[d+2];i.children=c}if(e&&e.defaultProps)for(o in l=e.defaultProps)void 0===i[o]&&(i[o]=l[o]);return{$$typeof:a,type:e,key:r,ref:s,props:i,_owner:k.current}}function w(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var q=/\/+/g;function T(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function E(e,t,n,o,r){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case a:case i:l=!0}}if(l)return r=r(l=e),e=""===o?"."+T(l,0):o,Array.isArray(r)?(n="",null!=e&&(n=e.replace(q,"$&/")+"/"),E(r,t,n,"",(function(e){return e}))):null!=r&&(w(r)&&(r=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(r,n+(!r.key||l&&l.key===r.key?"":(""+r.key).replace(q,"$&/")+"/")+e)),t.push(r)),1;if(l=0,o=""===o?".":o+":",Array.isArray(e))for(var c=0;c<e.length;c++){var d=o+T(s=e[c],c);l+=E(s,t,n,d,r)}else if(d=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=b&&e[b]||e["@@iterator"])?e:null}(e),"function"==typeof d)for(e=d.call(e),c=0;!(s=e.next()).done;)l+=E(s=s.value,t,n,d=o+T(s,c++),r);else if("object"===s)throw t=""+e,Error(u(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return l}function S(e,t,n){if(null==e)return e;var o=[],a=0;return E(e,o,"","",(function(e){return t.call(n,e,a++)})),o}function C(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var A={current:null};function P(){var e=A.current;if(null===e)throw Error(u(321));return e}var R={ReactCurrentDispatcher:A,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:k,IsSomeRendererActing:{current:!1},assign:o};t.Children={map:S,forEach:function(e,t,n){S(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return S(e,(function(){t++})),t},toArray:function(e){return S(e,(function(e){return e}))||[]},only:function(e){if(!w(e))throw Error(u(143));return e}},t.Component=f,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,n){if(null==e)throw Error(u(267,e));var i=o({},e.props),r=e.key,s=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(s=t.ref,l=k.current),void 0!==t.key&&(r=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(d in t)v.call(t,d)&&!B.hasOwnProperty(d)&&(i[d]=void 0===t[d]&&void 0!==c?c[d]:t[d])}var d=arguments.length-2;if(1===d)i.children=n;else if(1<d){c=Array(d);for(var p=0;p<d;p++)c[p]=arguments[p+2];i.children=c}return{$$typeof:a,type:e.type,key:r,ref:s,props:i,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:s,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:r,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=w,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:C}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return P().useCallback(e,t)},t.useContext=function(e,t){return P().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return P().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return P().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return P().useLayoutEffect(e,t)},t.useMemo=function(e,t){return P().useMemo(e,t)},t.useReducer=function(e,t,n){return P().useReducer(e,t,n)},t.useRef=function(e){return P().useRef(e)},t.useState=function(e){return P().useState(e)},t.version="17.0.2"},67294:(e,t,n)=>{"use strict";e.exports=n(72408)},60053:(e,t)=>{"use strict";var n,o,a,i;if("object"==typeof performance&&"function"==typeof performance.now){var r=performance;t.unstable_now=function(){return r.now()}}else{var s=Date,l=s.now();t.unstable_now=function(){return s.now()-l}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,d=null,p=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(n){throw setTimeout(p,0),n}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(p,0))},o=function(e,t){d=setTimeout(e,t)},a=function(){clearTimeout(d)},t.unstable_shouldYield=function(){return!1},i=t.unstable_forceFrameRate=function(){}}else{var b=window.setTimeout,u=window.clearTimeout;if("undefined"!=typeof console){var y=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof y&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var h=!1,f=null,m=-1,g=5,_=0;t.unstable_shouldYield=function(){return t.unstable_now()>=_},i=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<e?Math.floor(1e3/e):5};var k=new MessageChannel,v=k.port2;k.port1.onmessage=function(){if(null!==f){var e=t.unstable_now();_=e+g;try{f(!0,e)?v.postMessage(null):(h=!1,f=null)}catch(n){throw v.postMessage(null),n}}else h=!1},n=function(e){f=e,h||(h=!0,v.postMessage(null))},o=function(e,n){m=b((function(){e(t.unstable_now())}),n)},a=function(){u(m),m=-1}}function B(e,t){var n=e.length;e.push(t);e:for(;;){var o=n-1>>>1,a=e[o];if(!(void 0!==a&&0<q(a,t)))break e;e[o]=t,e[n]=a,n=o}}function x(e){return void 0===(e=e[0])?null:e}function w(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var o=0,a=e.length;o<a;){var i=2*(o+1)-1,r=e[i],s=i+1,l=e[s];if(void 0!==r&&0>q(r,n))void 0!==l&&0>q(l,r)?(e[o]=l,e[s]=n,o=s):(e[o]=r,e[i]=n,o=i);else{if(!(void 0!==l&&0>q(l,n)))break e;e[o]=l,e[s]=n,o=s}}}return t}return null}function q(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var T=[],E=[],S=1,C=null,A=3,P=!1,R=!1,I=!1;function L(e){for(var t=x(E);null!==t;){if(null===t.callback)w(E);else{if(!(t.startTime<=e))break;w(E),t.sortIndex=t.expirationTime,B(T,t)}t=x(E)}}function N(e){if(I=!1,L(e),!R)if(null!==x(T))R=!0,n(D);else{var t=x(E);null!==t&&o(N,t.startTime-e)}}function D(e,n){R=!1,I&&(I=!1,a()),P=!0;var i=A;try{for(L(n),C=x(T);null!==C&&(!(C.expirationTime>n)||e&&!t.unstable_shouldYield());){var r=C.callback;if("function"==typeof r){C.callback=null,A=C.priorityLevel;var s=r(C.expirationTime<=n);n=t.unstable_now(),"function"==typeof s?C.callback=s:C===x(T)&&w(T),L(n)}else w(T);C=x(T)}if(null!==C)var l=!0;else{var c=x(E);null!==c&&o(N,c.startTime-n),l=!1}return l}finally{C=null,A=i,P=!1}}var j=i;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){R||P||(R=!0,n(D))},t.unstable_getCurrentPriorityLevel=function(){return A},t.unstable_getFirstCallbackNode=function(){return x(T)},t.unstable_next=function(e){switch(A){case 1:case 2:case 3:var t=3;break;default:t=A}var n=A;A=t;try{return e()}finally{A=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=j,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=A;A=e;try{return t()}finally{A=n}},t.unstable_scheduleCallback=function(e,i,r){var s=t.unstable_now();switch("object"==typeof r&&null!==r?r="number"==typeof(r=r.delay)&&0<r?s+r:s:r=s,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:S++,callback:i,priorityLevel:e,startTime:r,expirationTime:l=r+l,sortIndex:-1},r>s?(e.sortIndex=r,B(E,e),null===x(T)&&e===x(E)&&(I?a():I=!0,o(N,r-s))):(e.sortIndex=l,B(T,e),R||P||(R=!0,n(D))),e},t.unstable_wrapCallback=function(e){var t=A;return function(){var n=A;A=t;try{return e.apply(this,arguments)}finally{A=n}}}},63840:(e,t,n)=>{"use strict";e.exports=n(60053)},96774:e=>{e.exports=function(e,t,n,o){var a=n?n.call(o,e,t):void 0;if(void 0!==a)return!!a;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var i=Object.keys(e),r=Object.keys(t);if(i.length!==r.length)return!1;for(var s=Object.prototype.hasOwnProperty.bind(t),l=0;l<i.length;l++){var c=i[l];if(!s(c))return!1;var d=e[c],p=t[c];if(!1===(a=n?n.call(o,d,p,c):void 0)||void 0===a&&d!==p)return!1}return!0}},36809:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>o});const o={title:"Babylon Blockchain",tagline:"Bringing Bitcoin Security to Cosmos & Beyond",url:"https://cahyosubroto.github.io",baseUrl:"/apidoc/",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",favicon:"https://drive.google.com/uc?export=view&id=1LXiSzeRGG1Ij-YLozx9GcYmpmrOVBzBE",organizationName:"cahyosubroto",projectName:"apidoc",deploymentBranch:"gh-pages",trailingSlash:!1,i18n:{defaultLocale:"en",locales:["en"],path:"i18n",localeConfigs:{}},presets:[["classic",{docs:{sidebarPath:"C:\\Users\\kakakepan\\Documents\\apidoc\\sidebars.js",includeCurrentVersion:!0,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/",docLayoutComponent:"@theme/DocPage",docItemComponent:"@theme/ApiItem"},blog:{showReadingTime:!0,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/"},theme:{customCss:"C:\\Users\\kakakepan\\Documents\\apidoc\\src\\css\\custom.css"}}],["redocusaurus",{specs:[{id:"grpc",spec:"docs/grpc/grpcapi/swagger.yml",route:"docs/grpc/grpcgateway"}],theme:{primaryColor:"#1890ff"}}]],themeConfig:{docs:{sidebar:{hideable:!0,autoCollapseCategories:!0},versionPersistence:"localStorage"},navbar:{title:"",hideOnScroll:!0,logo:{alt:"My Site Logo",src:"https://drive.google.com/uc?export=view&id=175ZFizw8OFJMliKTcBkChe_LlBKY5bqh"},items:[{type:"doc",position:"left",docId:"intro",label:"Docs"},{href:"https://github.com/babylonchain",label:"GitHub",position:"right"},{href:"https://babylonchain.io/about",label:"About",position:"right"},{href:"https://babylonchain.io/contact",label:"Contact",position:"right"}]},footer:{style:"dark",links:[{title:"Docs",items:[{label:"Documentation",to:"/docs/intro"}]},{title:"Community",items:[{label:"LinkedIn",href:"https://www.linkedin.com/company/babylon-chain/"},{label:"Twitter",href:"https://www.twitter.com/babylon_chain"},{label:"Youtube",href:"https://www.youtube.com/channel/UCmnied_wAVVa2ECVLQH2OLQ"}]},{title:"More",items:[{label:"Blog",to:"https://babylonchain.io/blogs"}]}]},prism:{theme:{plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]},darkTheme:{plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]},additionalLanguages:[],magicComments:[{className:"theme-code-block-highlighted-line",line:"highlight-next-line",block:{start:"highlight-start",end:"highlight-end"}}]},colorMode:{defaultMode:"light",disableSwitch:!1,respectPrefersColorScheme:!1},metadata:[],tableOfContents:{minHeadingLevel:2,maxHeadingLevel:3}},plugins:[["docusaurus-plugin-openapi-docs",{id:"openapi",docsPluginId:"grpcapi",config:{grpc:{specPath:"docs/grpc/grpcapi/swagger.yml",outputDir:"api/grpcrestapi",sidebarOptions:{groupPathsBy:"tag",categoryLinkSource:"tag"}}}}]],themes:["docusaurus-theme-openapi-docs"],baseUrlIssueBanner:!0,onDuplicateRoutes:"warn",staticDirectories:["static"],customFields:{},scripts:[],headTags:[],stylesheets:[],clientModules:[],titleDelimiter:"|",noIndex:!1,markdown:{mermaid:!1}}},87462:(e,t,n)=>{"use strict";function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},o.apply(this,arguments)}n.d(t,{Z:()=>o})},94578:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var o=n(89611);function a(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,(0,o.Z)(e,t)}},63366:(e,t,n)=>{"use strict";function o(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}n.d(t,{Z:()=>o})},89611:(e,t,n)=>{"use strict";function o(e,t){return o=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},o(e,t)}n.d(t,{Z:()=>o})},38776:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var o="Invariant failed";function a(e,t){if(!e)throw new Error(o)}},57529:e=>{"use strict";e.exports={}},16887:e=>{"use strict";e.exports=JSON.parse('{"/apidoc/blog-aeb":{"__comp":"a6aa9e1f","__context":{"plugin":"0567e763"},"sidebar":"814f3328","items":[{"content":"7661071f"},{"content":"f4f34a3a"},{"content":"8717b14a"},{"content":"925b3f96"}],"metadata":"83a4a13b"},"/apidoc/blog/archive-235":{"__comp":"9e4087bc","__context":{"plugin":"0567e763"},"archive":"18ade41a"},"/apidoc/blog/first-blog-post-2ea":{"__comp":"ccc49370","__context":{"plugin":"0567e763"},"sidebar":"814f3328","content":"e273c56f"},"/apidoc/blog/long-blog-post-3fb":{"__comp":"ccc49370","__context":{"plugin":"0567e763"},"sidebar":"814f3328","content":"73664a40"},"/apidoc/blog/mdx-blog-post-5a8":{"__comp":"ccc49370","__context":{"plugin":"0567e763"},"sidebar":"814f3328","content":"59362658"},"/apidoc/blog/tags-260":{"__comp":"01a85c17","__context":{"plugin":"0567e763"},"sidebar":"814f3328","tags":"066231a4"},"/apidoc/blog/tags/docusaurus-f4b":{"__comp":"6875c492","__context":{"plugin":"0567e763"},"sidebar":"814f3328","items":[{"content":"7661071f"},{"content":"f4f34a3a"},{"content":"8717b14a"},{"content":"925b3f96"}],"tag":"cdf1a4c5","listMetadata":"e502bc66"},"/apidoc/blog/tags/facebook-b2a":{"__comp":"6875c492","__context":{"plugin":"0567e763"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"d61b0ce0","listMetadata":"a69a4243"},"/apidoc/blog/tags/hello-b4c":{"__comp":"6875c492","__context":{"plugin":"0567e763"},"sidebar":"814f3328","items":[{"content":"7661071f"},{"content":"8717b14a"}],"tag":"46a49d76","listMetadata":"d0a38806"},"/apidoc/blog/tags/hola-56a":{"__comp":"6875c492","__context":{"plugin":"0567e763"},"sidebar":"814f3328","items":[{"content":"925b3f96"}],"tag":"3503d3fa","listMetadata":"bb2a90a5"},"/apidoc/blog/welcome-34c":{"__comp":"ccc49370","__context":{"plugin":"0567e763"},"sidebar":"814f3328","content":"d9f32620"},"/apidoc/docs/grpc/grpcgateway-140":{"__comp":"f0ad3fbb","__context":{"plugin":"76992171"},"specProps":"b15d7f3a","layoutProps":"0c39d879"},"/apidoc/markdown-page-228":{"__comp":"1f391b9e","__context":{"plugin":"cef4379d"},"content":"393be207"},"/apidoc/docs-8f0":{"__comp":"1be78505","__context":{"plugin":"5f0908de"},"versionMetadata":"935f2afb"},"/apidoc/docs/api/grpcrestapi/babylon-grpc-gateway-docs-05d":{"__comp":"4c5e977b","content":"4b1fd451"},"/apidoc/docs/api/grpcrestapi/base-header-f17":{"__comp":"4c5e977b","content":"2384311c"},"/apidoc/docs/api/grpcrestapi/bls-public-key-list-87e":{"__comp":"4c5e977b","content":"1a7d492f"},"/apidoc/docs/api/grpcrestapi/btc-checkpoint-height-8e8":{"__comp":"4c5e977b","content":"33287de7"},"/apidoc/docs/api/grpcrestapi/btc-checkpoint-params-2d9":{"__comp":"4c5e977b","content":"5820e049"},"/apidoc/docs/api/grpcrestapi/btc-light-client-params-339":{"__comp":"4c5e977b","content":"ec1ae86d"},"/apidoc/docs/api/grpcrestapi/chain-info-b35":{"__comp":"4c5e977b","content":"3d89ea8f"},"/apidoc/docs/api/grpcrestapi/chain-list-6b9":{"__comp":"4c5e977b","content":"9aa60822"},"/apidoc/docs/api/grpcrestapi/checkpointing-params-8da":{"__comp":"4c5e977b","content":"a7d005fb"},"/apidoc/docs/api/grpcrestapi/contains-a24":{"__comp":"4c5e977b","content":"fccd764a"},"/apidoc/docs/api/grpcrestapi/contains-bytes-57b":{"__comp":"4c5e977b","content":"ebc755b0"},"/apidoc/docs/api/grpcrestapi/current-epoch-c20":{"__comp":"4c5e977b","content":"711fe809"},"/apidoc/docs/api/grpcrestapi/delegation-lifecycle-376":{"__comp":"4c5e977b","content":"02eb01e9"},"/apidoc/docs/api/grpcrestapi/epoch-chain-info-5ff":{"__comp":"4c5e977b","content":"08037f58"},"/apidoc/docs/api/grpcrestapi/epoch-info-fb5":{"__comp":"4c5e977b","content":"c242c3ad"},"/apidoc/docs/api/grpcrestapi/epoch-msgs-65c":{"__comp":"4c5e977b","content":"23fc0d24"},"/apidoc/docs/api/grpcrestapi/epoch-status-6ea":{"__comp":"4c5e977b","content":"d8cbbe4e"},"/apidoc/docs/api/grpcrestapi/epoch-submissions-4a5":{"__comp":"4c5e977b","content":"c82c0fdc"},"/apidoc/docs/api/grpcrestapi/epoch-val-set-37d":{"__comp":"4c5e977b","content":"a6d21958"},"/apidoc/docs/api/grpcrestapi/epoching-params-b49":{"__comp":"4c5e977b","content":"949b4210"},"/apidoc/docs/api/grpcrestapi/finalized-chain-info-926":{"__comp":"4c5e977b","content":"7b937b5f"},"/apidoc/docs/api/grpcrestapi/finalized-chain-info-until-height-552":{"__comp":"4c5e977b","content":"a54ec436"},"/apidoc/docs/api/grpcrestapi/hashes-b2c":{"__comp":"4c5e977b","content":"1868abd6"},"/apidoc/docs/api/grpcrestapi/header-e8a":{"__comp":"4c5e977b","content":"ad9f86d8"},"/apidoc/docs/api/grpcrestapi/latest-epoch-msgs-dca":{"__comp":"4c5e977b","content":"7e73a4da"},"/apidoc/docs/api/grpcrestapi/list-epoch-headers-3d1":{"__comp":"4c5e977b","content":"af497ca6"},"/apidoc/docs/api/grpcrestapi/list-headers-ef6":{"__comp":"4c5e977b","content":"de2b01a4"},"/apidoc/docs/api/grpcrestapi/main-chain-843":{"__comp":"4c5e977b","content":"426c3a01"},"/apidoc/docs/api/grpcrestapi/raw-checkpoint-0a4":{"__comp":"4c5e977b","content":"0777b074"},"/apidoc/docs/api/grpcrestapi/raw-checkpoint-list-aca":{"__comp":"4c5e977b","content":"3e6683ec"},"/apidoc/docs/api/grpcrestapi/recent-epoch-status-count-31d":{"__comp":"4c5e977b","content":"d1787a9f"},"/apidoc/docs/api/grpcrestapi/tip-e8d":{"__comp":"4c5e977b","content":"53c45384"},"/apidoc/docs/api/grpcrestapi/validator-lifecycle-249":{"__comp":"4c5e977b","content":"edfa09b1"},"/apidoc/docs/api/grpcrestapi/zone-concierge-params-121":{"__comp":"4c5e977b","content":"d4f2b85f"},"/apidoc/docs/cli/babylond-ef1":{"__comp":"4c5e977b","content":"97630d5d"},"/apidoc/docs/cli/babylond/babylond_query-40a":{"__comp":"4c5e977b","content":"aba028c7"},"/apidoc/docs/cli/babylond/babylond_rollback-2fe":{"__comp":"4c5e977b","content":"8bde4836"},"/apidoc/docs/cli/babylond/babylond_rosetta-568":{"__comp":"4c5e977b","content":"aa257079"},"/apidoc/docs/cli/babylond/babylond_start-9c7":{"__comp":"4c5e977b","content":"21f3b83d"},"/apidoc/docs/cli/babylond/babylond_status-619":{"__comp":"4c5e977b","content":"724412d8"},"/apidoc/docs/cli/babylond/babylond_tendermint-b8e":{"__comp":"4c5e977b","content":"2caec398"},"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_reset-state-3f4":{"__comp":"4c5e977b","content":"e62d0efd"},"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-address-988":{"__comp":"4c5e977b","content":"e26929b5"},"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-node-id-d2b":{"__comp":"4c5e977b","content":"c9037805"},"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-validator-848":{"__comp":"4c5e977b","content":"c547cdc3"},"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_unsafe-reset-all-0d6":{"__comp":"4c5e977b","content":"db1253b6"},"/apidoc/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_version-724":{"__comp":"4c5e977b","content":"8db0ce6c"},"/apidoc/docs/cli/babylond/babylond_testnet-57b":{"__comp":"4c5e977b","content":"fb6d5b68"},"/apidoc/docs/cli/babylond/babylond_tx-cfc":{"__comp":"4c5e977b","content":"585f616c"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_authz-5b9":{"__comp":"4c5e977b","content":"93f71b78"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_exec-10f":{"__comp":"4c5e977b","content":"7c29905b"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_grant-c04":{"__comp":"4c5e977b","content":"a36d55fe"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_revoke-648":{"__comp":"4c5e977b","content":"b77fbdff"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_bank-f83":{"__comp":"4c5e977b","content":"0a4d6b8a"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_multi-send-a68":{"__comp":"4c5e977b","content":"3f490425"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_send-bac":{"__comp":"4c5e977b","content":"023d5484"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_broadcast-d11":{"__comp":"4c5e977b","content":"d1d51956"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_btccheckpoint-32b":{"__comp":"4c5e977b","content":"27253e58"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_btclightclient-7ed":{"__comp":"4c5e977b","content":"ba40830b"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_btclightclient/babylond_tx_btclightclient_insert-header-7d7":{"__comp":"4c5e977b","content":"8864572c"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_checkpointing-9dd":{"__comp":"4c5e977b","content":"931b1004"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_create-validator-bbe":{"__comp":"4c5e977b","content":"1033b0d6"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_submit-08e":{"__comp":"4c5e977b","content":"53394050"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_crisis-9db":{"__comp":"4c5e977b","content":"f21cae60"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_crisis/babylond_tx_crisis_invariant-broken-bad":{"__comp":"4c5e977b","content":"05ac45e4"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_decode-2ec":{"__comp":"4c5e977b","content":"82266c47"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_distribution-c3d":{"__comp":"4c5e977b","content":"644dbebd"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_fund-community-pool-a50":{"__comp":"4c5e977b","content":"1c456eaf"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_set-withdraw-addr-f74":{"__comp":"4c5e977b","content":"292c00bc"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-all-rewards-706":{"__comp":"4c5e977b","content":"2bd00f93"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-rewards-877":{"__comp":"4c5e977b","content":"412d8407"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_encode-5fb":{"__comp":"4c5e977b","content":"13a1fbb0"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_epoching-524":{"__comp":"4c5e977b","content":"eeb71042"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_delegate-52a":{"__comp":"4c5e977b","content":"56e39b36"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_redelegate-ba5":{"__comp":"4c5e977b","content":"619472db"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_unbond-35d":{"__comp":"4c5e977b","content":"2b59cf14"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_evidence-a28":{"__comp":"4c5e977b","content":"09ed871c"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_feegrant-9e2":{"__comp":"4c5e977b","content":"f143feff"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_grant-d00":{"__comp":"4c5e977b","content":"a8fe0fb3"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_revoke-c86":{"__comp":"4c5e977b","content":"c8f32a9c"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_gov-468":{"__comp":"4c5e977b","content":"b9282eb2"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_deposit-9ef":{"__comp":"4c5e977b","content":"129830a0"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_draft-proposal-000":{"__comp":"4c5e977b","content":"5ae584b9"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-legacy-proposal-b5b":{"__comp":"4c5e977b","content":"8d9badde"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-proposal-36a":{"__comp":"4c5e977b","content":"feda6033"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_vote-c8e":{"__comp":"4c5e977b","content":"355c55a7"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_weighted-vote-fc7":{"__comp":"4c5e977b","content":"8d2b3928"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_cancel-282":{"__comp":"4c5e977b","content":"b12935f3"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_community-332":{"__comp":"4c5e977b","content":"4182ceb5"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_param-7e1":{"__comp":"4c5e977b","content":"f25ac144"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_software-b23":{"__comp":"4c5e977b","content":"78d4fe60"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_ibc-19b":{"__comp":"4c5e977b","content":"69c45431"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_ibc-transfer-d02":{"__comp":"4c5e977b","content":"e78c6cc1"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc-transfer/babylond_tx_ibc-transfer_transfer-f4f":{"__comp":"4c5e977b","content":"88f54128"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_channel-0c7":{"__comp":"4c5e977b","content":"0a55688e"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_client-6e0":{"__comp":"4c5e977b","content":"02c6b0f6"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_create-4d8":{"__comp":"4c5e977b","content":"ca7fe314"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_misbehaviour-7de":{"__comp":"4c5e977b","content":"0050cec8"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_update-17d":{"__comp":"4c5e977b","content":"2c795bdf"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_upgrade-fd6":{"__comp":"4c5e977b","content":"539f07f8"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_multi-sign-eeb":{"__comp":"4c5e977b","content":"6577c18f"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_multi-sign/babylond_tx_multi-sign-batch-92d":{"__comp":"4c5e977b","content":"d7d4476b"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_sign-175":{"__comp":"4c5e977b","content":"4573be6e"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_sign/babylond_tx_sign-batch-5ba":{"__comp":"4c5e977b","content":"8ccb9270"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_slashing-c0d":{"__comp":"4c5e977b","content":"bbee4615"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_slashing/babylond_tx_slashing_unjail-fca":{"__comp":"4c5e977b","content":"3e16bd3c"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_staking-2d7":{"__comp":"4c5e977b","content":"37fc00db"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_cancel-unbond-e3d":{"__comp":"4c5e977b","content":"950a5e71"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_create-validator-e33":{"__comp":"4c5e977b","content":"9fa6981a"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_delegate-05f":{"__comp":"4c5e977b","content":"3428c9c5"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_edit-validator-d1b":{"__comp":"4c5e977b","content":"1a79e3e4"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_redelegate-284":{"__comp":"4c5e977b","content":"3f17b17d"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_unbond-e22":{"__comp":"4c5e977b","content":"f2a5e09c"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_validate-signatures-a44":{"__comp":"4c5e977b","content":"d93305d8"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_vesting-7c5":{"__comp":"4c5e977b","content":"a3e4e4c0"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-periodic-vesting-account-0b9":{"__comp":"4c5e977b","content":"f7acca86"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-permanent-locked-account-f8f":{"__comp":"4c5e977b","content":"ba2a6edb"},"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-vesting-account-f51":{"__comp":"4c5e977b","content":"b4ee7837"},"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_zoneconcierge-5fb":{"__comp":"4c5e977b","content":"df3454d6"},"/apidoc/docs/cli/babylond/babylond_validate-genesis-327":{"__comp":"4c5e977b","content":"7f97ed30"},"/apidoc/docs/cli/babylond/babylond_version-035":{"__comp":"4c5e977b","content":"ab92f75c"},"/apidoc/docs/cli/babylond/babylondaddgenesisaccount-868":{"__comp":"4c5e977b","content":"d440eb69"},"/apidoc/docs/cli/babylond/babylondaddgenesisbls-0e1":{"__comp":"4c5e977b","content":"9d65994e"},"/apidoc/docs/cli/babylond/babylondcollectgentxs-1e6":{"__comp":"4c5e977b","content":"b7dd37ab"},"/apidoc/docs/cli/babylond/babylondconfig-723":{"__comp":"4c5e977b","content":"32e9a234"},"/apidoc/docs/cli/babylond/babylondcreatebls-c35":{"__comp":"4c5e977b","content":"e8a6fe18"},"/apidoc/docs/cli/babylond/babylondcreategenesiskey-49b":{"__comp":"4c5e977b","content":"9cfe81b5"},"/apidoc/docs/cli/babylond/babylondexport-d5c":{"__comp":"4c5e977b","content":"b8e92d05"},"/apidoc/docs/cli/babylond/babylondgentx-018":{"__comp":"4c5e977b","content":"87a5a85d"},"/apidoc/docs/cli/babylond/babylondhelp-74d":{"__comp":"4c5e977b","content":"ab5ad7f0"},"/apidoc/docs/cli/babylond/babylondinit-201":{"__comp":"4c5e977b","content":"e1ac0c72"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_account-75a":{"__comp":"4c5e977b","content":"f0002da9"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_auth-ba1":{"__comp":"4c5e977b","content":"f8d6bd51"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_account-3eb":{"__comp":"4c5e977b","content":"f25db916"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_accounts-9e3":{"__comp":"4c5e977b","content":"f6df7c26"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_address_by_acc_num-6c7":{"__comp":"4c5e977b","content":"650867e1"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_account-1a2":{"__comp":"4c5e977b","content":"35376bb6"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_accounts-bb1":{"__comp":"4c5e977b","content":"c995526c"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_params-35b":{"__comp":"4c5e977b","content":"b1e66850"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_authz-16f":{"__comp":"4c5e977b","content":"6da40f1c"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_authz/babylond_query_authz_grants-c66":{"__comp":"4c5e977b","content":"fecd3b53"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_grantee-9f3":{"__comp":"4c5e977b","content":"bc27a0c5"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_granter-811":{"__comp":"4c5e977b","content":"97d3f65a"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_bank-e47":{"__comp":"4c5e977b","content":"247d6260"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_balances-aa4":{"__comp":"4c5e977b","content":"f146aff7"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_denom_metadata-002":{"__comp":"4c5e977b","content":"d4f8fd38"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total-e5d":{"__comp":"4c5e977b","content":"6219935b"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_block-aba":{"__comp":"4c5e977b","content":"477abf25"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_btccheckpoint-116":{"__comp":"4c5e977b","content":"514f95a4"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_btc-height-ffb":{"__comp":"4c5e977b","content":"d938b752"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_epoch_submissions-b69":{"__comp":"4c5e977b","content":"66acfe3f"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_params-317":{"__comp":"4c5e977b","content":"36d51805"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_btclightclient-69c":{"__comp":"4c5e977b","content":"d1d1ba10"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_base-header-670":{"__comp":"4c5e977b","content":"f0b52e0e"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_contains-600":{"__comp":"4c5e977b","content":"aae61c4f"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes-5bb":{"__comp":"4c5e977b","content":"3a26d8c9"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_main-chain-118":{"__comp":"4c5e977b","content":"2fb40881"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_params-292":{"__comp":"4c5e977b","content":"f5f11e92"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip-6ae":{"__comp":"4c5e977b","content":"d250a8ad"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_checkpointing-369":{"__comp":"4c5e977b","content":"99d35970"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_params-a3c":{"__comp":"4c5e977b","content":"ddfe76eb"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_raw_checkpoint-fa1":{"__comp":"4c5e977b","content":"5dc50702"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/Babylond_query_checkpointing_raw-checkpoint/babylond_query_checkpointing_raw-checkpoint_list-bfb":{"__comp":"4c5e977b","content":"b6fccf6e"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_distribution-048":{"__comp":"4c5e977b","content":"e6a2758f"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_commission-36f":{"__comp":"4c5e977b","content":"e51d6c97"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_community-pool-7d4":{"__comp":"4c5e977b","content":"48ac78cb"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_params-349":{"__comp":"4c5e977b","content":"34aaa592"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_rewards-a64":{"__comp":"4c5e977b","content":"e6d9f638"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes-46a":{"__comp":"4c5e977b","content":"f7c1d69e"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_validator-outstanding-rewards-b04":{"__comp":"4c5e977b","content":"a9d610a1"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_epoching-a56":{"__comp":"4c5e977b","content":"717a57ce"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_epoching/babylond_query_epoching_params-03e":{"__comp":"4c5e977b","content":"4d89e75c"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_evidence-874":{"__comp":"4c5e977b","content":"8a79d444"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_freegrant-685":{"__comp":"4c5e977b","content":"c408363e"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grant-fcb":{"__comp":"4c5e977b","content":"518fb95a"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-grantee-735":{"__comp":"4c5e977b","content":"9f8154fe"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-granter-256":{"__comp":"4c5e977b","content":"367a652a"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_gov-e95":{"__comp":"4c5e977b","content":"d4165f1a"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposit-c8e":{"__comp":"4c5e977b","content":"52b51599"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposits-700":{"__comp":"4c5e977b","content":"3157d042"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_param-1cb":{"__comp":"4c5e977b","content":"d7a7851b"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_params-b53":{"__comp":"4c5e977b","content":"7e8f1375"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposal-ba6":{"__comp":"4c5e977b","content":"d8749342"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposals-32d":{"__comp":"4c5e977b","content":"62778379"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposer-8bf":{"__comp":"4c5e977b","content":"b1fc52f3"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_tally-c7c":{"__comp":"4c5e977b","content":"f2f43978"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_vote-278":{"__comp":"4c5e977b","content":"2eb7da4f"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_votes-97c":{"__comp":"4c5e977b","content":"e4304727"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc-c17":{"__comp":"4c5e977b","content":"74dba243"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel-d1f":{"__comp":"4c5e977b","content":"f7309b79"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_channels-82b":{"__comp":"4c5e977b","content":"1877a045"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_client-state-629":{"__comp":"4c5e977b","content":"8c01dac4"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_connections-815":{"__comp":"4c5e977b","content":"a0a8a56a"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_end-820":{"__comp":"4c5e977b","content":"8096b0fb"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_next-sequence-receive-24e":{"__comp":"4c5e977b","content":"0829dae6"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-ack-a87":{"__comp":"4c5e977b","content":"7c3b5472"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitment-9a2":{"__comp":"4c5e977b","content":"1cce00e2"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitments-596":{"__comp":"4c5e977b","content":"72b5b2cd"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-receipt-b12":{"__comp":"4c5e977b","content":"8577035f"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-acks-21e":{"__comp":"4c5e977b","content":"723ec160"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-packets-2a6":{"__comp":"4c5e977b","content":"842431f6"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client-7b5":{"__comp":"4c5e977b","content":"f2d8f05a"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-ed0":{"__comp":"4c5e977b","content":"53c3e127"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights-12b":{"__comp":"4c5e977b","content":"9589a28f"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-states-3d0":{"__comp":"4c5e977b","content":"344ec060"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_header-c11":{"__comp":"4c5e977b","content":"b827fdf0"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_params-a0d":{"__comp":"4c5e977b","content":"01dc7620"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_self-consensus-state-290":{"__comp":"4c5e977b","content":"caec69ce"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_state-4d0":{"__comp":"4c5e977b","content":"bf929bd0"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_states-c1c":{"__comp":"4c5e977b","content":"b7c1d8ec"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_status-511":{"__comp":"4c5e977b","content":"5f3a7ce3"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection-72f":{"__comp":"4c5e977b","content":"dba3a055"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections-e9d":{"__comp":"4c5e977b","content":"6c9df304"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_end-7c2":{"__comp":"4c5e977b","content":"5e700ccf"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_path-b30":{"__comp":"4c5e977b","content":"adcea2b6"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer-928":{"__comp":"4c5e977b","content":"6bde4b50"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-hash-bc8":{"__comp":"4c5e977b","content":"e774afe7"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-trace-f8e":{"__comp":"4c5e977b","content":"b90b3a7e"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces-1ca":{"__comp":"4c5e977b","content":"ee81f057"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_escrow-address-3e4":{"__comp":"4c5e977b","content":"39d5844c"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_params-69a":{"__comp":"4c5e977b","content":"de8bf585"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_mint-bae":{"__comp":"4c5e977b","content":"76ae80a3"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_annual-provisions-1db":{"__comp":"4c5e977b","content":"f0d35eb9"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_inflation-715":{"__comp":"4c5e977b","content":"e069cd4d"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_params-0e4":{"__comp":"4c5e977b","content":"131bb82e"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_params-3ed":{"__comp":"4c5e977b","content":"da75e4a9"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_params/babylond_query_params_subspace-fb6":{"__comp":"4c5e977b","content":"d3d9a0b4"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_slashing-ce8":{"__comp":"4c5e977b","content":"014f4ee7"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_params-b56":{"__comp":"4c5e977b","content":"0e297078"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-info-f62":{"__comp":"4c5e977b","content":"13932ee9"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-infos-8d8":{"__comp":"4c5e977b","content":"d435fc59"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_staking-e56":{"__comp":"4c5e977b","content":"d0e52832"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegation-e1b":{"__comp":"4c5e977b","content":"04327b46"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations-10d":{"__comp":"4c5e977b","content":"fc99b1a5"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations-to-7b0":{"__comp":"4c5e977b","content":"0fe40e95"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_historical-info-f2f":{"__comp":"4c5e977b","content":"c34e7a6e"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_params-a83":{"__comp":"4c5e977b","content":"091274c2"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_pool-4ec":{"__comp":"4c5e977b","content":"20e5f862"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation-a98":{"__comp":"4c5e977b","content":"191a15fc"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation-from-e6c":{"__comp":"4c5e977b","content":"09d0d5ad"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegations-be6":{"__comp":"4c5e977b","content":"996c978f"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegation-a0c":{"__comp":"4c5e977b","content":"897edd02"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations-647":{"__comp":"4c5e977b","content":"f490d6fa"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations-from-c9d":{"__comp":"4c5e977b","content":"8202da25"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validator-ce9":{"__comp":"4c5e977b","content":"0e2e2b9f"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validators-300":{"__comp":"4c5e977b","content":"76c99db7"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_tendermint-validator-set-87e":{"__comp":"4c5e977b","content":"1332f989"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_tx-33d":{"__comp":"4c5e977b","content":"337c891c"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_txs-078":{"__comp":"4c5e977b","content":"754b7ab8"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_upgrade-b48":{"__comp":"4c5e977b","content":"34555ecd"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_applied-1b4":{"__comp":"4c5e977b","content":"ca39e9bd"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_module_versions-cfe":{"__comp":"4c5e977b","content":"1d3a1682"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_plan-02a":{"__comp":"4c5e977b","content":"7b379542"},"/apidoc/docs/cli/babylond/BabylondQuery/babylond_query_zoneconcierge-905":{"__comp":"4c5e977b","content":"ffe593fd"},"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_zoneconcierge/babylond_query_zoneconcierge_params-87b":{"__comp":"4c5e977b","content":"6608bb89"},"/apidoc/docs/cli/babylond/cli-49e":{"__comp":"4c5e977b","content":"e05a6a08"},"/apidoc/docs/cli/babylond/debug/babylonddebug-b22":{"__comp":"4c5e977b","content":"40efbf63"},"/apidoc/docs/cli/babylond/debug/babylonddebugaddr-4e6":{"__comp":"4c5e977b","content":"179f4fba"},"/apidoc/docs/cli/babylond/debug/babylonddebugpubkey-718":{"__comp":"4c5e977b","content":"bfd3e7b8"},"/apidoc/docs/cli/babylond/debug/babylonddebugpubkeyraw-22c":{"__comp":"4c5e977b","content":"88023c77"},"/apidoc/docs/cli/babylond/debug/babylonddebugrawbytes-1e8":{"__comp":"4c5e977b","content":"57c6c789"},"/apidoc/docs/cli/babylond/keys/babylondkeys-45b":{"__comp":"4c5e977b","content":"6201f6e2"},"/apidoc/docs/cli/babylond/keys/babylondkeysdd-e8b":{"__comp":"4c5e977b","content":"69e1f829"},"/apidoc/docs/cli/babylond/keys/babylondkeysdelete-f87":{"__comp":"4c5e977b","content":"5b0c3766"},"/apidoc/docs/cli/babylond/keys/babylondkeysexport-524":{"__comp":"4c5e977b","content":"c0853f72"},"/apidoc/docs/cli/babylond/keys/babylondkeysimport-0a2":{"__comp":"4c5e977b","content":"30bab282"},"/apidoc/docs/cli/babylond/keys/babylondkeyslist-9bf":{"__comp":"4c5e977b","content":"464ad3b9"},"/apidoc/docs/cli/babylond/keys/babylondkeysmigrate-030":{"__comp":"4c5e977b","content":"cccb8c24"},"/apidoc/docs/cli/babylond/keys/babylondkeysmnemonic-31a":{"__comp":"4c5e977b","content":"f683d94e"},"/apidoc/docs/cli/babylond/keys/babylondkeysparse-6df":{"__comp":"4c5e977b","content":"8bf43321"},"/apidoc/docs/cli/babylond/keys/babylondkeysrename-c9c":{"__comp":"4c5e977b","content":"1210801f"},"/apidoc/docs/cli/babylond/keys/babylondkeysshow-c51":{"__comp":"4c5e977b","content":"7c2f8619"},"/apidoc/docs/cli/babylond/migrate-85b":{"__comp":"4c5e977b","content":"8d94e231"},"/apidoc/docs/cli/babylond/preparegenesis-e62":{"__comp":"4c5e977b","content":"783b9dc0"},"/apidoc/docs/error-8a6":{"__comp":"4c5e977b","content":"f9d25b73"},"/apidoc/docs/grpc/btccheckpointgrpc-127":{"__comp":"4c5e977b","content":"f99359f4"},"/apidoc/docs/grpc/btclightclient/lightclient1-fe0":{"__comp":"4c5e977b","content":"3ce0fe92"},"/apidoc/docs/grpc/btclightclient/lightcontains-3fc":{"__comp":"4c5e977b","content":"54df146b"},"/apidoc/docs/grpc/btclightclient/lightcontainsbytes-b01":{"__comp":"4c5e977b","content":"70e84bbf"},"/apidoc/docs/grpc/btclightclient/lighthashes-bb8":{"__comp":"4c5e977b","content":"a42ea166"},"/apidoc/docs/grpc/btclightclient/lightheader-84a":{"__comp":"4c5e977b","content":"93a5a6ba"},"/apidoc/docs/grpc/btclightclient/lightmainchain-916":{"__comp":"4c5e977b","content":"2addcce7"},"/apidoc/docs/grpc/btclightclient/lightparams-0f7":{"__comp":"4c5e977b","content":"d917e943"},"/apidoc/docs/grpc/btclightclient/lighttip-9cf":{"__comp":"4c5e977b","content":"f04cd1df"},"/apidoc/docs/grpc/checkpointing/checkpointmod-6e6":{"__comp":"4c5e977b","content":"80d1d363"},"/apidoc/docs/grpc/checkpointing/rawcheckpoint-01f":{"__comp":"4c5e977b","content":"076ba573"},"/apidoc/docs/grpc/checkpointing/rawcheckpointlistepochnum-172":{"__comp":"4c5e977b","content":"12aff4c6"},"/apidoc/docs/grpc/checkpointing/rawcheckpointliststatus-2eb":{"__comp":"4c5e977b","content":"6c3eb83b"},"/apidoc/docs/grpc/concierge/conciergeparams-926":{"__comp":"4c5e977b","content":"a1548de2"},"/apidoc/docs/grpc/concierge/zoneconcierge-b4d":{"__comp":"4c5e977b","content":"73c537b2"},"/apidoc/docs/grpc/epoching/currentepoch-b89":{"__comp":"4c5e977b","content":"7a6f556f"},"/apidoc/docs/grpc/epoching/delegationlifecycle-7a8":{"__comp":"4c5e977b","content":"17a6837b"},"/apidoc/docs/grpc/epoching/epoch-261":{"__comp":"4c5e977b","content":"8ac87bae"},"/apidoc/docs/grpc/epoching/epochinfomod-ed3":{"__comp":"4c5e977b","content":"4cac5f92"},"/apidoc/docs/grpc/epoching/epochmsgs-452":{"__comp":"4c5e977b","content":"acd9bc67"},"/apidoc/docs/grpc/epoching/latepochmsgs-543":{"__comp":"4c5e977b","content":"2d04bfba"},"/apidoc/docs/grpc/epoching/paramsmod-e58":{"__comp":"4c5e977b","content":"887aa848"},"/apidoc/docs/grpc/epoching/validatorlifecycle-cda":{"__comp":"4c5e977b","content":"0d59a6af"},"/apidoc/docs/grpc/epochnum-044":{"__comp":"4c5e977b","content":"18151a89"},"/apidoc/docs/grpc/grpcgateway-6ea":{"__comp":"4c5e977b","content":"4a8c2c5c"},"/apidoc/docs/grpc/grpcparams-151":{"__comp":"4c5e977b","content":"28700d96"},"/apidoc/docs/grpc/submissions-152":{"__comp":"4c5e977b","content":"76fd2b43"},"/apidoc/docs/installation-0f0":{"__comp":"4c5e977b","content":"3b8c55ea"},"/apidoc/docs/intro-7d8":{"__comp":"4c5e977b","content":"0e384e19"},"/apidoc/docs/introduction/keycomponent-9a1":{"__comp":"4c5e977b","content":"9b2893e4"},"/apidoc/docs/introduction/overview-a47":{"__comp":"4c5e977b","content":"7616f23a"},"/apidoc/docs/introduction/usecase-ffa":{"__comp":"4c5e977b","content":"ce90e1bb"},"/apidoc/docs/module/btccheckpoint-ecb":{"__comp":"4c5e977b","content":"4fb97012"},"/apidoc/docs/module/btccheckpoint/checkpointheight-fc2":{"__comp":"4c5e977b","content":"056e3474"},"/apidoc/docs/module/btccheckpoint/checkpointparams-9e1":{"__comp":"4c5e977b","content":"0e07b709"},"/apidoc/docs/module/btccheckpoint/epochsubmissions-3e8":{"__comp":"4c5e977b","content":"cfa22f06"},"/apidoc/docs/module/btclightclient/lightbaseheader-df2":{"__comp":"4c5e977b","content":"51d861a8"},"/apidoc/docs/module/btclightclient/lightclient-bcb":{"__comp":"4c5e977b","content":"23a912d8"},"/apidoc/docs/module/btclightclient/lightcontains-f4d":{"__comp":"4c5e977b","content":"e86d70b1"},"/apidoc/docs/module/btclightclient/lightcontainsbytes-9f0":{"__comp":"4c5e977b","content":"c6a8074a"},"/apidoc/docs/module/btclightclient/lighthashes-c00":{"__comp":"4c5e977b","content":"06134f0d"},"/apidoc/docs/module/btclightclient/lightmainchain-ff7":{"__comp":"4c5e977b","content":"b7e4a079"},"/apidoc/docs/module/btclightclient/lightparams-052":{"__comp":"4c5e977b","content":"13a10e97"},"/apidoc/docs/module/btclightclient/lighttip-255":{"__comp":"4c5e977b","content":"2dfca948"},"/apidoc/docs/module/checkpointing/blspublickey-e2b":{"__comp":"4c5e977b","content":"46b365f0"},"/apidoc/docs/module/checkpointing/checkpointingmod-24c":{"__comp":"4c5e977b","content":"c3de34ef"},"/apidoc/docs/module/checkpointing/checkpointparams-220":{"__comp":"4c5e977b","content":"1da3a3bc"},"/apidoc/docs/module/checkpointing/epochstatus-280":{"__comp":"4c5e977b","content":"160700eb"},"/apidoc/docs/module/checkpointing/latestcheckpoint-bd3":{"__comp":"4c5e977b","content":"6880662b"},"/apidoc/docs/module/checkpointing/rawcheckpoint-7fb":{"__comp":"4c5e977b","content":"0f9c2af6"},"/apidoc/docs/module/checkpointing/rawcheckpointinglist-de2":{"__comp":"4c5e977b","content":"c99340e8"},"/apidoc/docs/module/checkpointing/recentepochcount-6b6":{"__comp":"4c5e977b","content":"b49ee925"},"/apidoc/docs/module/checkpointing/recentrawcheckpointinglist-203":{"__comp":"4c5e977b","content":"827dfebe"},"/apidoc/docs/module/czconcierge-bef":{"__comp":"4c5e977b","content":"7c50f4ba"},"/apidoc/docs/module/czconcierge/chaininfo-861":{"__comp":"4c5e977b","content":"cd73b40d"},"/apidoc/docs/module/czconcierge/chainlist-4e5":{"__comp":"4c5e977b","content":"bc7aca4e"},"/apidoc/docs/module/czconcierge/conciergeparams-2db":{"__comp":"4c5e977b","content":"9350a5a3"},"/apidoc/docs/module/czconcierge/finalizedchaininfo-e3c":{"__comp":"4c5e977b","content":"29975613"},"/apidoc/docs/module/epoch/currentepoch-059":{"__comp":"4c5e977b","content":"7cad74f6"},"/apidoc/docs/module/epoch/delegationlifecycle-84c":{"__comp":"4c5e977b","content":"9b791eca"},"/apidoc/docs/module/epoch/epochinfomod-48e":{"__comp":"4c5e977b","content":"79470671"},"/apidoc/docs/module/epoch/epochingmod-981":{"__comp":"4c5e977b","content":"09079159"},"/apidoc/docs/module/epoch/epochmsgs-e3e":{"__comp":"4c5e977b","content":"1532ecac"},"/apidoc/docs/module/epoch/latepochmsgs-48b":{"__comp":"4c5e977b","content":"8ca812c0"},"/apidoc/docs/module/epoch/paramsmod-b93":{"__comp":"4c5e977b","content":"c7c8705a"},"/apidoc/docs/module/epoch/validatorlifecycle-42e":{"__comp":"4c5e977b","content":"cd28d114"},"/apidoc/docs/modules-818":{"__comp":"4c5e977b","content":"23d28cd9"},"/apidoc/docs/node/nodeconfig-68a":{"__comp":"4c5e977b","content":"66992ff9"},"/apidoc/docs/node/nodemanage-92a":{"__comp":"4c5e977b","content":"b8e79801"},"/apidoc/docs/node/nodeoperator-1dc":{"__comp":"4c5e977b","content":"852f6c57"},"/apidoc/docs/resources-9e0":{"__comp":"4c5e977b","content":"33364b1e"},"/apidoc/docs/resources/mainnet-f86":{"__comp":"4c5e977b","content":"2ebb7e86"},"/apidoc/docs/resources/testnet-27f":{"__comp":"4c5e977b","content":"204b86e3"},"/apidoc/docs/setnode-cab":{"__comp":"4c5e977b","content":"75bf5d41"},"/apidoc/docs/support-526":{"__comp":"4c5e977b","content":"d9e16301"},"/apidoc/docs/videoguides-46f":{"__comp":"4c5e977b","content":"43a1ef79"},"/apidoc/-480":{"__comp":"c4f5d8e4","__context":{"plugin":"cef4379d"},"config":"5e9f5e1a"}}')}},e=>{e.O(0,[532],(()=>{return t=49383,e(e.s=t);var t}));e.O()}]);