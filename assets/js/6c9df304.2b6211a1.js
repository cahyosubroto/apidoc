"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[841],{3905:(n,e,o)=>{o.d(e,{Zo:()=>b,kt:()=>s});var t=o(67294);function c(n,e,o){return e in n?Object.defineProperty(n,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[e]=o,n}function r(n,e){var o=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),o.push.apply(o,t)}return o}function i(n){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?r(Object(o),!0).forEach((function(e){c(n,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(o,e))}))}return n}function a(n,e){if(null==n)return{};var o,t,c=function(n,e){if(null==n)return{};var o,t,c={},r=Object.keys(n);for(t=0;t<r.length;t++)o=r[t],e.indexOf(o)>=0||(c[o]=n[o]);return c}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(t=0;t<r.length;t++)o=r[t],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(n,o)&&(c[o]=n[o])}return c}var l=t.createContext({}),d=function(n){var e=t.useContext(l),o=e;return n&&(o="function"==typeof n?n(e):i(i({},e),n)),o},b=function(n){var e=d(n.components);return t.createElement(l.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return t.createElement(t.Fragment,{},e)}},y=t.forwardRef((function(n,e){var o=n.components,c=n.mdxType,r=n.originalType,l=n.parentName,b=a(n,["components","mdxType","originalType","parentName"]),y=d(o),s=c,p=y["".concat(l,".").concat(s)]||y[s]||u[s]||r;return o?t.createElement(p,i(i({ref:e},b),{},{components:o})):t.createElement(p,i({ref:e},b))}));function s(n,e){var o=arguments,c=e&&e.mdxType;if("string"==typeof n||c){var r=o.length,i=new Array(r);i[0]=y;var a={};for(var l in e)hasOwnProperty.call(e,l)&&(a[l]=e[l]);a.originalType=n,a.mdxType="string"==typeof n?n:c,i[1]=a;for(var d=2;d<r;d++)i[d]=o[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,o)}y.displayName="MDXCreateElement"},74769:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var t=o(87462),c=(o(67294),o(3905));const r={id:"Babylond_query_ibc_connection_connections",sidebar_label:"babylond query ibc connection connections",hide_table_of_contents:!0},i="babylond query ibc connection connections",a={unversionedId:"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections",id:"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections",title:"babylond query ibc connection connections",description:"Querying all the connections from a chain.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection",slug:"/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections.md",tags:[],version:"current",frontMatter:{id:"Babylond_query_ibc_connection_connections",sidebar_label:"babylond query ibc connection connections",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query ibc connection",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection"},next:{title:"babylond query ibc connection end",permalink:"/apidoc/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_end"}},l={},d=[{value:"query ibc connection connections command",id:"query-ibc-connection-connections-command",level:2},{value:"Example Command",id:"example-command",level:3},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],b={toc:d};function u(n){let{components:e,...o}=n;return(0,c.kt)("wrapper",(0,t.Z)({},b,o,{components:e,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"babylond-query-ibc-connection-connections"},"babylond query ibc connection connections"),(0,c.kt)("p",null,"Querying all the connections from a chain."),(0,c.kt)("h2",{id:"query-ibc-connection-connections-command"},"query ibc connection connections command"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"babylond query ibc connection connections [flags]\n")),(0,c.kt)("h3",{id:"example-command"},"Example Command"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"$ babylond query ibc connection connections\n")),(0,c.kt)("h2",{id:"options"},"Options"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},'      --count-total       count total number of records in connection ends to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for connections\n      --limit uint        pagination limit of connection ends to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint       pagination offset of connection ends to query for\n  -o, --output string     Output format (text|json) (default "text")\n      --page uint         pagination page of connection ends to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of connection ends to query for\n      --reverse           results are sorted in descending order\n')),(0,c.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}u.isMDXComponent=!0}}]);