"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[3047],{3905:(n,e,t)=>{t.d(e,{Zo:()=>d,kt:()=>u});var a=t(67294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},o=Object.keys(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var s=a.createContext({}),c=function(n){var e=a.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},d=function(n){var e=c(n.components);return a.createElement(s.Provider,{value:e},n.children)},b={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},p=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,o=n.originalType,s=n.parentName,d=i(n,["components","mdxType","originalType","parentName"]),p=c(t),u=r,y=p["".concat(s,".").concat(u)]||p[u]||b[u]||o;return t?a.createElement(y,l(l({ref:e},d),{},{components:t})):a.createElement(y,l({ref:e},d))}));function u(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=t.length,l=new Array(o);l[0]=p;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=n,i.mdxType="string"==typeof n?n:r,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},23775:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>b,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(87462),r=(t(67294),t(3905));const o={id:"babylond_tx_slashing",sidebar_label:"babylond tx slashing",hide_table_of_contents:!0},l="babylond tx slashing",i={unversionedId:"cli/babylond/Babylond_tx/babylond_tx_slashing",id:"cli/babylond/Babylond_tx/babylond_tx_slashing",title:"babylond tx slashing",description:"Querying subcommands for slashing transactions.",source:"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_slashing.md",sourceDirName:"cli/babylond/Babylond_tx",slug:"/cli/babylond/Babylond_tx/babylond_tx_slashing",permalink:"/apidoc/docs/cli/babylond/Babylond_tx/babylond_tx_slashing",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/Babylond_tx/Babylond_tx_slashing.md",tags:[],version:"current",frontMatter:{id:"babylond_tx_slashing",sidebar_label:"babylond tx slashing",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond tx sign-batch",permalink:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_sign/babylond_tx_sign-batch"},next:{title:"babylond tx slashing unjail",permalink:"/apidoc/docs/cli/babylond/Babylond_tx/Babylond_tx_slashing/babylond_tx_slashing_unjail"}},s={},c=[{value:"tx slashing commands",id:"tx-slashing-commands",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],d={toc:c};function b(n){let{components:e,...t}=n;return(0,r.kt)("wrapper",(0,a.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"babylond-tx-slashing"},"babylond tx slashing"),(0,r.kt)("p",null,"Querying subcommands for slashing transactions."),(0,r.kt)("h2",{id:"tx-slashing-commands"},"tx slashing commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"babylond tx slashing [flags]\nbabylond tx slashing [command]\n")),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-h, --help   help for slashing\n")),(0,r.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n')))}b.isMDXComponent=!0}}]);