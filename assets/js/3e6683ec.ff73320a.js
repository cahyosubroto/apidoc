"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[3692],{91810:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>T,contentTitle:()=>m,default:()=>k,frontMatter:()=>h,metadata:()=>u,toc:()=>f});var a=i(87462),s=(i(67294),i(3905)),n=i(26389),o=i(94891),r=i(75190),l=i(47507),c=i(24310),p=i(63303),d=(i(75035),i(85162));const h={id:"raw-checkpoint-list",title:"RawCheckpointList queries all checkpoints that match the given status.",description:"RawCheckpointList queries all checkpoints that match the given status.",sidebar_label:"RawCheckpointList queries all checkpoints that match the given status.",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"RawCheckpointList",responses:{200:{description:"A successful response.",content:{"*/*":{schema:{type:"object",properties:{raw_checkpoints:{type:"array",items:{type:"object",properties:{ckpt:{type:"object",properties:{epoch_num:{type:"string",format:"uint64",title:"epoch_num defines the epoch number the raw checkpoint is for"},last_commit_hash:{type:"string",format:"byte",title:"last_commit_hash defines the 'LastCommitHash' that individual BLS sigs are signed on"},bitmap:{type:"string",format:"byte",title:"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},bls_multi_sig:{type:"string",format:"byte",title:"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}},title:"RawCheckpoint wraps the BLS multi sig with meta data"},status:{type:"string",enum:["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],default:"CKPT_STATUS_ACCUMULATING",description:"CkptStatus is the status of a checkpoint.\n\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.",title:"status defines the status of the checkpoint"},bls_aggr_pk:{type:"string",format:"byte",title:"bls_aggr_pk defines the aggregated BLS public key"},power_sum:{type:"string",format:"uint64",title:"power_sum defines the accumulated voting power for the checkpoint"},lifecycle:{type:"array",items:{type:"object",properties:{state:{type:"string",enum:["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],default:"CKPT_STATUS_ACCUMULATING",description:"CkptStatus is the status of a checkpoint.\n\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.",title:"state defines the event of a state transition towards this state"},block_height:{type:"string",format:"uint64",title:"block_height is the height of the Babylon block that triggers the state update"},block_time:{type:"string",format:"date-time",title:"block_time is the timestamp in the Babylon block that triggers the state update"}}},description:"lifecycle defines the lifecycle of this checkpoint, i.e., each state transition and\nthe time (in both timestamp and block height) of this transition."}},description:"RawCheckpointWithMeta wraps the raw checkpoint with meta data."},title:"the order is going from the newest to oldest based on the epoch number"},pagination:{description:"pagination defines the pagination in the response.",type:"object",properties:{next_key:{type:"string",format:"byte",description:"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."},total:{type:"string",format:"uint64",title:"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}}}},description:"QueryRawCheckpointListResponse is the response type for the Query/RawCheckpoints\nRPC method."}}}},default:{description:"An unexpected error response.",content:{"*/*":{schema:{type:"object",properties:{error:{type:"string"},code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{type_url:{type:"string"},value:{type:"string",format:"byte"}}}}}}}}}},parameters:[{name:"status",description:"status defines the status of the raw checkpoints of the query",in:"path",required:!0,schema:{type:"string",enum:["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"]}},{name:"pagination.key",description:"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",in:"query",required:!1,schema:{type:"string",format:"byte"}},{name:"pagination.offset",description:"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",in:"query",required:!1,schema:{type:"string",format:"uint64"}},{name:"pagination.limit",description:"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",in:"query",required:!1,schema:{type:"string",format:"uint64"}},{name:"pagination.count_total",description:"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",in:"query",required:!1,schema:{type:"boolean"}},{name:"pagination.reverse",description:"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",in:"query",required:!1,schema:{type:"boolean"}}],tags:["Query"],description:"RawCheckpointList queries all checkpoints that match the given status.",method:"get",path:"/babylon/checkpointing/v1/raw_checkpoints/{status}",info:{title:"Babylon - gRPC Gateway docs",description:"A REST interface for state queries",version:"1.0.0"},postman:{name:"RawCheckpointList queries all checkpoints that match the given status.",description:{type:"text/plain"},url:{path:["babylon","checkpointing","v1","raw_checkpoints",":status"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",type:"text/plain"},key:"pagination.key",value:""},{disabled:!1,description:{content:"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",type:"text/plain"},key:"pagination.offset",value:""},{disabled:!1,description:{content:"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",type:"text/plain"},key:"pagination.limit",value:""},{disabled:!1,description:{content:"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",type:"text/plain"},key:"pagination.count_total",value:""},{disabled:!1,description:{content:"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",type:"text/plain"},key:"pagination.reverse",value:""}],variable:[{disabled:!1,description:{content:"(Required) status defines the status of the raw checkpoints of the query",type:"text/plain"},type:"any",value:"",key:"status"}]},header:[{key:"Accept",value:"*/*"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api/grpcrestapi/babylon-grpc-gateway-docs",custom_edit_url:null},m=void 0,u={unversionedId:"api/grpcrestapi/raw-checkpoint-list",id:"api/grpcrestapi/raw-checkpoint-list",title:"RawCheckpointList queries all checkpoints that match the given status.",description:"RawCheckpointList queries all checkpoints that match the given status.",source:"@site/docs/api/grpcrestapi/raw-checkpoint-list.api.mdx",sourceDirName:"api/grpcrestapi",slug:"/api/grpcrestapi/raw-checkpoint-list",permalink:"/apidoc/docs/api/grpcrestapi/raw-checkpoint-list",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"raw-checkpoint-list",title:"RawCheckpointList queries all checkpoints that match the given status.",description:"RawCheckpointList queries all checkpoints that match the given status.",sidebar_label:"RawCheckpointList queries all checkpoints that match the given status.",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"RawCheckpointList",responses:{200:{description:"A successful response.",content:{"*/*":{schema:{type:"object",properties:{raw_checkpoints:{type:"array",items:{type:"object",properties:{ckpt:{type:"object",properties:{epoch_num:{type:"string",format:"uint64",title:"epoch_num defines the epoch number the raw checkpoint is for"},last_commit_hash:{type:"string",format:"byte",title:"last_commit_hash defines the 'LastCommitHash' that individual BLS sigs are signed on"},bitmap:{type:"string",format:"byte",title:"bitmap defines the bitmap that indicates the signers of the BLS multi sig"},bls_multi_sig:{type:"string",format:"byte",title:"bls_multi_sig defines the multi sig that is aggregated from individual BLS sigs"}},title:"RawCheckpoint wraps the BLS multi sig with meta data"},status:{type:"string",enum:["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],default:"CKPT_STATUS_ACCUMULATING",description:"CkptStatus is the status of a checkpoint.\n\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.",title:"status defines the status of the checkpoint"},bls_aggr_pk:{type:"string",format:"byte",title:"bls_aggr_pk defines the aggregated BLS public key"},power_sum:{type:"string",format:"uint64",title:"power_sum defines the accumulated voting power for the checkpoint"},lifecycle:{type:"array",items:{type:"object",properties:{state:{type:"string",enum:["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"],default:"CKPT_STATUS_ACCUMULATING",description:"CkptStatus is the status of a checkpoint.\n\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.",title:"state defines the event of a state transition towards this state"},block_height:{type:"string",format:"uint64",title:"block_height is the height of the Babylon block that triggers the state update"},block_time:{type:"string",format:"date-time",title:"block_time is the timestamp in the Babylon block that triggers the state update"}}},description:"lifecycle defines the lifecycle of this checkpoint, i.e., each state transition and\nthe time (in both timestamp and block height) of this transition."}},description:"RawCheckpointWithMeta wraps the raw checkpoint with meta data."},title:"the order is going from the newest to oldest based on the epoch number"},pagination:{description:"pagination defines the pagination in the response.",type:"object",properties:{next_key:{type:"string",format:"byte",description:"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."},total:{type:"string",format:"uint64",title:"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}}}},description:"QueryRawCheckpointListResponse is the response type for the Query/RawCheckpoints\nRPC method."}}}},default:{description:"An unexpected error response.",content:{"*/*":{schema:{type:"object",properties:{error:{type:"string"},code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{type_url:{type:"string"},value:{type:"string",format:"byte"}}}}}}}}}},parameters:[{name:"status",description:"status defines the status of the raw checkpoints of the query",in:"path",required:!0,schema:{type:"string",enum:["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"]}},{name:"pagination.key",description:"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",in:"query",required:!1,schema:{type:"string",format:"byte"}},{name:"pagination.offset",description:"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",in:"query",required:!1,schema:{type:"string",format:"uint64"}},{name:"pagination.limit",description:"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",in:"query",required:!1,schema:{type:"string",format:"uint64"}},{name:"pagination.count_total",description:"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",in:"query",required:!1,schema:{type:"boolean"}},{name:"pagination.reverse",description:"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",in:"query",required:!1,schema:{type:"boolean"}}],tags:["Query"],description:"RawCheckpointList queries all checkpoints that match the given status.",method:"get",path:"/babylon/checkpointing/v1/raw_checkpoints/{status}",info:{title:"Babylon - gRPC Gateway docs",description:"A REST interface for state queries",version:"1.0.0"},postman:{name:"RawCheckpointList queries all checkpoints that match the given status.",description:{type:"text/plain"},url:{path:["babylon","checkpointing","v1","raw_checkpoints",":status"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",type:"text/plain"},key:"pagination.key",value:""},{disabled:!1,description:{content:"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",type:"text/plain"},key:"pagination.offset",value:""},{disabled:!1,description:{content:"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",type:"text/plain"},key:"pagination.limit",value:""},{disabled:!1,description:{content:"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",type:"text/plain"},key:"pagination.count_total",value:""},{disabled:!1,description:{content:"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",type:"text/plain"},key:"pagination.reverse",value:""}],variable:[{disabled:!1,description:{content:"(Required) status defines the status of the raw checkpoints of the query",type:"text/plain"},type:"any",value:"",key:"status"}]},header:[{key:"Accept",value:"*/*"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api/grpcrestapi/babylon-grpc-gateway-docs",custom_edit_url:null}},T={},f=[{value:"RawCheckpointList queries all checkpoints that match the given status.",id:"rawcheckpointlist-queries-all-checkpoints-that-match-the-given-status",level:2}],y={toc:f};function k(e){let{components:t,...i}=e;return(0,s.kt)("wrapper",(0,a.Z)({},y,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"rawcheckpointlist-queries-all-checkpoints-that-match-the-given-status"},"RawCheckpointList queries all checkpoints that match the given status."),(0,s.kt)("p",null,"RawCheckpointList queries all checkpoints that match the given status."),(0,s.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"Path Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(r.Z,{className:"paramsItem",param:{name:"status",description:"status defines the status of the raw checkpoints of the query",in:"path",required:!0,schema:{type:"string",enum:["CKPT_STATUS_ACCUMULATING","CKPT_STATUS_SEALED","CKPT_STATUS_SUBMITTED","CKPT_STATUS_CONFIRMED","CKPT_STATUS_FINALIZED"]}},mdxType:"ParamsItem"})))),(0,s.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"Query Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(r.Z,{className:"paramsItem",param:{name:"pagination.key",description:"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",in:"query",required:!1,schema:{type:"string",format:"byte"}},mdxType:"ParamsItem"}),(0,s.kt)(r.Z,{className:"paramsItem",param:{name:"pagination.offset",description:"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",in:"query",required:!1,schema:{type:"string",format:"uint64"}},mdxType:"ParamsItem"}),(0,s.kt)(r.Z,{className:"paramsItem",param:{name:"pagination.limit",description:"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",in:"query",required:!1,schema:{type:"string",format:"uint64"}},mdxType:"ParamsItem"}),(0,s.kt)(r.Z,{className:"paramsItem",param:{name:"pagination.count_total",description:"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",in:"query",required:!1,schema:{type:"boolean"}},mdxType:"ParamsItem"}),(0,s.kt)(r.Z,{className:"paramsItem",param:{name:"pagination.reverse",description:"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",in:"query",required:!1,schema:{type:"boolean"}},mdxType:"ParamsItem"})))),(0,s.kt)("div",null,(0,s.kt)(n.Z,{mdxType:"ApiTabs"},(0,s.kt)(d.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"A successful response.")),(0,s.kt)("div",null,(0,s.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(d.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,s.kt)(p.Z,{mdxType:"SchemaTabs"},(0,s.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"raw_checkpoints"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"ckpt"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"epoch_num",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"uint64",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"last_commit_hash",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"byte",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"bitmap",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"byte",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"bls_multi_sig",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"byte",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,s.kt)(c.Z,{collapsible:!1,name:"status",required:!1,deprecated:void 0,schemaDescription:"CkptStatus is the status of a checkpoint.\n\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.",schemaName:"status defines the status of the checkpoint",qualifierMessage:"**Possible values:** [`CKPT_STATUS_ACCUMULATING`, `CKPT_STATUS_SEALED`, `CKPT_STATUS_SUBMITTED`, `CKPT_STATUS_CONFIRMED`, `CKPT_STATUS_FINALIZED`]",defaultValue:"CKPT_STATUS_ACCUMULATING",mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"bls_aggr_pk",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"byte",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"power_sum",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"uint64",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"lifecycle"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"lifecycle defines the lifecycle of this checkpoint, i.e., each state transition and\nthe time (in both timestamp and block height) of this transition.")),(0,s.kt)(c.Z,{collapsible:!1,name:"state",required:!1,deprecated:void 0,schemaDescription:"CkptStatus is the status of a checkpoint.\n\n - CKPT_STATUS_ACCUMULATING: ACCUMULATING defines a checkpoint that is awaiting for BLS signatures.\n - CKPT_STATUS_SEALED: SEALED defines a checkpoint that has accumulated sufficient BLS signatures.\n - CKPT_STATUS_SUBMITTED: SUBMITTED defines a checkpoint that is included on BTC.\n - CKPT_STATUS_CONFIRMED: CONFIRMED defines a checkpoint that is k-deep on BTC.\n - CKPT_STATUS_FINALIZED: FINALIZED defines a checkpoint that is w-deep on BTC.",schemaName:"state defines the event of a state transition towards this state",qualifierMessage:"**Possible values:** [`CKPT_STATUS_ACCUMULATING`, `CKPT_STATUS_SEALED`, `CKPT_STATUS_SUBMITTED`, `CKPT_STATUS_CONFIRMED`, `CKPT_STATUS_FINALIZED`]",defaultValue:"CKPT_STATUS_ACCUMULATING",mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"block_height",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"uint64",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"block_time",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"pagination"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"pagination defines the pagination in the response.")),(0,s.kt)(c.Z,{collapsible:!1,name:"next_key",required:!1,deprecated:void 0,schemaDescription:"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results.",schemaName:"byte",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"total",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"uint64",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,s.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(l.Z,{responseExample:'{\n  "raw_checkpoints": [\n    {\n      "ckpt": {\n        "epoch_num": "string",\n        "last_commit_hash": "string",\n        "bitmap": "string",\n        "bls_multi_sig": "string"\n      },\n      "status": "CKPT_STATUS_ACCUMULATING",\n      "bls_aggr_pk": "string",\n      "power_sum": "string",\n      "lifecycle": [\n        {\n          "state": "CKPT_STATUS_ACCUMULATING",\n          "block_height": "string",\n          "block_time": "2023-01-13"\n        }\n      ]\n    }\n  ],\n  "pagination": {\n    "next_key": "string",\n    "total": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(d.Z,{label:"default",value:"default",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"An unexpected error response.")),(0,s.kt)("div",null,(0,s.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(d.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,s.kt)(p.Z,{mdxType:"SchemaTabs"},(0,s.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"error",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"code",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"message",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"details"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"type_url",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"value",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"byte",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,s.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(l.Z,{responseExample:'{\n  "error": "string",\n  "code": 0,\n  "message": "string",\n  "details": [\n    {\n      "type_url": "string",\n      "value": "string"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}k.isMDXComponent=!0}}]);