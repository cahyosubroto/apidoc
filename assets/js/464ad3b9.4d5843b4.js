"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[2790],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),b=c(n),p=o,u=b["".concat(s,".").concat(p)]||b[p]||y[p]||l;return n?r.createElement(u,a(a({ref:t},d),{},{components:n})):r.createElement(u,a({ref:t},d))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var c=2;c<l;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},98370:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>y,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const l={id:"babylondkeyslist",sidebar_label:"babylond keys list",hide_table_of_contents:!0},a="babylond keys list",i={unversionedId:"cli/babylond/keys/babylondkeyslist",id:"cli/babylond/keys/babylondkeyslist",title:"babylond keys list",description:"List all the available keys on the local key base.",source:"@site/docs/cli/babylond/keys/babylondkeyslist.md",sourceDirName:"cli/babylond/keys",slug:"/cli/babylond/keys/babylondkeyslist",permalink:"/docs/cli/babylond/keys/babylondkeyslist",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/keys/babylondkeyslist.md",tags:[],version:"current",frontMatter:{id:"babylondkeyslist",sidebar_label:"babylond keys list",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond keys import",permalink:"/docs/cli/babylond/keys/babylondkeysimport"},next:{title:"babylond keys migrate",permalink:"/docs/cli/babylond/keys/babylondkeysmigrate"}},s={},c=[{value:"keys list command",id:"keys-list-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],d={toc:c};function y(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"babylond-keys-list"},"babylond keys list"),(0,o.kt)("p",null,"List all the available keys on the local key base."),(0,o.kt)("h2",{id:"keys-list-command"},"keys list command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"babylon keys list [flags]\n")),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"-h, --help         help for list\n-n, --list-names   List names only\n\n")),(0,o.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --home string              The application home directory (default "/home/<yourSystemUsername>/.babylond")\n      --keyring-backend string   Select keyring\'s backend (os|file|test) (default "os")\n      --keyring-dir string       The client Keyring directory; if omitted, the default \'home\' directory will be used\n      --log_format string        The logging format (json|plain) (default "plain")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --output string            Output format (text|json) (default "text")\n      --trace                    print out full stack trace on e\n')))}y.isMDXComponent=!0}}]);